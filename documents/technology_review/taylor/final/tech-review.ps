%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: tech-review.dvi
%%CreationDate: Mon Nov 20 20:56:44 2017
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold NimbusSanL-Bold
%%+ NimbusSanL-Regu CMSY7 URWPalladioL-Ital
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter tech-review.dvi -o
%+ tech-review.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.11.20:2056
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E5DC3FF0CA6BA2B37E3BFE57D69E497510C9A84A
76F6A2812AF05BE4ECCE8A4C95E1CACFF6D389DBCCBBE4CDB35E9AC7B9CA647E
44F7C88874A4BD1BAFEC8BF60722713355D2CDAB5789904B3FF364F59BCC30D5
93015B4C63E38A6105A0E23FA25DD024213A61BD7765AF40D48A4E44A16A51FB
C10F2F4BD0EB7475E396C85116AECAA4F671E3A60CBB746D364C09DED261E309
760B150CECE0D45E10BD736B633C8ABF3817168828BCEC4DBE7679F7D60AB6DD
C04938A42C94809362960ADEEF68329D5CAE9EFC75DC15A9494E876104F448B8
BD40190510310F0BE1B88E80F8DFB0CEC463B427C6E44CEC46B305D67E5C253C
DB908754242EC085EA919D0D096D862AB1F528ADC04010B860F00BC41A73164E
C0CAF0220DBD01CBF5D8D8F19B865E66B2419BFF61D9A893DA0177CAB77BB183
F54581052B6514CA527546F0599F0977CFDFA594116E4FB1CEC55FBEA74AA02A
DFAB59DE70F679945611D8CCB8AC705A2B6AD172CF9DD1B8DC9E23D1751721FA
293BE262D6D5A30CC2AA08330B9FC2E2E28374916E358C45A331762E77207E60
22E9D50B282B1284DD9EA66137C293F175DC8CEF6F2606541EE7490588B7B360
B6644408C1C457B2B4B6AD53D22C67800381C5E71D4CA126DDFFF132BC70894E
DD4B14385F5BF95ECC01C22DF26ADE0F04859B03FCEDCC76505876A049DA9D64
4D232F80A92F74C72430C349E0C6EEA3B4835A64DEE8D4BCC1FDAA4F84C57F6D
048274CC2A30435544899E9BC1914D7BC3394593C5B714D11C02CC38D1DD42E3
743F6FDFDDDD64B26607D758E07DFAC7D2B50BD6565C65C250363548335C8B5D
F6301AA083FE1A07277D77FCDF7E4EAE891CE71309143D41E4DDEBC0217B85CD
DE5ABF9FF0721041F7EDC400A14B391A95B8F28AF3FC28788C7B0E832B00E5C8
4DA1EF55AFDEBE8E841E14E39CF1D5B3C1CD054DFFDFA024DBDDE57D9079AB98
17FACF80AE89429CCA66F374A0C6C6E85A21D3DB5FC311DEB18B23180DD802EC
4F317FA12DB85E6371A4759A9881EAFF19B54CDA8969F9B583A0EA7B94622971
94B533B4807AB76759C4EDDCDE6936EA527F5BB556F7E2981B87B73D560A8E6E
E0BEE3408D38C8E6AA89E0CDF053585739C74104E048EAFDB5645F4D2BA69A88
728874706381E06CAB4FEF345D361E6BFEB0F1EFB23A86621421E2B0DE3A365F
9948A115239FB86E05D084E7018204A466DFCDD5B2687F865B2AF89C0E417211
4A8F13DB333E91412BB94B51C7B06223528E77472552C3C9F1DAC8860D53424C
A0A3217EE0DAD89D3DA90324D962E2FC6EE2EADBA9BB3BB3A700B9EBE2E9CD33
5254202BB28A804155FF345FCA18CC020B7547F9A5FF04A8A3F71DBBBCD5FEF6
035D5B4E045210812BEE1D4956C20903CA66F0F1CCA7E86E31B290C39056B450
72B1FE8B3DF2B46EDDF9482B563446AEE4ECF1426DA1C68B7562789009199A36
1060BD6875F80C3BE60ECCDECFDDF039B7A843BB1596EE86E6F6967E4A792355
02FA6394EEEE2096B8CCBBF81E45BB1DC86E8ACD2DA44C59DBBCF4A23CBCFC76
BD0A3CE9AD88DBCD9CA63673EFCB527595851B12A3C1E1FB53FD9B346864E6AF
66248FF446F974F01DA8B66CE6C6E2484343AE644DFEA9061F746F9C9361F20A
A1AA988ED6D317D469F441BB5B31026B49433392C8930BD9661B23C2EC0E0BC2
161141AFF247D80A42CEB4EC7A6BDE7A10B32CE408CAE385C837EE253220A279
F05876328864C9C22480FC8A07A7593334F5596600AFA61B697507FE0753D588
64B70F307C0F59500B5F331E1E3EB4135A0D606C62461F5345962DED3B80B0BA
1D11FEB59B435F3A45BF27934EACFC71131694C40570CB6DF49A863899D1AC0A
3728D93B30078E6C9666E2F919DD8B7797B7D0A1AF54091C4F6CEE2E5610EE5F
4C312C92CF546F8689777BD80A56FE321A021AF415E1A4D919524EDD6F37DCB7
430ED97873BB87EC319B47AC20BA651D881E2F584C8F831C81BBDEBBF309E088
8DAA2243BE8EB77F62190AF8E29093F523EF40908A64CC60689A1C0D31690025
1A464D786288D0EF6D734E2DD50C49C1D678E51A9B7CACA602130B0388A996B7
B3D108C41E546498E4B4F38BF7CBED1950B393CDACE09A2FD0D67A43C665F358
E21E561FD8CD391F931A06F70B409BA6880CB1533D0C687064FBD8E6468817FB
1E783B6EE91ACFA9F12FFBFA2B95ECCF029A6B18A512D30CEB0B6ADF80F8440B
C25355F5CFD0C1D7A2503DC74A13C24B94E5EB39F3CE0C68DF3DCF39C65020DD
923A8DE1D9C33134E7F60B88942FCB8B27C8C15D34B77577A4F2CA9A204F04AE
B03FEF3B12D9AE0D47CF5332716FA25C28AF38151C8AA138B59EECB77CB5BE8C
9A7418389C6BDA4B4C4AE6754336416227A68E47E30ABD93644E4C2696B267D8
B04CA8D3F2307C8F88CBF47F32CD5EA9710DB0CB1E0C1CAB3C9C29062266F316
3CC283F2D875469E5AD3E14CB390C69AAF35BA7EDDE81608783D42313E7011E5
E7CDAF903BC5C04FD64C779831D9C0ABF2D6DBFBAEB83BA72142956816718EA0
B7B9D90C197797D24B66F7FFFF97CEE78767480260EEC8D5029AD1671AC78E8C
E15C601F21D13306C68C0DAA5CAC29115558DE903010AA28ED86A94CDA77F438
BED808D6EF3D88FB6EB89E61866300ADFF7755253D5922FFCF31EE3B1A3EDA8A
4CE10878DF11C10A2754486C0F0067967A1A34D4D6BAE7E19437423672A26BD5
F35295B8EA323340D1C1B6B67463B6F7FB30D8451FE4FF72E37B838A62FAA3AA
987A899E28E866E230D0CD46FDECE92D31E7470A1A1EF5DA1909F3BD50675E72
250C6D69FD55C0CA00A4DFBC5FD6E194AE12B913057E45806BF4A1B4DC1AB266
14A99A23B8087C08A5D1D0437C2E97989E118B23B5423462F3F0660A70CDDD74
8B565CDD286081D1CE83C315732D87F6B8EA0D750DA0F79AB6C3AC1702E04E6D
A9C3519FDB99E8221938EE7A4F9FA9FB0CD5AC7DF277E960A3BCA5CA8EC67403
668107AC0B8777896613C9604B40826FCF9CA160D930296A0F8E2A9B99839102
05C9B6214CBFDC7231B5ACFE00F965ADCB306DCC1E36DAFABEB0E4E27EF216FC
EC8EE8A1AF64F21C3849543D3C75080EEB06255CD93C2203FAF11FD52ACA3520
F070D602FB6D02F57F18862BB6BA8B76ACC0936AF0B8A1183D2A9EC5ED3EE651
23A9456E309676B5FDDC6C72BC0C52019F55265E3E41096E4153B271D6B57F53
D573CA05C34339BCEDC354089D82313762BCBD732FDA5290D59AB2F75820FC5A
EC19A4965A94EE011A64D7400FA62CA98ECA654D9F50148C66234AA05B84C110
64159B74FF05528FD9EA2257D54D24DBB802F77A52E9697935FD7B1DEC4B6AD5
0510FFD4481BAD491412F5CFEE7D8EC1CF424D0A6FF1E75D6A643E8859E41C5A
05682ABDD2C69D748DE850EED7E6AA64BC7C7273CC69B077D1476F2C570FC17D
BB5E36C64247F84F77567D49A7EBD57E291F7B9613C9D7F7FDFEF38E9DA3FDA2
2ABECD636B236FEE290F14D71DD6E963B1E5885C35DBA5FFC1CEDEB815A0DD98
A453C5CE6923ADB7239550CBDFB55FD65697FF0B85FD39BDDF761709A6B62B95
E1568A318FE982BCC5350CF122388E09B6946DF19814D9530E8A6887BD14D558
0C88C5871E9038CC67B5F7D42C6FFAF8AA0B6CD15D4CA8C3B522944E2DFC054F
8C397A34C42CB977A3CCD90B96ED207BDDE155BD63300FD44C35250329D5BAA3
159E63FB30583AF4290274738CB7DB4E9A14291AF15CE3BBD6B3B90E56A5F179
5FE08342FB4FA5F83392B4B54E43ABAEC2B2DA768C31E35C395C3BF67A79F8B1
AC292F38AB2EF10CC7FBCBEE39D1269CF59591E093473440FA2276EF903ADCCF
2DAAAD831000E27307D6CB2AA6ECF5F92F0DE5C17026C40204D23ACEB473C65C
768D28FCE6BBEABB900A6D8546E89E3B58A5E519F34D465E0130160CBFFA6FF6
1693FAF103AAC05C4BE35E62AE2E81193BAE8386E9FA937A0093127A715FA8CB
D9B0CC8D405811E83F9D6F40978896B8F7A0B472D1F9FFC68F7672C66B0FA98E
AF74A87B9AEC2D29AA0087D5166077D69DF9243C4E6488D2D3CC9C266FD12E12
9320B5159C07A9A623AAC35969666506F5C9E5BB07EEE8B93AB688D157388E7C
54C8C90CEEE5A3E69465E58CF735189B6475EFF13E12A8EDA3E0ACC243B10732
80AACA02CBBF11C6D4E691AA899C9E6F9ABE2E2757402F9F681B07293724911F
271963907268939A7077AB6325F3DF3C86D3D32879A5F548ECF75B9807C8A602
96CADB9C6A6CD59834A853BBD985B34755F069B732646E65F3F33BEE98F4148B
65F4AD87FA59FA1862E42777EC6232D77B7DF4172993E0067948573F3713E66D
2E7B84E9F184214644FC6EBC872405B7183D238521E06B3C0D730AE24347E2A2
F49EAFDDF799D3E1632ED948C3B94CB7CD358C22520D6F3755C0E6DB1627F6E1
0C90F2B9539ECF457ED954A6E6A2F6F710C7751DC7C2D4A84647643EAC4B9184
FC3BDC74E970FD0A374046855EF9FF21780EAB6C44BF9A8988B21BB6479A2F33
6C30AADB17FB228BE99B71001B0BA457D81167F03872001A9702ABC73702BB05
41E77002B1E758D8C75D7A2BB7165A2152E3E282BCDE4FB684864C6798A891A9
BE82A9AE8E5620471CBD479A4D4CAE1E7DBDEE4F224CBC1AB86905ED1D78E2EB
79C6898661F19AD1B5B21849F483027232D2719428431797452DAB0259CFFF2C
C06304B71252CAA4855B442011F240BB7390D79EB357A06CD67E2D01CA450BC8
DF6000D7A571696DFD366D2040E3835798214F66E2585DD7181AE09F38A8152E
34920B956EA271832D72E7D6DB5E4CC7B10FC6DCDCF41556C3BFE5E2ECA8249E
8D39B75F2DBDCF84D5BF3AE6795B23AF56AF699A7142687362FC574EB79B143A
4BC2515A46A3FCFF48A07439157A6DBD2F81AEBCE53A2B5DEF7197954D8BD6F5
D4C7CCD9314923F532E28EDC1F4EC3D0E698D8235E2B686A3D22F12830D99553
4A8D82E4B822F07B115CAEA688B9AA83AE2B91C0C602E587E63247986CC3B29C
4B46BB4AF81F71E37E6A0C5A09FDEC8D3678C1FE53DBD30B5FCD44610F085652
BA05177872A46DA310F17C1BEBC50FEB070F64ECB9A680818CC95EEEC0165C71
2FA50EC719ECF2D3EF075DF53BFB6E634E134443FFF918C1A9767190310A7A22
A46895D1F5B665C1AECA4F3AC8A21310A84CB7CD7B6E984DEE494AF04CE49487
F775A0599868C883DEFDE65E02AA6691FB6A45A2ADBA75E7143885A316E5CCAD
8CF69F89BF0EE793A106F8834853E2AA9EE2548FE4D4697130E36A29ECD4514C
A0F01E03571B1259DE18978168DD76AEC282361776BE683B395AF38718F27A9A
3936F630B253D906460DC6DD375E9D009D8C3B5D6AD11645F44DCF34014D72EC
10A79838D648B56545824357824C0DDF2FBE36276FCC5A538CB4A58590A3D15A
7909F01628C414312748E0A60E83AFECFC0279ECFDE314BC8E0DC8B46972A427
EF5C938B1C0A5838F882764801349371FFA0C70AA127E851A7FCF927153CC536
09ED71175C577671BC19B28AB0D4120B492C05CD1ABF6DAE0D21C4B772B89678
FBA6719B66AA3E4CF72A096A4DB75C50FC5178625AF1A4BF8126488FA258BA91
1BCA15FE8B3F7BB6A37006BB78A958D2E525C914AA0E5F0E3F4985DFA8D605F9
D313F0149EAD52BFA5C9B1A3C7CE5A0F6FEFA4DF079AA7B82CB87C89F5981659
BEB069C312FE662AD7F9482ED2FECE68EE8062D1FB8189C8491968B72C318600
14B776B15515CEF51ED5972E596836A091CB323304BB3375A999CC3E1C09B7CC
7BFF6D08F61C9F4230883C113C2E7A8DF0AB9C9B35E71B0BE1A3A70549EB453E
AA445EA9D63C064A8F59A7C2A539E22A89ACCE256F38EFD573A88AF076C9B79D
8086024D3F85ED1599FD2F4F32203748F7A097529B9CB44D2B97356A69511EEA
CFD4B11BCDE5B8BEEA52ED09905788E888EA62F3B1CFD04E1F92DCBAA4E6698D
6FE7110D935A09FACDD7AFEFD83A30ADD2B39110AE5BCA227144264F21AF2EF6
A66B248EF1D9B32D4334EF8EF19125F9A391C6CD0DFC2CAAF6F2F55A8A2A7E3E
F507FBE8FACEB0F5FE15650CF4487A0483015DB08CF38F36261DADAAA22C9FF6
2FAAA008846FB9BBAF5E9F626AAC0FBBA7E13331A60C7989AFEA446C6A57FCA3
FB22386B52028C4284B2971CE5058D11D7E646EA4F7DFD7B2834DA8D9FDE92C3
33E1CFD74F6DEDC37DA561FBCA6768A0892EAB311154ACCD644C53C3BBE7A46B
7FEE0116BF2E339670A60D3A5D51CD0ECC463A24EFB75F0BFA510CEE783F83E0
35F6CFF73883B6F10E3C84FFB58EB12CB89C92216ED322F3BF174291612F91FE
24504500F86DB460187D76F21422EF016D8FFFE2919B750C41D7EB92081256B9
4679521863DAE6CB87476A064A212754B3D310BA4DD9D7DC6412C076E9AECE6B
5F0C1DB7D52CF90DBDCCB31A8E2ACCE67A22B1E064AF38DB6592B324D8CB65F2
145800593B999BE2920418067A8406791A29D28EA30D94D51643724FF2635BCD
C33EFFFD3929AD4C604E6A8D6BD31793309B935DF28B36708255E193225BC674
3DB5D54FFA1D9E0BFFD1C096421F2794325EBD4750C84E5B9CE2B3D680D10CBC
1FCE6DDAFB534E82DEAC5DFF448811EBF91F507E94002A04661D1BBB6D26E6CB
2CAF1E4F58C8495F8C2E12B7FCF7C395F974AE61537E5925A2308B5B7341714E
BE3939A2B351C72DC9889E13896C0D96A426DB4A8E2EA911CBB3BD57F50991C4
F2E99ACBE12B66291A897CD4881BE77F7CFE0CD9A774A74015652193239D5D54
0993327B49BC1A631EA630C0CD075741A20668EE7E73013626119CD946BAD21C
844DB0A77A12C21BFC9C909A196749E8281F8A2B9B5E87B6EFE9FC7163082439
4CE78CF68120CB3083067148A3431868D25DBD357EBE6C292227483AC63B8A22
45816B52AD73F9161E775B858F0AFFEA6AC7C1E3E42499F9F75D0342E5B4CD35
CA06E0A4BFBC8C11F0DE8723809F99244CA8D6E3A2A43B7CC317DB47C96ED8FD
BA2D3363EDFA1FFDF004D1541F8C8E22517C97A0B939242BEBE54D643F7C2A0B
9F8387DF2470A8B638AC77414C3DF6B42C8F37B61CEF597DADBA83AB841CA05A
37744F22EA2EA7804BCE0843234A58D3AAC084052043E6D008C142CDB698CF66
2C8C33D41DCB6F64BF65364E08F7C6679112E6125CDBBC600C2B478E7511C2B5
114D05E133031EB5DF8B2A38FEF75DA7C89AA59AD9E53A6BC20A08A7888A0039
96F6576E5AFE645109B1AA5FED6032BBB51AA79BA21638C93E0ABC541424D212
9CFAB5AC3535115200C6D6D239314B44EF1A038A2928E8A54714ABDF81A85862
89CA9E9BFA52A49EA48B830932709065C4BC10C84DF71EF7096DD04B9906184D
F1866B1B6B857266B921EC086DCDCBC3C22A9F472EBC7031FEB109F13DD19AB1
FEBB738040FC7C3A3CA703609C2B3AF82A5A0244BE5B280EA7952A778F668A36
5ACF1F5AA68EE1E0D10C0412B2258F523C2DC7AE3950B73A91652DC08AD8AD64
45D23839209CAE9CA66615223F51EC157F39CD5405D6E854F5D7A6DB68346658
7E71441BBA4ECE8E15F5D95EAAD0316A5B86D40F93B068A573248CAB6870FF51
6E8A9704F956576C172765E177F8AB26C1674CCDE42206D77BDF1BCB092E0E5E
3A8E6FE387A004342ECC66E68B983E1D851338727403A937272A1D7D87C01ED5
E6E49D8B44DB0BB938F880D1B9147A7CAA860B2B2C6DDD7292A7FFB35599AA09
06AD0CEC965E15D5D2EDDB159D59122B44FB530152960FD7F09AB83E0ABD3802
C74D5347FB2B97E46E432547C47E202B17AE4960BC4656933D9B961B6293F59A
2353D4C0A4053E4EF3B4C3ED449C865B34A9506A539ECC15163078821BC0B113
1DCF23E5E3E41E6D2D9F56AACB566E75B70E39DBE4E45237AAE0907D4B745534
7030FEF30250D7448B318C4210875BB86B4B657DE23503184AC5C0E91046F1B4
E859D84E033E233799209B7C8C8E8801E363F92184716B4647EC18CDFF709E64
E4A1C239F01DCC55940A6C08FE36F9755EB5625078B1A34B3FABA0DE1F8C6E2D
BC3B57D1DAB03DE683E66439E69073EA4F94B537D576D1FF6AB1F8AD467034DA
2AF1D052EC5CF18A1F81F3AC682195976D89C9E36EC400BAE4482F0876F1BBBF
0C3425BF1513054B29A691E6864CC0D9DF773853FCD3C0935B422C912C9FB614
10EA545EBFD07AFBC9394BA931B6C615119CDEDAAE263C9A3578EF055A3D7A29
877CCB8E4EDFC64B5371EF916CC210385FD72FDE4E06C1160DF693AC5D74D10E
B5BBDE25736D659BA4818202DD680A08ACFA2E1644CB5CE037B489789487E3FB
900F815A01D7E649DDF841FACEA1F2A77137D01094A2F330F4AFF0D53AE1CEA3
0E7263AF32D07DDA83DFDF1C99F85FA669C46445F656748B873A24A37CDC7648
0D6B91058857C3D1585F26223C2331F8473CC29ADC6AF452F646A6761DD79009
8E9D1BD2CB76C189ABB7952812275C664C0D45AF5BE0D66EF95368F369255980
349DFB18C4061220302AC8C43D2D6DA08C27E06DB5C2FB20B22AB9AA33458573
B7903E361DAA5BC1326E0488726E2D6F672352A15EDC86BDF103CB1D43978B1B
06CCA7F5E45D7A354BFFC36FA1A344F9EDCDECD6B5F6907657BCB470A3042A36
55D86438DA9D24DC1978AFD87934AF5BFEAC00EDE5DBDC59FDD49505395BC6E9
DC477F6807DD209828B4873032E0A35FFE7179D2096AE48F387E2523C39EDAF5
CD7F0B9848B66F3FA5F7EBD0A7DEDA931A3F3AB2A52ADDF6EA9B2B36C9FC633D
04FB8AFB4228E744F80DD47373B2F29E7840A4713C65620D09F8EFFE7766EDBD
7CE06A64C2CFF9F8530FFB377CDEBC816B9E8F767240D2852E8CDA5B82CE6346
8E0AB1620CF517E98EE8437F47D2A1F30D9AFF3A7ABCDB26BC852F5DE03B3D0A
4233EE942AB48C780C1D9A942543FDE90924C9DB3A5D667E0AF18066F6AB78CF
95085911926F07D965CAC05C5F5C13676E097E049CA98E8461FC7F9A68707004
D825BBBF84FD99940548E6E6DF52F1B973F8237718D36D2C06E7E34577D27A3E
B55272A935EC2DD30B9897C1F15AC33492775B2B72DAA58E88A79C8D4BD07C48
25B47DA06E8F175DF29B432088394980E6B9CF45DE0F5CB5C73F941CD30BF556
A38C0497797447741B02C1A4E8BE81DD4FB2A6275728FB85163B2E2D8FF975B4
C5BFCB89504D4513CD483AAB892ED473527B2636634A369986740FF81ECD6153
D837C098342260C6809702F28FFA74F2544EE405FED6DCA669D921F23DE63995
B63E7BC74A1EA9079752B0985AF8BE3D4DECC613DF88D28A9D37D1EB182F0772
719B6F398DB7B747DB4D05ECA9F8E0AF2AF7C74DB79A2B45A47D4119D363B0A8
A88321F1D711405CE8932953D69522329B698729A637BBAF67589B48C84DE86F
CDDD4D184B193736C5764EBD3153D5DC1BE1810AE5AD8646CAC4CEE0D417E875
D905ADE83CB1FCEA21FB89065ED98CEEBC0A2B16D5EBC9441AC58C23F82FA312
32BF9D0CF9C597D22FF591A28B7AA326BCFE282588EABC04F4E40A4203777334
9DE530D0A94FC70C954BEAA33A81A5EE27B9220C89DF8C7471DB43484905C482
B190C7FEB04E13FC963C0478D72B6219768CED938CD8E2B0B0F2D0749BF87983
30FF503E4B256EA412CD417BCBC3867D652C533FB0065C5DD170F61C4894B6D7
BF28E33F80AB231EB84C822B626F0B4DF1B70CF6E15946610E9F323CD7F2A9CD
574B60FCDC337885A437E72E6065176FD93E17F5A496A944403D1C41B3C0B253
EC26E56FE765857220244A9E98E7F4D6E5435B0A09606DC105623C29DD9D1690
4A62D35521EC38382AE639190C95C4C9DF1F49D41B4604264A80570E47C61AB9
B06D2DB74F828CD6355CCBBFD6CFA982D1EC42F237D54405526ECB12044D3E4F
CE173420B130353EAC9DCA9440396E739524DA99E494D9E1FE8EB703797B611C
DDF07A92EF5AE62DCFB82C50EC9EFD3DB2AFCF4C308C9E0CEAFD7FD0FC896253
0A98376BD26C39075D9EC1A987BA358E5DCC127C76FF82E579A06D8A3A323458
808BAD0F4247B72CD876F5D5A2FDA8A6B734CC5C8B3EE78559783F73937528F7
17EE2E59FD9E50F7090C17AA2EB223C2B4DF1CE5ADDCE021A7C84541082A2FE6
6D6852481694A8CAA3A1A1BE80ED8FF0A9C509420006D2229CC525B2E2165D23
59AD152CAC44BEFD085CA5CFA8294D816AB164FA957EA1805B978529CE833B1E
ECAF947E67DBA70737207FCA8C9AC9557F97784FBE0050F215500F281FDC410F
FB03C0423997AA40E8FDF374779AF2363367FCD9807709817055B8EB37074295
58C69FA1F3B656410AF652E11A75FD38ADF1D15D6A0CC02BD9E2665DA9C303BF
E8F55F1E67BC40979F9B86E0222012DCA626F8A2147CC34350A50DD561FFF7E3
669A392CC6F47981F4D01BABA31FCCAF24F94A68140F4D6AC48569F45B6D4B76
D2E51A0CCBEED2908CBA3FD3A288E01E2B9173557BD09FD7C060FC9C322336A2
B09FF81FCFFF0C08B845AB92F0C55B185E1DCB14E388A7FBE9450B2C30CC01FA
83D0BEBB79CAF1132648DCB3230B8D462CB20A3744A0FE7042B80B0E772F332A
863DD328D3DD0C225D7003B6A736712541A117E690134A5915D13634B978BB1A
59A4EB50D74F91C9239CF4C1E79637F3D2C387CE7AF1C14A1ECECF75F9391717
0A43C2F83A934FAA37B9DBBC40F6BB6B08C5F2577DEF8B28495A8F86D932F96E
9D5D5FC96E76310B7996DD675BF05F25EDEE95229C2E20ED553B01B04A459450
4F32D66BB372D050288238F91B6E16686728FCE80FD44B49B8F6C23C65C5EFDC
22DC951E24D336C1BC5E4FCFBAF202BE474E955DAC304E89E2704D3E692620BC
EB22D02A75842066E27FFCA78D9FF4121EBDC58ECF17B1981BA1B7FA11716776
16A7E3BD4C4624E35FAE419A2BAC8EEB2FF532DB53F8B28B42C1C8C5CFBEE735
D738C9AB8F3026A56B75EF5B989F0612C3BDAE53C139A0D839577DAC3CCF906D
C0B2EC83A415DD700B88DD7F00012E999A799938B93F1C3B3783DD1891D366D0
C57C920AA83487460AB9F420149A70E9961524B8FE791433DB13ACBFE7BC7A8C
049B9E37923711193AC92BF2B48302F72396F334D6D74519C891973DC110D759
C338C3001BBAAACEBA4BB9FBBA8AB8BED1EFFA6074A48966D298CB7FF5644075
BBD16AE25159611AAFDC9CC4D28A5D35370096AAD6E7C0EF30556943CC880C11
A11A2693D33A6E7B4F493495F185623973602A25015EA13BC5DFC5DDBB419234
5B6CA58FD83C5458AE4859C1EF24F8C70E268E622E9BED11A6C02B4FB6C73045
7B0C1D6D9E1B156E50676ADB21FB7A6F2400237505F436F9DB9EA572E4ECF494
58E69E0B71408E905647362669DD8ADAF4D1584F55FBE364EAB97BCD23FB34E2
E96A08337810F5C6BF214B5C12A227CEC0DCDFBA9825921963F680BFC5157389
4FF976BF8E3A3DEDAD4BD1B83934D56BB592E75C3C8A860ABC418E3EB580263F
17027BA96ECCAE44998F5A6EE997F2CA8A7A37716EF4B676839607D80940C76E
985C7F003CEF4ABE5933D26192035D1D9F2221BD943840BECE719C9B9B14DD9E
B99DB191673F61C95302DDE0601AB426CBFF4B3EF79021C9B07F2A217BA7733A
EE8B7312FB14D9A625B1859852F5354B44377A589E95BC551AEE128A8210796D
7166FD0227609F31988639A67C53797858C1BAADB95B0A9CFA5AD51A781C1138
ADF7388E73C95AD7D4B293D64D65594D5BB730166143A8A2D0AC5A58C9F02752
71EC63DA793F73BCF3EE3B1A9713DEE940C47AD882BB60D3A9BA5F259A596D32
2402980ECB71E29D4D51001EF6E00C74F4B9C60A9124CFCD7B7B0BAA98C388DE
B17A05D39A4D02A8D6C95F57143639733B18B03B9BE9EBBDC273D457F424390C
DC96E55A3217938C17FCC20895FF92CD6E5C7794E3488C693871722D0B3E7A68
471906411CAF6FBB973412CD1FBDC2D46F3B831B28AB23B29652904BB7A75359
47DF797E269E4E9516BDC07972C1E9A5570D884CCFE1DE27707C31E33881188F
0583355855A5B08CDD22EF7C3609C47F3FB89CE14804554DEE07458E8EBC5086
D67A86577A4BF54608501FE1510A9914A22A1B3C7141707C3069CA95E9D12273
46D7B494C0BFA0B6082CCD9F30A28BCD129EB5B21961974064A5908646C3E5E4
514F17CD8A921109416253459D973FAE3D88237B219799AE6D6D8D3E4097C71B
0327E72F3D80D4AE52A5D1AFA856CF5AA9F6EA13DAD9D3914BC8EDCC6B3A3A6A
F2DBBD2B60349B21532555A04553B64057CB9242C9BC2644A88E35B135CDAC00
2F5B500129706B7E07983E069B85A57224B2B7C7D68EA43535C61093EA5BD39C
3C8593DE0861EC2FD958CE50F93DD621EB10C2F1F8445087626D2EE677C8D212
77083B5EF47C60AF757915B442F94642D6A29B89186D59C8050BF766E78C4F87
A41F9CC51DE22178B2993D1905C3481799CC0CF358D474BE6E56FE6ADD618DCE
DAAAB14D276F0B89DAF61D25956656318D20C8DA3ADD39DAA3A581B270CAC76F
DBEE69DD441398AC36D0011C53E7B33DFFC6D83FC4473F0567B083BD0ECDAE65
624DB7596ABE949ABCCD75FD3D866DE6333B628829C80E1A807771D2E04DCD09
CAE9F3D17DF30E05CFB71F6F6F83704E03EEDA9B631A8CFF4E36B95167109BDA
30013A933C31E296589ACEFEEDB8755292B5F1344C39DBEC4F3E26CEBC168ECF
1A4EAD8BE8187274D7BE7B00FB7C6C1C6E49B8506ED49F1AA39E347773ED543B
1F7AA669CD6170240A92B8EB396A0E6C627C3D424A3344974580D584D9367918
7A36645D5893D06E7E4BDD36E6744888C090202B6FA39B7F63A702F54E583A39
0DA97D86072D0DF513A5ADEA174B579CB816695EE48EA0710C1F092CB0D084E8
EA3E5531E95FC32FC96CC800ED118E2472E03ECE59D8E1E06BA5AFE14C423BFC
5ED150C61E0D8CF61F27829B0F4F0884277B00812336DF3A050C1CE3578090D4
B287CF0E718CDE25D4A148CDD818116124F013945A381EEFE8ABB3D2BCA25A69
8FC53E3C797F9880D8D6DC6AF5101B4D2AA0B2324875E18EBE61914102AD4ED5
33457EB62D16E7F7BD75F01B9DA9822F446AFA71C5C311AFCA5D3E3A34C06804
326CDA1BEFBE49A8B14D6A1B9BBC96684F77E8F20AD994A1C3C01193FF31956E
A562E1B2084318229E693695D35F697DC9A6C9A818599AF1074787953E2057C6
6403C66761EF38701A56ADE74470D578E67B3A6844A976818A04E6E8B5BC95F9
2EE597C26A009162955CC64873A6AFBA2B92387BE9B963DD9DEA82052647B2ED
A0C5146AC8F0B4D8448B090EA56D52B0011942E448E7EEBF895D0D809B00D7CA
0F9017C3A95D471EAE9D2D53059F30C1CA87F2D60AAA6073B519ABDC0F2516E3
B1AEA09C7581D00AE98584FA0498AD65A978944E8638A4F203387248511A37BA
E13F80BAD4BEEB39C37EA24686E154F3F98E584534086FE1F397BFF8B5DDB771
9F71DAD3322D0A4B76CF18F103A26D6D4D419EF0231A58C2CCAB4EEE92DB3210
F12D721CF6D9D7B9B622526A1555918606828C306AA966738A918754A8B6E5B9
2D2D490082C638618654A913EEC23395EDDF20B5AC2AF7694C0A1E9D1D5B3B2A
479DDE0FC31BF5578BF1DBBE23FDA31B2D684A8D3D948579239610A005D0EE52
678B6884311EAE244E779C51A5B4FBCDBACF7C7F3377EB7A887F23BCF6B357D5
BCE14737C845E1BBA1953487572DA1A2F30B7501306DCF71425AF6E08BF17F2A
7B6D6613A58997026085E72692E6613229B73645934E209F2B25F138E53FAC56
4F7B316D3182EBF986140FC2EF8DD4D9A81AC8FFC7D762AD4D0117290BCC7C63
9CF69B9AB7FAA2F2A726CAF7F21250BA0D28BD42F3F8E2D113A0F1DD3384CA5D
D77BE0C2EA254ACC3C2D881B8395C5676487936FA72AE202CCAE9BEBB8B98805
8540B3BCE6D89DC71A4CC80C8E4594680646D83E0A69DE2763C65742BCA6BD88
0149FE62CBC8B80F077966DB722B079978BD86BBE9AC58A7621AB776C0757DA4
71F72EB62819BDB1D30B469278FF264D2F596DC0ECF93A52FB5D39E3437FFD6D
8887BDBC6664597DA7094CDCC7B88EC396BCC90C2A6B5FD11325F465AE7B9DFB
AB6F61FFA8F9996A47E376E98A0121C482D9730E1EAFF3A91AC10B5B1B76F9F4
41CB7B9CCA9A997178C921085E9CD3349C4FD44DF8A6995C9FB50907B6BD1282
83A9FCB5F1173B83E673C946DE835BF42CB2F97A320BA4335D4C86EDD28D3DD4
27321EC0D74E020D1CE3DE7EBFA47C59FA828C07F2B16A70798A1B43C855069C
1ED9B4361B21DA444AFE496A818A521E641CA28A77B2ADA0BC7E4E8EB0CB4ED8
D53F8BF7F91CC98B11254C0B6DB3F3A394E50C787BC64771726FE66893053C0C
03628ECA0C04F3A1BA782AB8CA5E2484A5B0920FBB8267F9BA328B44333E7263
AC385393D856FDD6C06093E4E527B90419D559A2E353850EA7EFE5D61EFB35CE
760A9EA79B8A1DD87D552C983B64A6B5400975249871113700F3A7A7149FA7EA
B671912C9D45F0F76A8811C9E09F66FB8116ECC7D97BC3D1F1C93A6E49677802
DFD3CD8D4D7E6BE0EB451B2EB4CD0EFBC32B03136A11CFF89BC2CF9B539CF5EA
377BB807A4E0CFDAD0B65AAF13AC725DE145587CF24C6F1F30485DF3E1E05513
D5409381AF8E893177D771FC75BC764BF854D3ACE479651F7C5A6E32F24821EB
2DEACF1C2592E6FBACE11A5B61DA3F330C999917FC6DA7383558F416ECF4AC9E
F927B319F069F3EDD7B679DB830111A26B9068C618C97062A0DB6C5517768A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4A508CC61D06884D6246FA607802124E77FC07620C1DC238000AD
F6AD8E9D7418065549E5A7DE64405908A078F353F447D44E968A8BA903DBE04F
677479DB92989DFABDF637FF627F4756AFF80F27EA2B9ACD21AA8BE59F75A8EA
AE3BF5ED74076F822C41086CCE1E87A943549450BDB18CEA58D596BDEDB2EA43
8085FC9662B6C313B5CB54A9AD8CCE8BAD25DBCE0ABE023261A1794761FA8430
E43AA6A59BFCDD7DCFEF07F933662CDC5724D3A5C43A25929B54898BA9B58D30
C6F19B4DAE1DDF8E068A8B441C5B5E1FE556DB195D2881FC9AAF598C88CEF222
74222E0FF68051E53B460935C2DF2D8A77807B4DEEAD3FAD1E46371B4494A4EC
B43C272E0A1DC0BFDFA816FBA451DCFC20B89F7603803A12861C0FECBE1F47EF
98C35E5DA9D57564EB8DD80FC43D47B3C5D419327F7870805E30810C134DCE8F
C1F5680ECAB52B7666FE5AD07FBCE7B6C7466C36C1FE04D8866F9251B149042D
71C931DDD8234BFF1BB6BC76E651CA85C0C845ACFDC98ECFD8D07A125E562356
B7D819379BCFBCA830A71389C246F771AF97AD574BFE9944461FCD9408C88D6A
3EB9ACEEE59EFAABD76D5677B231727E89E110AB58F78A4BE43408C7C2F6D446
5B31BDEBFFA59B2A6E9438E4F5075931668B04698B3CBE8F262043BC15C05289
17E8327FB8B6B10274907C8E9A28945C70BE2EC90FDE715D61801FE189AB7A75
30A0C7C921F074C2C63001A415D6978EC80CBBE250BA0562AB6D29135BA477FC
3021B6854484A0592796449AE8F9B27B222100FBD51A9BAE076457A0A9E830C0
658485CA6304D445AA4B08E97B5BD3466C6897065446F7653446FEF499C10BBF
BDCF134E1D1EB8B314610183673444B6645B55EAD0550D79E5E4655E10AE13C4
0486C064E7C7CF994BE8DE8672207703D00D9E6A2484139549A171890B36BD31
0D1A184C084913958D22575E85F99F8590F62933B22EC8CD48D81CC019C9B4E4
1A80822687CF6CE66357C4904B79B704C799AE090C2E12AE0D9889F2FF91CEC6
6A50A934E374045BB4457FA9E5B652C7DD22CD157327FC45056132D2861F781A
F45D555B786B9B2BC563CA35E60B85E210DA5E0740AC1751DE355F94117437A3
4D3F4F85AB32857E14E646AD69AE46D8C62864A6C967A44D7900D44790C42519
C77695497AD2EBD51CB4DAEB0D9834F4CC5F8EEBE00BE39EEC30136B8BBA284A
D932B98721AAC2F00DF496288F46F21FC15112897A82021211D00A7FF64F3150
5A2E1CDB32A589690504D097B10E30E7A4A75691C0BCF4E5B8032D1946A35928
9FE2140F4B10602A684CF11275E537A592BDA358B1A86900F1B8DC287C8B2340
D731E4BB3CC6EC6BFF929EF80FDB8C24F232C6D89B7278B910483A464448C070
9C17105A411052C53817770E78F441E5F78DB3A150F0A442EC30FFFE388E6A96
B840649848D48610D183AD58CFAE137758B183F086935E739FF030719400112E
AA300CB6910A4072C474D5DEC20D551CA856823786EEBBF290D88A354644A4FF
F38C3AD2A480AE36218B4F466B8C7B131B3883E24E8852E88A012D41DB6E1D3A
D6BD20856C95470908FBFB46E47AFE234F39950BC003FDB74489C8B45BF7E1D6
38375F2F1ADC2E07E91763D2F0F99D02647FBF68C82AFBCC7E3A3DED220746FF
2B7076B8337BC6B584B5914801AAC6E8C36EDEB819C7BDC6335716A87C2F39D5
4B03E9A983BF9EFA56EF946D8509F3B7D2D2999D3F3725FACB38C6E0C24DCE9A
0D654066CEA814469DA19702F997DB1854F135C2B69D0BE6D18336AC2CE0BE1E
D7139E62E7910590CDA5DD4588FC950C9A5CACCBE39F1A5B5922B70542CA8BB9
3B63EEB09F28F3966CBC449C788B427E50CA5BDC093DC971B1AE1279F582DD25
8C11C2B23574478290F37CC2C41A88139787246D4C8C41D27CD3F086246728F8
B4B968EBCABB09B17A7E85C7BE858BB0C683D1834FCCA9AD81FA94AB9C5F340C
AA0AC6745916FA18BB8DF0F66B3C1CC771158FAC11D76E7D163A7342A6CDD3C6
662F5AEC5B3E4A69FA7BA6EDD414F99F3459476AE973647334BF7EF2A742DD53
A70656C3E06A7AFE3BCC7EA7E4B18230728FA5537156C1FD8C81C3C8C2305F34
ABF61F1A074A1266D368699A779C424B40BAD55E954F8096414D8305558B5F99
A435D7AA3AD6C77FB5598C222D29454B656262BF46A872C86B8B98E210848F52
4A1A2EC2A5CA7EE3C578535D39CC4C6BC53064CBA51F6A78837E178446A5B0C7
C57D129D64B0DC0FBF1F3A16E5BA4F90BB140462D8955A1E06DCEA921B5088B1
1C34EB94E3C489B22D1ED797CE26E2403B89B3D916D30ED29B3E7301B06BD090
6D7C8F038DBEE3A896992A1CDABBC5D2C87F9C203979697C640416D38AF8998F
EC5B0C5230E17E4CC99545E0775D89C1D1836F6DFD97FBF9633F89417C286FB9
8AB2D2D3A6081AB500436204DE3F6F1EAF14CCB7901A3C1C54A705AE432416BF
4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612CD544ECC7FEEFA841B2274570DC
E510E39D6CC4DB979186221ED7E0B65E32A8EEA6EC7A69671417426CA896BAEE
9F9EC2637429CB45EB3ECFF3EC05B35F6AAE9C67CAAE00C3B09AA29BF8966E11
E954B0AEE88EEF4385445A3E60BB759D894EC7B48A9F798B971EDBEE3650FCC7
C8B259CCBA8205E8F98F00E3D4850BC4A6FCBDD7123B07424671BF00797D681D
595B89297A87323DB82F4366E7F84F745A38C7631BEB3D095F3BDEB0FC0140FE
BE91C45AAB69F13798A4767C68AFFEBD29ED4B6E2AEAD7E6A538D79D6CBC1D6E
24C17BC4090A4CBBEF3B632DD50F52C8AF74E9B3FC245E6888A546966F9D7699
00193133B2F746F8517795ED6B0BE7AA1CD29495FCB31167ED06A5A340040C1C
50BA49524C71DD1D9114BA71BBFF779A727D18EA999ED76E138D519E428C90D3
0E716D592F48C9E47DDC1DB7FAA39EB5F85C96ABC52810FF6AF70D58A4D7D99D
11D1F0FD52825A689E15BA0AC79D3F8FBC31DBEE9CAC7E77D79B27E02132A165
44169E0C4A62F45F86C78A802997AC440DC8D5A6B1DCE8C3EF1B58A487BDB1B3
F7EBB749DC4440CF1B518E22A75CF5E9CB9A4DB1F4E6B4BCDBBFC85A3A92B3FB
7C199618D3B2D90A75AF58CC4CCFE35957B23CFEC70C91E1823C03F800BC86CA
8D726260B51E71CE4F9FA406446C3F30BDB2FCE712EB0B9BEF80D5A156E3EF0E
EA375E66905D49892B70588D73129F8DD1F0FAA258942085749E505F1FAE14DE
1883D530ADE4B196DE9E61C4C8D5FBF4CF991AF88820F123F95B43BDAFC180A6
1CD2FE2A391271413D1ADD6D779B654150041DB744518A0E8A80F687AA6A1FA1
45DFF761EF8B43F852E00722DB3532CD698397EC9FEC7BA6446656F2ADFE1C2A
B7F8582F33B2E19893421464A9501F94ABE2333BAE0E4F838E1342D1C351AB40
3B42027CEA384DF3A16FD969B5FDDF273E44AA0993D5479BF1CFB2FC96B01ED7
C2970B0AEAF74A19162BCECCEC91080AA036BC6CE74FF7CD37E72356EA559BC8
93542982FFDB6CF19FEE4D250CFEF414086CC569FE694A3090465C94CFA5C784
37A7440C8AA88B32FDEA21D73F36605627934E055273B2BFECF4FE50A760887F
52E83F24A890B95FC8BAD5F27D6E47F4FB9602AD6E1158543D00A6C821C8ACE3
01EECF257B1E9BA488552799E40E102D9E5646FEA24C0940D12507B823BA1B8B
C4AF53974D04BDABCC0C2A06849F5B712394804BD4BE709221871A09D6ECAED6
F3C14FB659E8B9BBEF8720614C303738994C150C2AC9AFB1163E58651D2D017D
8BAF922FF16B61334C671073A58AEFFDE86FA40B544AB1EEA5F27B91E98C2998
6B14D002B34AD21D01E1971AD8905004C227EB2475D77D38011585E14870C3C7
0C900B579CDE7D7C306DE84AB81E99DBF54BCF28B63386D2EA922C80E9702C61
E213FC3412FA8677AD4CDBF5D5E8524B0D4C7CBBF2A3552C50A5DE02C35AC220
A89123A74E0B57509BA75FA5613021A298F90AB39C197A0593B73F71DCFCBD2B
771A97BE327B917D1B6296D9453D491902C7EEBCC1ACFA39BCD273B7CADD7262
FA3D6C4CA5F9F22A72FDA487FC97405B9ED8E24200F1F2197F2EED6974E7B8A2
12D08F73B0278617E8DA35579FE7E7B9A29DF29B896AA8798E221313618DE78D
22F02EA81597EA427FED568F0287D043B4DB3C8CC888243B9F7305A874F81669
762B92A37D94A10B417B0B65C693E3FC65EFDB1BFF7763CF1E0CB43E13F1FA2C
B3EE64202C221D79BA01F71E56482BE924C444FEF0F24767A37E04B9A16FCE62
F33F0C59263F225101EB0711F288B2C51C8D0EDED5B42822FAC82C37490A0BEF
5642999E4D1F915D1ED09BB952BA6E68FABCD60608F52EB8B45BC3807D6C1C0F
75E57F66F06D0F94BF6E71CEDF718A506DE1D8C21DA48CA43FB0DF73DE5CB762
C32A349C4174811E9E24F8D944B1C140707E2734854E28C334B1CD93BF182F0D
75285DDA2EE72CC66F826A3A6924B4842F5DF54C9BA5C41117B358E59045747E
0EFF245F7682641E7F09BFCEB2EAC030318EA189CE32C32A66ACDECB128DAF44
2A563EC06644A4F7393C18B2E5AF2CB73F1FA7A9AADAA5CF5592EC91283F9549
F09CFC040831B45FBF8A1AF6AC115B7AAD0F27E911880F27B0FAC18F712403AC
ECAA5A63C6E2043B2EEB4A5EE20A546A99CDA28557AC34E8E9E673D3370769FB
78FB528B745B5178F171A96128E332BADC599B4CC8FEF413DBA605FCE061AD79
9B805D9C534721F4C9E1A4ADDCE036953C7ABE3A5A0BEAEA2CF3515F1C1E6FB8
5A0EDCE49BD38E2858E37BEDCA8C489F9EE00BD55CB7B31CFB6CC1ACB2AFF585
739853945C803FDAF2701DE88CD2453C09987E235D60CADB0700BAAEC1603E3C
A8A10A1DD39AA233EBB7A0BE5C47E19B535F782A7D14216F5E4A4B898478E856
FDE39C8495935984DB05E83E02A80937BF33358AAB8D0D2A4AE1EA695CEEAF70
E3B20CE4DB012E9F2066466E87F3FB543D252534225A580648809B514E60D191
5C995894C52C9CB3D5BB71B130C2A35AD8AD0704657176F17CE49A3A6957A9AA
3829881A778F27C71D37BF15AC54E8C39BF35E974C74DF0455B469309503D39A
45298E3035598F2B29F7BF43A43911F3E42113D5681A04596EB54B4DCE8141FC
B5B9FAF72464FB63A5C42A63D64F3E16A92AFB64C0891B14D9920F486D3C94CF
0C7669ED9E36DD33954846D9D0ACBD50177F5BC191C9077BF8E53EDB89D6070B
27D4919792C0BC103538CD284C9CFEAA2928802611B23B64DBE6B4B81BD89C82
D81A6F3E132606A8524D88E16F3112FA0F007C128202E58A1C945F77AB141695
47EE2D0E54A8D88B3F6E33199BC15C451E1A19099A0FEFF456286F94838CA95F
EDDFFA2FFD0EDCBE4E3B5C8D8DE89E242F9B6312BB5FCA67D1E215EA5CDF7FAF
F4A03B3ADC70E8E030DBAA42CF9D97FB643A70B156B885171AD9B0A46A77545E
769124737C044BBA551388D7D2F852F643A8A9C8FAF925C80301C58EB8FA125B
9C9CA9AC6190357D2163E289D996CFBEBCE833110C18F408B1242EDF8227B38B
16EE57A91EAA19E1D4CFB9A8CC25838F9CF20D5291634BB4E51E65D881D3FD23
483E066B2D0CB2862B29D8E7EDC7FBD12E00326B343F6AC581123D98A400AFC6
3A5D1833A73902E8459483FE5B31E9410E1FB3BF82618732F95D44EB4D596116
9CB33C96B970623B7971497AC7B8E493E6438512E558585171AA0BC6F39CF6B7
252091ED8FCE1AB47EC80423384A047BF32997B6EB21FA6D5B0DCA26D977FB2E
4A9CACFC2D95E34C980B10C45E2BD3C34396A5F0D016B8C50CD21979C66ADCC5
E9B907833E2EBE20810A00D1B8BB573DD0D6DE97CEF92D3565BC93A333CC8401
E19F4BEA4482C08888524A2CB6683C0ACD71100B937B2577896DBFBDA3843891
7588CAB3E59FB22C5B875345D178AC3FF3E73470AF85D8641D23C38A11CB71AD
3E4D82072B02CE4E7EC1FF11CA66D3DDF2BF363DD28D9EE550C085F9D118D88E
3365F7AB7CFEDCEDAECAF1284990FEAFE0A407C7C2B8079B2893B6E6BB280D37
3A56C6FE7504B5105BD2AB87A277B25C461ED0A8BF9124C4CDEBC99973D55751
D97A77A9547C21918D904DF26CA16DF9BAFFA28833F988A66AF56E7FE0437508
12E7A61C73DB3C8C771345EEFB47691CFB53B9CFF553550A45CE61B6D41A48BF
26259AD47E681417AA785DC3DD1E56F0FCB89765D3815BFAB2B94C0150293D8C
7198748B17B23410137585B8EE2BE046FEF515A57D4B87248B27210AF7C057AC
FE7260C023D3EDEB25D0564B1E3D9DF10AFEE39B7BBF6ACC5DFA9253BAC1D050
3E25B51A047381BE6DA0B284B2DFBDBF591AD94CE3DD3470C495420807071BFE
C6663C275934BF33671BD55C838F4ABD3541396F5741E280311FB6537C611BA2
451F461DD52B5C0726F68EDD3146F069085199CC16681FED2AD0A7B09F72A4D4
B36D153E5B17838D497D8CAB42412D8D6CDB8DBD1FADA5AA86EE07E447D8FED8
BFDB27007909F5D538637FEE65804AD9F47FD5D09FE551F14295537D6DA2E4F9
E5FA2905FB26784F9F27A3F3F226449C2F05D1CD18F7FE5FA60F8F48E2604F77
75BCC1B2C547639FCABFF4EC3BCC994CE1FD48E705F80B009ACC12142FCEC9B7
C23EE02FD19C327134B56197C411E3E1EA548FB2E402EB7ED23E493C2345D976
7C3966E5053D6DD6940D0780E8B6ABDBB695031B40EA1AEE0B67BC4CBDCE7EBE
0CEEADB782FFA929E83E3A8E4FF1964DD14A2B8998BAC8AEF2D4837251BBBF06
5C283B7C7B3BD08D72049185AE13AD4E96C8522735074AD649CABF3920190046
35622539CEBB6F132F08755C1B55A1BD2E212FA171248D2CF5C85D9B8D2CB5E8
5CC06BC191CF26E8D68CEBCCCC0CBD4D31E445F889CB210D919D86C106679FAD
F3E2C18B85D025B410F4524C49A43297C9CEDC20F96623E6932E86C0BA3D2AF8
649CE52A6A0351232C016B02B3B7A72894853F26465E017991478CD587D085F5
604285E85083D1F2F28A9FDBF61B342523889C729D6973CE3C2DAB27BE4C90BB
20530A0B4DAEB9836072A837B958ACE6FF2F30DBB73E9C482C38E329858F4F90
F3AFBA08F963B24D5ABBFE0FA1360C01D7A7A86EE2C49065C57D49B88B1C2591
4A4D3285ABF6AE47FC402C9185BDADEE7DEB5A5B3D74E6A726A1BD5906781599
AB1BB54FE371D94E6C99841F7C629F3B87495A9430D4F44003429BC673DD7173
47672963D0255D0ACF87AA716F2FD6ACA199792B561CABEDBD124DB68EDEA2D1
3AFC971805B0D3425553198E4683139ED701F1E78997938180606FDE2005ECA3
01E9C8921C9B7EF2D10EFCFF7628044477262F84083720D9B5CEB6E0B31EABC7
AADC6327B3325E51FE58FC26FAB5DBA6EFB6FDEC977F9C78F5BB0972FE7C9E20
161FE2C55B0728D0E49466DEE887E368A835569DB77B22E158BA172B6020F3BD
252C4251765311BCE783A4477F8C9D8D83343E890B83DE4E75722C9F37E4C9B4
9472454250B41613348781C99243D5F8211C9137700FC35A4323DE906C129679
CF5174EF6AD148FD770FA3A749F398CF43FB27CEFC1D9A7C450669651365B24A
8D0AF9FB54B9246AC401977B40002FB861E7FFE8CD78EB15DFC9F7A304EA700A
CDA0ACF34084EFB5664EEB490E5A832005EE49716BF925847F96EC18CAD7CFF6
81352F9FD2C6E23CE3AB0B98BA451610168201648E4ACE57ACF0C301CBEFD1D9
91DD96ECEF36931256D4D1590F31342AD2AD3E3CD65638C71342F27D79F7F5A4
2B5F5DF31302C024B929FF470796626F0795122379B1581BBC73787EC4EC2DF9
FF5831F242B8B5A0FB902F9B2355F42F917799EA0B4A4AE8F1ACECD1339A3FC0
F865201B6D7C9C6FD74427C914F067479B3A4A7FC0E0823871776F80CDEF2140
DC00FD5F6F1725AE16D44B8FE84C3E122D4EBDA4110ABB979B0295FBB55CBA2B
0D731BA72CAF5507C975ABE401EDB52C881153E8228D33EFB93F057E59608234
3A6A9E43A0310316F78211ADAA1AA9954C8C41A1A5AF60249D7EFDECC8DD734D
9BFC4A3D813CCF13D5DB889210B5BFBE8D380ABE4CDD74110BD6BA8C25ECCF84
7827A760FBD8BAF9809930D78834A7D4BD3D43D4B2634395F491974C0FF0D79C
C68FB1A5DE7EF8497F2B33F5B8E384DF0DA98FD84AD4180E993172DCFF4F82A8
D7AD9DC61760E7B2BD1AB594E30D797581F5A0E81AB0F7AF1D54553E8660DF4F
C881B1B290AB76EBD11A36DF260B0B6D0EA7D9EA5958819F5CE03BEF6B59B669
723240EF425160639F65C26996C69E6486A20072EF3ECB913B4A17469EA26895
B88672C6223229686BC2AE4C6272763658D5817D8B66C7CE121320779939BAA3
5DA4704660495819B57665B91A74A36CA64CDB77B59273EADBD89EC9E0D5C5DB
E7249C5BCEB582553CB3BF0BBE6528C63200F8B96456C08FB37E2E892BD48A27
5C4F7DAF9A7AC45BE33703609C7F9164990AFAA86C04ED313ECBFF60CA3DAC5A
5F84F53C86FA9BF1093DE136C8E711C2126231A398A219F043B09A4EE76448D1
CD1C22233115FA0598477BF73995AACFEEA5DAC0B4AAD7140FD31B66EAC5BB97
6C6A780EAA6A8C2E43E8716526220C667DEDB795AF15CADE64DADE150D2674F3
52414BE5A213FC7A5CF34A17BA8BB81DB3F8281ED8FDB17F2A277D6F00284F06
63CCC2F53F489064277A9AFD2339BDD82F37C499E0FC55002309EF81A99546AC
145BE61D1F77A6B1A68953CF0B4C83111333C0ACA51C65D8AF0215A788A7FE39
160CF51FEEA8FAD3E73DCB10B5B684F58D67F31F2E2EEE990A2F78607D3BD3A2
9A4307E51DE7EAEE9862BEFE1E1A13B84C2C5BCAB834B340E7D20CAE32B5EAB1
BF96188DAE424F25644D58AC7AA64820F554116589BE4A4DA677AC82820E7FF3
C960A06E76F6B885F8EA8B8B8F8E8199B574CC1DA889FF2FF128703407C5C2F3
4EB95062AE0348E1118591B41D7E7AFBFCD7410B3E2D1A2C4876C0C18948FE63
30F00F49D80C7A805F78893B50A98F057880FD287DB8D742D6AD2FC443DC0393
0F36B48779449BAC308C6F43FE6CA802940C44AE02381732BEB2B95801522ABB
9EB8EF97A4FA5A370C2F5BC1E1A1E7389A6C02CC74612D764D2F51B2393AA925
84233F45236ED5042F78D8A12F473CB3622D48A843CDC9F7B57E912B68D46BB0
87A3180B53FF1B673365217805E40AB6EB8BCEBE204B9B0479413CD726939724
D06A57ED2FE2E71F14475AB66481F608DE3AFAA767F0F23A7B2417BBD0677650
74F1F37050FD1500CB0A1693A3611BE0D44E6B5DB3A65CE8D0538C986A7BB104
5D70E0C1CF9FBD2F2CDB1E435130296CE911118156D4D3249712471E85A05952
9C7D6101E2D5CA9C18298692BA99DD39628557A8CA9C49883512F8F566028815
C4BB264B10709DF502E051A1FBF642A8F8941EC1CC8821B070E435D5E2AA9E48
5D6E501B2E1E9B6A0671156DE1D5BC81CB52F5C21D240ADC959F8EF56ED5B19C
3D5D52E67CA00E739BF74AE062051E8B769AB888922748D9C85E79F1E1C1DD2A
5D1E99AEC1D37A6200BB12A83EA8F6E0609DA559E0BC5463DE743F5D7A922DB8
E506A8536C3A8A03CAC720BBD2D4042E32532E7FE16982603DF61C5C663B5388
78F6246C40D611C5ADCEA5A33610813DAFD1329992CC000C0980D4B366FBC975
AC1AC11FDB0668DE84E714FDB605A83C3D88E412A976D682B61F780696E40CE9
5DBA0C0E8E9D8863C091D1E732ECAE87CC513CB3270E7804A040BC772497C1F4
984BCA43D126EB40DE81A91908B10D586E66BC6B5117C802962AB3BA69BFE520
A7DCA997A255348EC52BB4A1992B2B5205CFE479D658127B76E48D5A334D0D2A
D722F97A1C3F476C30B350237D82A0217582BD045401BF416404B3FA70758A91
36C372D6D698FFC0904AFD6C06F7680B9140C4AD138DE7B019017F07FAF4BECF
C33CFF111F801E335C38AACF67DDE0217905ED11DF349F54153281472BA8FFBE
6725CCC390DBB87D6FC5793367EC916BA32DA8B964A0751C40846188611E9768
91A2BDFC66EE858D35E655853496FEA6D64E1FC582E77F6E21A71D0C319A466A
665C3EDF8532F18CBE8513DECCB3A0D75FA456A71DA0567DCC7B9DC973319C47
30E532FC9A74A40B2812488FC66A5197A556E05CC460DA5FF8BAA066043F44D1
AF31CDB2328F8CF9DC677D2EB637A72100B74BE22A80B3B4F5EBF30905CAAAB4
FFD115846BF98CD6DD8CC10E1234F448C93A3C6D20B40CDED1AADCA60A7E22E1
4EC3674516DE852115F03050016897C740D7BA1AD40360C017A58385E535F4E5
C64D2851B9CE1348D537A4E62C66B3F03312C0E048404CE30DE9213AC7681B00
F8EAFCB4B635CC9D885B533BEA766332C3E79DEF18F9A17188A92378BD515608
5158817DF61A9B06349337C81C6C9F40228CEB1531856BB4DC6D9E4503E0EAB5
DE3401390F8F01B606C4A0A2C8228F120B0A3172A3C6F19DB81D8D1EF5BCE417
F13A7729E1E9D2F6F9E7E5E0216258CEB3716F09C8EDFF496B106857BA914177
F02B00B6103D5F03C92D88DA2F7B03A4AD190AC0400F1864ADC733AE203D9C47
8995BAB090E3434034B8BF1C73F5B7D0C146F191EF98C9DADC195E944C633A32
9F37C4E74F80FEBAFE5C355AE589ABE186C4DF684BCB8800DBFC7680618C923B
ABB061AEA313F10EFD694DC5204A24F8A4A1ABCAC35A2E8CAE488A1F194259E4
C0A2689D828F863EB3EDCEF9C018C3D8273DA913CC72703228D5D07DB41DE0E8
BF793DC3D2208D208E680F953A7E3555C747173D288BB7D999DD18FEC82B9022
4198E7B0AFF653300EEA13147AB07115E51B64E0D3B325C1A98E631A2C84353C
C41E5F8DE64374A7FA744D59EA520ED622DCA643B101F37AC1E6407B167F04C3
C73E71EA3322A5E0821BFAA4009DB8A3161571C7AC8707594E8EA8AEEC8F1E00
C61B51DEA07DDD2C20AFB10C95B8E02EDF1A225914131CC3FF72242AC5E044AC
2F66824AE151CD823D7994A0C1F3781B29441EE7BCA5D426822D2C8D709CB610
C935C601D66D242C328C4C0501E72B1C1EF216117AEBCA8F4540AFD31DEED484
5DB662E87168ACEB217C1BE26F797A999F4405E08A3B1B6CEA0A5AB043655FFE
7A6D2B00F1AA75CC72516F881E2DE96E4A24A407D40877134171038EBE7F5C4B
D007B915A9AEF8C46F469C9A94BCAFC9DBF0049C85266E5A133C9D7A32C7453F
A231242DC5E3FB64D35DD07F0817E59269AE170C10C217EA56B73B38447D400A
8DCFDD26F25590CEC8C64834FCCD3AF3A939F6F0284A15BF280BAB6E88761303
271274D0A26CD217E3C33D481974E9A2E3A3C12CCB460E7D37F4F37AF0BEB4F1
B71F4898BBD96830A117E52A6C58DD1962C77742A8C0114A8DF554986090C8F9
08F1B57E04C99BF7F56AE69407ABBA5AC554C7A94BFD3A6257B2E234CB31B4C1
9E2004530E8F736236DE861983979B100B84152CF65B52A64EE4FB909EC29BC6
A5B584C1511E1B075B28A6DDB0D5AB623B2B859A6599F5F7015EA65BB8397BDB
7C0FEFC2C12B3CD8D1B3253514A97E55EECBABD31382013A13F6A9C398F80CE0
64524D9D68C58C14993457B3DEC06354B26F70F5F205F1C0D67ACC2654AADB23
BE99CFF68A171EC5BF5F4777E0676E4B070D1A9B67CA89C32EC8E7C5388B3F44
BB1B16C926D616D11FD34CF8DC90EB04503A72D35BD8212BD791920686F6574C
8CD3E4E6AC5F74F992A7870308170E8275B6DC82E1BCEDBCAFA708A1CB6B4E49
8A7FE0D03F4F53AB6A85994BA52B3E689AF419AA0B5D8F11AE5512C2BB2713E3
C0A21FC66714375D7136CA6F57BB4D643B1ACD6DC330FB0EA008B70CBDE612F7
FE3863FA3C11E8A6D85446033C16113602163D500E15518CB4262E7FFCDEFB6E
21673A0EA228056B28D329F2D0D2E0B7D3CDF3F8251430F9A6B6F1EF9E4CE43A
3BEAA7318AC7FE913026F364CEA62A5779BD08F03CCAD9316EA3387F088F6DED
3A41213167FF6F021591F31B1DF029A1752075D0C95DF2C187AF8C97C337372C
DA0B92EDBC45E082B4011D45B50181F65B3EEA68D8482DBA49BEF853B5565598
B6C439A2E90E3C71455321AEFBA84C9BC4093E2151EA61F538857EEC821483D8
0ADE4B8C30E1F06EC85F0B4EFC2554530E7BD287A94CF9CFE63AF6744670C92D
7236CD1D196CD9AD8E37FFACACA48A1066F2CFC5FDA466400A884A755F6AD740
EF7B4F6DD53C128A562261383185DEACDF232517E295655ED363E40994CE92D6
5E9E0B74A706953165CBB80B2CBAE0B1E8AD616CBD10EE7735FFEFA9801E47A7
C0EE2F68E361D4034E462F11982ECB740AA7C0CD7136022F7F067AC15B9A3B0C
AF7FEAB056EA0B7856D540B61473D5229D3879AFFADDC5EBCD699367C5117336
4B6974A923A11387078AB900626C7408FF942D473C5C7F8101985258FE8F780F
E25D6B4ED96FF784B325D6173595FB02EF6F7961CB2B1C94D31AE93D12359725
4F8CD162EC8B6161DE73497A3B48229E6223DDF0AA26AB1575D0F6892820F846
5C657D4BAE7FCF3A7334129DB126E6FED375BBB6EECF58EDB08B71DD550EF6B5
D5130D438067DEBEF176B6B995F5BCC6AAD52C5D46F4B831CB683996DE0AB1F7
7F35E0D3CC2E8374873CA65798FC8A2933368391D95414435ED29603CD2A2FA5
55B1B28030C6FE09A18C88857C44095C704849C51BE330065912FD0CF8B38CA7
E3A0BDE43D8BD89B7ACCCADC65A63B6C9C697F344957560EE2C380F49988C855
936EF155DC60835EB0ED7417CDE937FC52E12AC90B2C9AF9E2656F5EF06079D7
0BF67755EA76643B7742C9903F19A3CF7D41179C967F8BCA4AE0B0D4B5C5B283
015E8279FA7C465140EB6439F66D3DFF890E43EAE42992293F0FB1510238B1C6
97E096184A10C5F2FA017251480069B588AE234E9F41C63BE1A3559F7509CA9D
6756BF79F1D8E46EA8B5592F9866DE92D87131D224CAFC780567FD6009D79DDD
9B4B20FDF6DFB5991B5F4EDCF44D12154D8CB759E3728658908381B7CF04694B
791BC6F54FC7E42FA134CD2D2206519D5369F136EECC1923A0698126AA71F351
368AB94B49F9EDCDECD6B5F690F6307C004A764EF76A128CD8D185158CACE8DF
D6D48A545383F2CA4E79CE949CEDB65B11DADD0E5F1B89D35C673FA2227F129B
290598C4E94B5A824A3C77F969F9D2D92C3B9B65D6D70ADD9A72791AC0CEE330
391693A63445B3F637A9D7AA665F636647654DD0744B5C5DAB40CE6601C71B55
B85217803A77062AB1C827DFCFC4D8BF22A69D6B740972621D71B6C167FF26C6
E4A0358CFD9565A86DAF7E12ABC6F37E5C29464D98774377E1FCBC122E876AA5
BE61F84429FAB7C1F48B86F206D7628D10225EA401DB454BCC97E78F837C6B8E
6B2AEC3E55402533D2B8E7897EDDAE48B51BA147E19D68525879248B74197600
20B6F1A045F6212F950C9406E797B8EFDEE18692A44EB4C25C728511DF1DDD04
E44AD3FD17A2C6A56854206D95098E2350C257A96320FD0A6B0F8CA07C3E87E6
08377A14774CCA28A466731CE5C6AF914E2DD27C8018BECD829A4BB92A217CDC
C958F9C4B19B9AD0AB4B101145F8C7033B87072A685E1FEF63B71141BD4F7164
344947526AF9CB429DAF3A6F5F1E077914468D7DEA30CE9AA16C22939D719503
620C3F143E898E162BD9BB2613725372BA743C6E65095BCBF1639B8A123898C8
8EE816DE564A3A53EC552E6FC201B202375E38E3BF80E31012C74BA904431E02
719E7107248E2ABCFD153A5D06EC9DD693EB667C298D25314740F95D23C8A096
52131BA0DD78BF5FC909CF1C88C7565CD89D8261F9B4CBF2366DA25FD7177EA8
68A48C9E9A9932338F3D9493C77896CDF0E9D58DFE831C8B527A25AE5A8ADFFC
590822D02BB2A5A27271D06D11E1096709BDB6D8C9510DBF277B31B8BF2B8675
50F1125AC8AB538565E06699AE5D68759A52096B795E6062F1A56F65B8FC21FE
C40F4059C2EA3DEE94D79A8E323DFD6CA218A1CB03FCB945FC24376A45F2DE0C
21347A3D89E579F2B1719FBA71920862456BE1232B7450237CC557F3D5586DB8
783F06030B0E5C758F7A279110DC27053E4C104C322503F37A5AB40178F10648
832847767179A052190509727D8385E5F898B7E28470245FF44F8665E0E64656
A9672293E79B4C52CE63ABF9B840B8FB3791B7E90B793FA88EE3DB77887BF387
A5D34D7810FBA44F689BB04A12A787BEA2961F55683958992778F2BC6C616E48
34F3E0647900C97F6A55B736C601B5E996FFCEDD4AD75116CF84F130769D75D6
19810C590B34C69D1E8D01C401F2785D2A358E0B8F82D791E20E916B613638EC
5DFD9187CD17354A6FA6CCD14490D0CC5D1BA6886DC44CE7FAE102A8BEBC5D66
5E90C3038F1388C4604675EA7377F7FCFA40ADD1D8B1909DB256F5A2562A8A24
A32CADD00F7D8F23C67C48E43DDADBFE12AAA768835A77A62CFCC05CED52ED07
652914BF06C774D2A4340FD44C35250329D53AE3BD1258168ED1552009749504
8B00B93004125E6117720C4A8B1DDEF8BCD9B7F07E932BC9F78CD0476CE59DEC
1F215A49782F144DD9F596C7D54D4125A7EA2F92207C56CCD3F735589A89639C
1C7D334B648E11C3659BA7CDFB5FC38E880764B6454A1F461C02D94259128D2B
2D62A29A2C495889A645459A36D8F643413C54F127FDCA68F480E451D986704D
2F749380EE15CF8492E0D4A9FBA8B9100A312E82B29BCE6904D8A98FF866ABE1
3496D34BD63D94048BB3B8F647B95AC6B30A15DD6412C3CCAABE807082C88D3D
0D960FFB6B386EC6C827709C13BF4F9C9378F5EECF7A3A6F93A7033771DF8EB9
CD0DF94E0BD0E80735F683B944814D6D9766A2CE8BF08E5BC37AECC5FF9BE705
D2E4AFA6CD10645F2CC8E86EFBDECA3365292909EE79FE2945983BC9618A94AD
14913C212B1EB6DC9458547598626A10265DC205CD8FFD81E90BCAF211014052
8E6C1C43AB87186F2650B1FAC2C7E3D19BA29888122A244A44A865216DCE003F
C462E0B6D54A30C3DBD7A61B06D63389A04EFDA301519CDB5DF1C384368309D8
8CEA9FA7FC82F9E206998C25F760169CBA1CEEE2EE24BAC582AD3F7DD4F4AFBD
032EF2750ABB9C0D702588AF81E4B2E3C0DB574243F63B1C1767A866F1F9B4B2
7B64CB3D44108711026AA91AD38D69132BB3CDA70EDC5342656C12DD50C1FAD6
1669257C195560586BB567183114C9895464ADCEB27BF54FD908650F54EDCFF0
7F1FDC473ABE8F1453155089A34A007D82C75B81149C64456A88F88F754C3ABF
04145AB9CDC8D55D535F4A2C5E5299DD62758A3E5EA09EB5941387A78C1E733A
92C8B97FF27348B1CDE90747FDD0D1FE3262696586A92E10FB3E8D7353FBAFA3
0925EA9957104759BEA0F7D0201F342B0E531BF23E9A7AF648808E8EB0ABE955
DFF5D18D82DDC9333A06B22CB4B22B92269E14A11BA6A5BC7DECE20029034C88
696774E1F77728A6C5FF3F0ADE1EB4DE93C91DDB40B4E30777C51F35D267D135
532232FE5F02F3EEB5DA8E4B3F9DA87BC7C2EFE6C8838605E18466C60CEAA0C3
C4DD02730E6177700E2A7FA861500A83FA40F7BEECD78B8AE3B5A57C76F63EE8
B1561650B6F11F7028F186EC532EAF53CC61BD37A7CF5B0F58B4C250F283D739
C2D2D12DC6CD0A4C0D96B78BD1D5A73E157AECB9F3F59C0D736946734D1F4D65
048F2AE84F226220DFBA0FBA985D136415D0F69139C503ADFC71C5F898C408A7
E5479868EBD29C9ED02D7C6F159B035A561C376465F9331E5C7BDD1DA502EB98
6520012FF6DC6C558739DDEBBBFF6170BACE74C2054EB96447F7DAF2599EF271
8C3BBE737BD085229CD7C6803C3038B71477715A00DD0FF50F7A508EF9B24E26
424F511AF6500A26ABC849FFF0E9969FC293CBDF7584CDB74BC9F45190E73B45
F78AC1CE5BA5CFE547A418F6F2D6672EC35C10213141AC0087810B00EAFDCBD8
E1317780B06EF63A0629BD9C0CE0730E2148AD363D407FDD3E5BCCFCD042F344
C7D51084FC653EAE2D03C87FC2CA0B9CFFFF0802EF9341DB1544437CE381C6D6
01FA9184D9C324D2DC6C1EDA32F3DBA8DB8B2C4487DE1D8BC06A73F6BEE74975
842D21F064D937C0CBCED5F1644A0251DF9509756DBE4BADE6110F997DC2F715
E7F525FB5F220B626CAB57FFD593943497AC41ED197EEBAB5246C1A8968022A5
49F7843D1C943AEE08B4380D93ACBB9EEC401EEF971A52A9A37AD5CEBA8E264D
2CDD40ECF23EDAC75933CF06B87D87560AB4369AED2AE9A79C74434361628AB3
4F1F83AE434868D71E522619EABE7060CD2981B075036DF7634B341B03FD01AC
ECDCC3C9F143E5FC57520829DDDCF3BB6398CC428C15431A61AD9B26CD990666
1F12CCD45E3A2675D933B378624AE619C10C5A1B5B3D53FD04181E5BC5A9F564
C6E80733A5899A341A0F2DC40214BA058621286E38B0DB3AFD18921352340F30
B983024EE9541B60B2504F5026939356BAC28F9799E784CB695B73016C7BAEAD
EE68B72438B5F04B18B5DD3F742689B3E8E93A640A20363E497B5315EC35BEB1
C19A67CD1792EA24B1EA76528D00E7BD7927D8E091DEC1D7C4D2A17D1BFA6CA6
2062C6A017BDF9C4A714EBFEA809D494D9738BE6D0690379DD5578A1D6E8B63D
DA05A5A24C1285BC91BDBC667B8825B774B16BAB0AC3804EA1B0981AFE60C32A
956FC88F4DA95CAE50A3564EB02BA7ED3769B466475D2430C8EB8F41D2B92915
E9544817BDE8B421840850CCE90FFFD23FD81F57562DF43AF28982A4470A7157
ADF542DCBDC0D54AB4B6D20E34AF499EEEBC1BE22DE322D36E75EE27F5E7C562
7D53F438581E4E1051A715399BBD6EE7A81A77E8123F79C21BE1B66476AAE16D
383B9D93FB349B9BE9964FD7D79D149475724B4743F9907633331DBD3A13D927
138E17A7B32AD4E82FADAC6C3829A77B21D4D2B6E447A751622F19072102667C
7848497110581FC1AFE083D4F56FDBB0B23802C2BAA93676F2786D00CD234582
93BFBA9F6F7335FDFC57213E6BCC72F84DC47B5496C0BB9F5BA86881278EC545
49F50DA04B5982B409F49232A61A6549D974FBFA88369D088B19366FD9AB35CE
FAE60FC97C6B9EF843CD60CE8C69D459B385F7A70A6C3D6D39AB0BDE4E8A048D
E4026A9BFA44E7A34F7B469091B4182B33BF1DA6FCB815622C7CB6D29BA26352
397C3DC55A0FCD95276517788B57C33558FBD942F3293E79CD0191AE8D31094A
A4A74D6EAE3CC10ED9760630CFFF16DBAE0E230887AEED675B468DC2D87B7EAA
B64220A2E61C48BD2B8CFAE86EC0A4FD7D91C9EC9872706B290B8C9EA925AFED
9C9A2CBEDBDF0241DFAD99C35791FE45F069B7946B5EB1D7A5CFCC0057DC09CB
0F19E5AAD0C27B8608315AB055A39C48091E72115EFB1E975595338AAC667E1A
CC0A3D0AF0B6A0995FA25B67430E43D16E0D780DA825AC347EE138DC959E22DF
0977C4EC2DF9FF5831F242B8B5A0FB902F9B2355F42D337F20ED677569C646EA
23E316AEE1EC29BA8D4A7B94EFEA537EA2E226B8B932A195CC8EAA08CCD793C8
4D0A554F270F2F4E4FB036050BA3195A1F79414B141B0B14AC697034E4DAB271
85740F90647F8666CB344C8E76F7F4C0C7733A6E3FDB64A06B4B33575A0CE6AC
3EBC31F70F6B9F22A7DC38D413609014E6BC50615C33DE3914251F0D8BD58651
E982A69181FD852E756895EF6DE53433AE0ECBA12DE954F3304C25B58EBC682C
0331241D8749AEE0784A92B44A2550962148CFD15D76AAB3B0B477436CD15CC1
37F912A27BF2DD9099C4951AA911D6ED91446A154FC90D63580B9DCFC110B375
EA575D9D4E6880ED47780912E961B894CC4A59D7479AEBA895F8AD7A723EC107
1F03526ACB5D36849122443B06484D40FACD60E7A99B61014836249AEF8ADE9E
A917FB1AB90922247D81A698376E1B3CCB9CE3320574FA9C0BE8F9CFE04A753B
82978F6CBAC0090F06E79A8BE6B9EC347BED7AC15B9A3B0CAF7D04ED52D65125
D8A189FBED43BFD6030926C71F72B7A987BF50AC03D73F4DFBF1005237BD3132
973E3F84D6B44D82ECEC244A1F30330B1C2495DBC7E205C4B0C7F6B4221438E8
3705D3D364B37D0664664C6FF0AEDEFB064F00B497832A05A92D139A80ECA6D6
1BE7D20CA221758E4FC3A9B3237A7A988390FA62555A9E577DEAF25254B2C7D9
5E63DA3C2CDB52AA2D67C338DCAE283988464821799ADF110FDF9CC1724D742F
A96456E1317F3DC6793441C02DD6D3D48852EDCB21F29D1E2E8F292789053625
1C4C146E5CDF7416FD53827C84050FAC61D928F053329CEAF29E4B7517D2F569
070C62EDFD1A807757F1BA59AA153AEFA7563BA235B92120F1415BBBD10B7C79
6FFD06A184A94E7EC42D6185036144A7951CD66900870A02A9F1AA05A39CFE26
C85E01BB0E6876B611F1F52A0407A84E6427C7A9D46BAF26F0F972C21160E9F8
D782B239FFE91B7943786A3D66BFEBE51A6D58C4D4647681DCD35D8765FC20BD
EC5407F8DF5F005BD7B52B92B00BCC6C75CFAF4E364C2B89E30AAB7C2E54DC3A
53877991059EA433D8CCB912ACFBF6919D7FFD1E7D88BB01AC6CD2ACB08E49B7
B58B7F38B0F1B9785EBFA634F3FF7824578BDCF9C61CE3385AD3C450A1FD75B3
B086653521EA59D674688BA92AA0919F24EFA6F496A2B92E2D3AC630D8A4BC36
980A386D32D6C6432B3DB333A7E9EA31574CE99C0F28418B2C296DFE6CE79E0E
A5AA999A41B766E1F782C885381DBAE476C6591692A1CDB0E12B57C805A361DE
451E050F33C0AAC53E7082A24D315F5604C2C535CEE6935A7D16A5C7BD0E74E4
B314210493CAC9596C92FB78D31E7CF0539D38D5E28526C42460DDE4EEEB70A7
FDC113BBB73E9146023976E946D9005BE25996B9C4AE7235B51AF8583CC1D8E5
AD10CA117239A2641A7F503028C9C86F34D21AD59696D68936DFCA8827E53340
A157511E20EB132868FF0C41A02951A444F25CD959CAA6F1887E96934CEC2FA6
5D680C920B80DE591157781E672053553F1B50281AD68B91464378E9133CBFD3
7CA76F5B4C8D2CEF41F75CC1ABA6D5897B9B80A2869D4194A4B1D9EF50D38BD7
D89CC047E33ADC72115A49E6811BBEDB847B1948CB57ACFC07FD9B5A1D86A233
B6BB59BD620239CA9ECA95E5B8FCD13C0DF5EF7BEC03C5A290A3019394A721F1
6F1E1D1130F65705ECF9A377929E1F12ADC683C5162959BBAE2F3BA7161F7DEE
6553BA479BC1A77B5DBEDF1528D19345C51D64244BD108E171413FE21D4D2625
E64664ADEDAE8D7D36F5A94D8D000670F20EA81184814E9627551D1B7ED8F021
3F18510B9E5F1EC314D6AA03851AAA9FA5236A62C9583A048A83F680E360DE30
E6BB87A1BE8742D0F7F2245B9022427E8467B790E9776B5899514D8EB1564F1B
AD18EA715090610FE84CFC3D9785F2C56371A4CD77EF2CD2834667CC44FD74BD
20A8595E65EF5E4F15D1851E8D557B61D12F979C9A3302717D7D9F52A27DF912
C20BABD968163EA2B7E09D3416C99F3B6A8F54CDA619F29E22A61F4C3A9B79EF
F56996674239888C80055B2A9EDD57483B4FA35A19E1E5496DF7DEAE3470F86B
4F28E8519A4CFF88299F1BBBB310089C9C8916B5E158478161143371D359D260
35A51EE21D40DC0391407B3A322AA86F3F877BF6AC8F948E6F1C2895F591CDED
23F63E728E45CB2FD9AA2EA924EBFAB469E27EF7B8A9C6E7834D6701C2D21D22
39E2A1DBBC7DEE251F5A95A72822A46E6D74E4EA73A5178E0C85C46554A47FEA
EA462998E7818B225E2844E67D16E1721D7F8CC1BB58AC7F38F1DE9C1DCD9C28
4B561B691C018F056EE98B5C169A498817AA60C0082EB6DB629D97019C266DDD
5BA12378B1351591AFB375A674CC847999A000215056434F5BADB9F819825936
2D7941EEE09EF5C32E7026C09763895EA5C037BB7BA6C06F5F063422045CB34D
8F1B03EE6141039464D6466E94869E69221302CC2B4C9E1B7761FB17FF4B5155
8773F081587EA11EFFE169E7536E89B9C1A885D9753D992564CB1501CB392011
53804F8F524EF0A267C775E0CA5B4C3DB4393991C1B91B710EBA5180D939312F
7531A70A4D15DD49557742C47C7ABE11C230ABD0831C3D766B48121BD2AE93FF
284843A9DC26428A4555E83D46C3D59DE9DED19C2F82E1A8B2ECEE35130CC124
43BF5EF4DC9A8CC03917F74281F5F08E3A34333D35B9782841169B97448F1061
6C3C3D021B7D0BE0201727AD0CB5598AE27B62565BB633932B08CB28953A3B18
C92F07F995BD57DCF4A98C33A7DEDBC688AD6D0FA003FF9065DC20065ACAC23B
C0D2644A28A63025217E539DB46C17F1DB0CE8F8590E0684335EA3EF87065310
A0A54E66D32FD4FFB9240705C19A10B5389A73AF30CDB2894A3F47103FDC5952
744434A163456288A94598691F77440700E6B00471D2B0CB017F6F145D5740A9
23D84A25A73A1006BD76559A2E5990ECE612DA0FCAC844C9C153EBEE08A4EE36
2F1FAB57B4CFCD90CDD0B148E85A5963787DE7987CB02705E490EA226E14E69B
123C40D02FDD1EC0E62DCB3E185C78B92DE6F55587FD2E282E0B449D8C9C45BB
F9889C0A855F7E8D2EB83209DDC8EB793CA5490AC8585DFD46B6422D15E749B0
9BC3B8216344BA94FCC38AB143C6175E7D1DDD7E483383C764C9678ECD4CAF1C
FEA7F6697202D57E833A5972F0E0EACA36CA2CE03829CCA575ADEA726FF80EF0
1C3CE14F6AEB33140AAB2106859F97EC1019702A64F5C1FD391A05A60862A79C
4AA0ED3AC15E6BCC89E19DC5F796930ECC63475BBB8C46D48A7F8F83F9381EED
67E4B4F3159D8C19965CA4E138910D05E5AAB0ACD5B68489E4423CE9E2F5590D
B05AF8F52DC10648504F2FE905C518E634F6769714CB388302F2D33DB1D4CECE
DFE2C0197FF4CB5B378298544C3C1CF80E8597C5EA9524238B2C39005BE1887A
9ECFD6855DDF0D2695AC6F011BB0B8AE5B4203B960E7CF9E8874B1E71FA74960
FCF9A1B25A439AFEC620BC92A7A4B4AB11117B492286317A34DA38BBBA8E6736
F33EA046FA55EDBBFD1D1736E6F9A0948148F847300F81D6EA4046306D8190DD
E5D756B5AD0D982EBF9748D4B25090BE0634480F2929B1CFA469F23F082FF43A
59730959972302866D2AEB0C1A3611548561CE7DC1F2CF6731CA111F1829410E
DA55CABA5A5D58CE47250C9C36E862FA92A8C3C803866D0EC9209D2EF91588C1
0FF506F538F425DB395C667E06C670D8AC4F948148DCCBE8A690C81EF8333F94
E4989DB458A9F73B0CB434DA80BBCE0DB1042B0BEA09CF305B2E0A65F9488505
D50A71AFC498DAF4770B3823AFD724CE9D9F09FAA49F76BFA7E6249889542F56
4239743D8F7B2A00CB74108AF4FA0B275578B882F063443E8B00D17527AA5B1F
F77F24171898E8DDE66F7687D3EE4AB64AA6C4C1490F42EC6221539BF0C29378
D540FBB404722B35AB415B034B567F36D460E45522F69E2CB0A959B4B26B74B0
692401EBADA185CB745676F878335A53FD636B5E60EC4CD2187AF0C2BAA00665
D78BB2AA08FC266E193CEFA88A77B110DD623891C8B975CB565BC79CC0562D1F
928FD1BCEEF0235965AEDB6ACF6E2868458363E075326CBD11969442BF38CBF2
78220CACE71D4211833AAA4E4574D68E1FBD64306D29D11B47BB96B6B0F439C8
1EFADCDFF4C4A29414A6E0D0811FDBB56C85DD86611DAE0BEA5134CDEAEC65A0
94E285ECB772AAF18F0711E03E3ADCB4148FE69C49F00FEF8BFB99A744DE17BD
EE67881C70DB92F90841628BEAF88EF893E5F6CBF72DC43AB1A45EC99CC28260
EA680102CE4E167B1B1505B3F1266F20CA84A6A5003C7E7DEFAF45E2BDEFD3B4
66CDEA0142B2E14E18A14BC55209C33C90031B0C745DAA5D9B51AC342038521B
B9B2AEB366046825C3845EA82C73E4DC5935DB73CB432490E13345D74D65147C
BEE0AEC8F47BB0846232881BC10D0385DFAD1F9C572D54030AECD148CDABAA13
CF42099DE24CD30F33EF0A91F5E85CED14CFDC94E273E0AB98BDF0381B454C3B
5B355A4E0CFCE3F99A1008B097236A2B29030F0F84E20503BEE9AC13C6F3FA03
7E0395C4ADDA27133D60F4026FDF5CE66A6758D18E9CB6F29E7A580D605929D6
D70F59E40D29AFE810118C217E015A850F417045951D55CD9CF416060DD69C09
C41F21A7C552D4E0EF28A1953E76064EB5333DF7880B278BCECF4B659DBACCF8
F70426E08539CCCDC1CF7ADEA7F0A8916752996C39974DBE462041CB70C28885
DFB27A438E041E36E772F74B78DF0C5ACF8E02FC181F3E81B05703BAF8AA93AD
C02E0973BA04E5B9FDCFD4634D23238A8F9C5448337A27115206BC2C8CE544A7
F856A80309F2238381E84CDE679759D8DC1AD89AB018B84347F9A6D966FF81DD
2C9F4DBF8B9F66EA95D25EE0DFC05232D2596F5EF6A03DBBDEEA5371175D8EBA
DF8A209BEAC11C1D760F5F6E35825C99CB7AFEFF85FE675EC09FE15236C34DB8
B5D7E6524C4C09AE2C0202845FAA3046063568DBFE6C368323323CAC7F3360F7
6CD27563F5B6D3A7A58C467707FD5D5772793DB4386893614D9B31BC6F60517C
ECA378363D212F5E2A4D93A4DB3670CC29B54CCDB92858468F4EB6F6CBE8A17C
011A384B4B48C2B0AB099B9C1F8E74C6DB757116DA2D1BA0DB43A640A175E725
F42DF6B77044778ED42478B719BCD7C448B44903130AD026DE7F0804A8BE5614
0FEAC399FC99F4F5C1836D75FAB7020116AE53BE1FFC5A8A750D3B45D660777B
69EF5FB24B1FBD86C57BF68F921F94B67E7E100DCECA63B79A558782E3D0E6E9
E3A510F916FFB86E95BDEFE7410D9D91F2C1BD1ED0167007ACB50DC0E9D0199F
17E0E597FE282E8349D7AE918CD3AEB6720FCD035D1D58A61C914400FDB6C3E6
4DB95CB6E4781969E49D0598A6A3009BFCCBD279598E85D93AADA9BF10AAD4D5
2F649E0BA3D2CDA701C2935928FED088016177617E7395CA121AA3B4E1207FBF
0C4C9A1AE8ED9C8E116A9038A7489100E1A906B3F9EC3A763479E4489AB8ED99
A994B79363CBF29C6832E2F5C004111DE2E9D845FCEF4FD373FA43B5A9F48748
26BE939DF8510C832837F94ACE706D31B304C43A87080E37D17CFA3FF1F498EA
055F90050F511736131D4667C7C55F1A500076791E0A053DEDED75E176EC3F21
2ADFD4AFFF44A1CF41610413D58087D7ABD6F9210DCEAA035FDE9ED4A808014E
D9536E648E96787A04833809531B494C367BB4DC1B6AE484EEBF5FBE334AB96B
7C674099CF528200E80CDA936F383B8FA56F6D75CAAF13FBF668F78368F09551
BFBF55A6CF2BCC7E88A660686049CE5C78AF51D5BEDE93E79A4A88C7A162CEEE
97F59D4004EF95AA6E3E836C3792C0E2F1678C6E224147D3F0B04DD7F23D9367
330575E420EF073FB365269C29C1D00E8C3063B8BA9653A5AD36B82DE3D4D5A6
B58BFCDFCCD1285CE47C46CD1775CCE87994F0835B1FB68BDDC05AE2377D4BB8
2B3DCFC2C09681CD8265CB102CC0394ED43E93BF9A91085948BD5415AD51D8AC
801EA70C0D025D999F33030534F7B1C905D212687C98FD2A6E264180489F48CE
5F6876B6C35F309B81D5C84402AC11D9B2E9F6600943B0A543F44603FD27F7D0
DAB049FD3D46D04C99B4AEFB77A346DD8D0454EE9FE15F833C317801EF70E7E7
564DBF3695AA32A961ACF73DED3BD0E350589C64FA3C4ACBBA939B3E3194F99B
AFA6DD8092639E7AC9FD7DCCAA2EDF499F62EB2A8BA149E6E5FD4760891829FF
169B6F955CCFD0EF57D486E1C6ACDFEAFEBD7BE3A395637E0A9E9F712BA01D14
C337685D7D5B3A2206792A78CA3790D6218E70C89316635DC5AD5F61E8941C98
667CEE7E5FC197B27691C8940F0B98E588E519F45D8848747A67945FF15A822D
C262026DE14F1B9FC08FEB94A76F6DE63BA388601B5E79FF96A4EDF8CEB7CB1E
DCD39F510FFA9547152437310C0841A8D13015202249613DD0C7A2694D97D413
FE01A2610FF0C4FE3287C004F716ED355C0AB9C54F24A5E869EDFED766FEC484
700DE4DFF90A42E31D0A6567457B0DBC714C6FC1B80968AD1178A8DD1F87327C
125B7B809ABD6529A4D705151A10F7D3942CDFF495FC3F87DEB0F66327136CAF
48B15CA7AC4578F0743EEBF61C5295D3F46189D623979C7D59D8EC8A0E30FD74
7EE1AF6096F641097AB55C822915287AFAB3E96A813238D1FCD0BF0F7669F15C
E39B2BCF8BA4F9E4F57ABD228CDD354F6B4F48F85C47E61BAF935E380329A419
FC6A81A836C70CA5DEAFD8FFC20BD343CEF5777529B7B84AA3E317B3BF54CED8
BD106076F8D48E58A8CDB3E30A4F2C66A87AB7E614A3802FA8261E76BF473FE1
E53A88A5807EC685F76CC7FC1BD3332084E5686351BE2245EF8F5E291FB8B3AE
7C2C1A1B4D7908FA753D99D0B476527EE3DC2C98B32EE8F9E34D3A4CE1DE2E01
37F3AF81BE1EA9E35394C0739BC014159473DD414D554FBC51535EAFAEBB00C8
FE4577530A51DF1EC6A63F1C56591F559B17C60D8066AC2CE16B06E2F679E7EB
4FF734ABE740323782855102F2451C8216C5C8337E45D03497C710C4AB2C34F9
2947B1238008B67D7CB76490BA2F546EDD2B3477A14930AEED73011CE8C99913
FC8C5A41D697373579EC343468A63B80B882CF1C294CE192150A06A4375AB770
A983321C27F6264A30220E5D271ABD88D7E8F5485E1B41B3CDC4136A9234F1CC
EE166C5FAC93B6419BD498710D0BA80F4B5651DD4315463D662B92DE1052D1DA
FE786CE64ECD03344872632F03E32BAD20D7BF59C4723FBA2FC137CE9E094DFD
E2C451152AE04C643673877BE2F1E28BECB79CCA686B5792D72097D48D0E85CF
A10205A4890659B5A40B84E427889B8E3924DCD3D9F1A61C5ACBE91F9E8AD4E7
137DE50FFBAC00A7E2CDBEC9509C91C2663063A7BC4DC1FAD4DF26BED3CD2FB4
86AB5EB8AD9B3765EC780245BFA03E88E2DAFB251A22A0A51684634C23955795
FAA9B2A0A41C1E5A27F94CAF147EABD715EDDBD7EB43C8D35D2B04FE144E2BC3
B60FF1F1B609EF56F73823FE731270C3E10DD6F297DCD3779B48382BAABE2AFA
3D2A175DCF52D002FBE9A2104526C84E012C2E65A1D1F4E8FC3F72E7F64D9E1F
D1B049F693C253F53C3059BB26AE88236E564EB24A7E1B00F3A21581AC424338
DB809C3511508F4FBEC9E6F0D2A3B75A6211BFDB1D3763E144CD0C528F779602
D9E6C0BD425BCBE939D66BDB3C6719441631D05ECAC3F8679AF90ECE12BD73C9
7D61C7A52F411BD75C5F7D0131C2BE81D827881192F16BC8F79A642BC5C3AFA7
3D03A304EE3E094D17FCA6BBDBF22348DCF0B05CA9E3AD51320E15325534151C
DDF679DEDA691E30E349CD3AA171C7ABDE57EA2BF2189B7F44DD5E480FA2B1D3
3B8765A15228D001A69FF29353F0E25B0A878E2E37AE25D99330577A59A9B5BA
938D5E5D8CF79992E48954C7A690BA91A1FC5A994CFF1D765032408B73E6FD76
C1BFC58341AC156EAE1E373F58D7A6A86CA3B68F4554FC733F4241ACF9CC82BA
7B438B6F253D3E634CF34C17F23D675EEBC08DFC414279067FE0136256F79B84
C56FDFC333F6E76680B65E136AEF1432297703EF6F0FD58988CD074DEA662D2D
C3197DB86B87A036C3B0ECFFB999D697D6000031341B9D65FCDD43D18EF62AEF
1CA902880987F5655287C8EFFB2260D8954E6DA83478033E2B05FCA9B46871CC
F24783BFD26E8AE1D4E7D25998393F4189A0257051C547167BE49D6A047B0DCD
9FE4EE611179B8A13D2273F700661E2AF18583215EF450C25BDF404FF3706E6D
DB75DEC2C34869A6A6B8CB7D65C278F75216693C131A17F44083EE438CF57761
CA7544FD3088BA2F8F967C49A0DC7FF6E0D346D08738C23CBE65B5DD259FA201
CCF51334E898BB17DE82A70F5AF88359CB1DFA3EF7EC6DDD996FE345C8AD4258
1EF8DE6E6E733D5D6EE077D0D5241C273FF4186074E106B4720F16B633E3C3C1
310DCB1FE209937808194443502B98FE40F9A7417ADF3D4B200C4A32182BD8C7
B5CC9C8C4826C0474C066F5FA8844701B97D6AC843705787491371223B65A4A7
0AEA887939A8E4FA74C43372F416F4ACB4E70A11B4AA6D25327E434A38C695AF
561E1A6492A4894DFE4F19D745363FC5AFEDE350694A97E498216EF8047B84EC
51447829BABE1620A531CC1601FA1749EC3A56299FA51B4C64C374561FD6B79B
F9AF8375F8AB4D45E7AEED59F0B6DECBFC34D5CA1DF2EAB0C30F326944D49B03
4F0CFE4975887F6D1CFB9A77144C828FB0E61E3249FA1A8DBBC360AC866A98E2
112607F560B6D304A70A9120B906D96F80998126558C149275F296E5AB539F66
B5158633A926C6680EB3CFB361704620453D9180C3FC375F82ABF3FE87FC9934
72C27A80C590FBB79A3ABC05DDC82F45764F16BB91875EC8BDC226B291F755CE
D4BFADF51D9E9AECC51D21024E387DD2139023E393E783D1E96799A16614BCB9
8567347E6C9612679724E41C6E007AC9E3D3535B7899390BF6A6BA521A33AC67
1D08693D27FC56B4FC37C85D3516FC19A0B8FCDE4D50427102311DDF59248E6E
780CBF4B9397B3A90AE80658CFF0EAE62B86074C00201912F61556B0093D91DA
2EAFE5544F4FE4E79D4E70527F165615E9F45A56B56294F465EA1FFD9C26C225
6BA37FE6A3FB265BA2D90D0628C7D973378141C0D5E654B73D6623BB5F457171
47CD9A6BCB5C0EA5F624907C69619D9B1550083D0D4A2CCDC114B3775A9CC0CF
232DFC9DD1F01AEF0BE8D4BF5E902E52E743EC2D8DBF4F2AFC0006479F66314C
523303DB67C249F21E482C7BC5CF0EBF7796C6E75FD3CFCC288738AA89C87DC1
D7325F5378CBDCD384DAA5F56C6D8C52AD550DA63FF92D005087E71CA920CEDA
D012945A058739782ACB8A908C5EED67DD18B807C634BD10DF8F3BF9C6A691AE
5DB3159E7BBA87CA4BF2810E296369321E841DCA97594D3D9687E512711C58E5
4C07BF5C88EA1635C7F4FFD7E2B28B33F095D29CEE15D3CD7BC519E93E7FBF7D
CF8194A91F6F8C73317A8C7B42CF80F141AF9AFEEFD297ADB0EC8CAF782D3D38
22FD99934B1B53BF3BFEC4B189A579A3EFE930DAADF9B765571BF82A083367D3
73E621648B12A199E3A4A3760AFC03DCEA39A6D4E887C82D39DAD2144EE1D05C
89CCD63D53D3281A277DD8B7103C432EDAEC184CA59E809F2163FD5136FDF4FE
B648CC3C74349522A9D2216497EA3EB56A295238B1C67021B373829E725F69DE
A8F2135A6B950A040640DE9FA5D346433B09949B3F28A51A8D97FC5A1C4519F5
0E5B0DBFFB042F6D243909CEA80956967FE147E485023EEDDD1CE6E8D3DE263C
B3CBDA2BB384DF1D1F06392BDDADA5C93E072346383EAC1E6107227435CE1633
5EA331812994B07E4934FC492EF91B3D0D6E79725AF5E1F1F6B3D1B243E16B5F
5E76B910FDFB433A6E71EC01EC17CDA81D075FCC41A5B88FCB57B0017013B755
CE61CCDD67B723A7D2F4BC147C643E9F031D1F9592D7F0278204C46D05EC8450
59600048C4A621FFDF61ED9B814195E0E748DD79A00BA180BC04F897138517DD
CDD3DC7FE7F4338B02E54D765DC330802706BA8E9E2850C67FC73BA43ECAFA85
03AA949339A8529111D57709A5AD4FE40D5CBAEDD4B7965F0ADB37AB91BB0AC2
6D73678FDE76E5E24E5179A1C1221876CC483577E59F6E313E12925747F9F6DC
9954318C05D1E26B9F0F5A6C15EB46A47AC81015C923908178A670DA25EFCC9F
06D080C47050D78526EB79B36E8900FEF204699E91EC7062E7B132800D366C8A
AA9024361B6A517D9FC23059E60A2F7B8CA8BA597FFAD7548936CED6C34DC87E
262161B1B5D2428AAAA3EBD9E33CF9D200A81057F09CBDC0449DCC82B02C05A2
1BFD6E6156D3CD961AE1BA379832E6AC2A2A7B7C61287D69E8C10D14E1CB00E5
C79B1440F7B5EF9FA60614E83EF697191133C0DCD3ADEDA680F54532E3C9AF4E
ECF4D80FEA2A520D89B5DDDD29BE5C2D7E0E1EE1C44EB61A945D603E2B1F54D0
33BB0F6A704A172BD2BA99AD768D8F8BA1FEE464069D50837B2D559F19B2BE9F
4381BB511B7E4A56B7DFA110A51AB419E3CB986AD5BC719F868793A6E71A2ED8
754FE57186C0D4EB38C72F02C1792F8D8EE1A85C63D8B5DA11BC7E9D1657A8BA
0C5C38C6454FAE642508FAAF184CE5765E766F5D10763D4C3DB80B2551A62A52
7010719901F813E86C747C089C863A5C2596A6940D586598C821F2927BAF0FD7
F93E8A562E84134DAF0778665C38FA788B9EA329D49A45C629946409E4B8B018
F1689242616633318059775F0B0EC0885C46AD6AF403AFC2E8F30854CB6EDB44
AE4BF87DBF0B85D3A9B519C3A8D29FFBD08E23EF92C4A554A7C0480F6D2A7C49
2BA59DF359888BABC39B798C6F91EFD063BF7A39C0E8CA11F7C818A1347E0C71
7255C3E2B4146A17ECF4C293713D6993370C9EB31E32BFB82C7619552DAF8202
7831E64E34ECE3CD1A17C56019F24178EADF0AE026996B4977028EB1973C2F18
D84D522C8594EEF15DEC43047BB3E45F75BD34B9EF0E876F96928E1C3676246E
1A25820E5F12C1D86B4460180BB087419E5F3115E72713CF1A550ABC0B92F515
01E0803519FC285A33482F9932F650892181C8CDED670A2301A38A06A978330D
D0CB3E573F06EFDCAED10FC116D9EC57C5E206D6B1F20D05733203A64DACD5FD
07E3EC3256F7DE2AE2F289D93BE0FCD8F7F4E9C595FCE388F10A24B70C8F8886
190FDF77162DBDC1DAEC6CE8002BCFDDA52C2D3958D61948D301548CFC2B5128
4F529D06BA79E3EAC8626E735BB2C4260447B27810405FD20DAAF263BF47FDE1
78DCCC9FE908C7CF0DB766CE0589171292746B1448F3097B0A0248814DA30E87
BBBE2C4F28F49F0237F3F03053888C8EE2015CCF5A8A45C203DD6B7A2247B281
67EF2B966C3C93545EC8DC2D622E295A167544CEC87D82E77E69B3EA3ACD340B
7155F417176B028A8325603C5037D42207ED99A5F2DE56153B0CB3E40B638CC2
EF4ABAE7981D36D4AF0A58CC81FFDE71E1FEB34CB216D9CC7F8A5E70B0B73E55
9CAAA5336AB522E48D070E87338BC944E055374E6059AC1EBB203AE431A63415
CF6CAC749486C2EB715EF0EFF0E6958AA6A4629C8F498B004A151F0E39EE552C
AF8B59D424DFD0E82DC2DDC0033D035B1DE1E55E32226BBF8C04FB3445793244
1F15D9F9FA06256986B74B7477FD1BA5995A82A94A6E9631ECF4735B576FC9D0
3838EC6D86A6D3D4BB09DB5B17EE7FB6E7E396D2E0F86B31ADF541C040F88222
CE17F5F5079189F73B9EE13701A4D4D4C96F09275B1CB63AEB30D8670BA2CD35
E6EEDF41117B365850AB4E599B073DFEF8F7B314CD198D2B2C198395B193C4B7
E1D531906C66EA6A4FC23AD869071F5D6C0FE811EA13D60C668572AE2FF8B426
0E217AE1084F98F49DD94C2ED4E4B9F225EEF68B22AC30B2F3EAA255DE2E1D74
5FD432000B9D1A9D9B13267A35E624AC6FD6498347718B1431A16F6220955DD9
FEA12218B2FD772D583DFCB2F2F73F45378D4768607217EAB49D00B53FE86124
2F727E4D3DA5A7B7E7B1A217CE8EC2BB7F9827FF3A91D6EFF971B788649ED534
4CCAFD85CA28A240706188A087A4F0738CFF2D5E2761906F472B80BC3025FAE9
1AB5CE026C1E07B5718F9384C40D819A20B93C03B88C34958961DE23B56002E8
E30F8762DCD0C9834D5815680AD031FC174A62DD4CBDA42D8757D447B3B246FC
1245126D51795C53ED9144B0FB6345D1298BBD47C47CDE756ED5285B583BB91C
B993BE79C36DAA3F0EBB1CECD9BF27005A6AB5397EB6ACE1EA82F23174DFF8C3
1D079009D99C7920C5B0B8383ACFEE3BDA8A7F7D2DCE001CCFF6DE87594B1047
874BF547A06B72BF862F7BB04980D7D5C5E5415FD59DCB4DC2E0D3EFEC48A8A4
7976990B3D08F06449A862E4CE3B74C5EC7B6D3F4D614C72C81DB5A069FA8948
233372945E7D789C99BE27EA0E0D92BF9C9254AAC78A26F0052EDDE8FCF7B9EB
CB85414296870C933565B931728EDACC9A8DEC586772AF09897C4E09E3CD8430
06AA9BE5D9FBBAAD672D643BFFE13E050DCD40216C8B13B024398FDD855B94E5
2711EC94704B1FAA9879ECED01A3772FEC285679E2D60E93307B6C58B88DC65F
4ADF20AAFA55E899CC47C3E7F164E7D02BD36397E17AF9AF33009EADFFD09839
B0D863B3E31BB8CACA176CAA60DD4D49EC86F74026D133FFD9277212F8DD1DCD
2C72468612CC8BFD2FBA16CFA3654EAC3D641D5A8FAF37B6A17079DB924B66B8
BB0994B863CBBA8A964E41567589ABC777FD726BB1AC83017506D523855813C6
4D40E93644F66DD3E5B745A2269A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE064BC47635CCA71
AA72328472FF6822BD62A82B7765A73CA0239A9E28179AE7740477196602ABF4
2EE916B80AAFB638D00C1FB2A1EAFDC4516C7EE3EE4F5D3039E70EF3B07915B8
7C9C128C2ED3C27FE48D27D39B41E1ECEC46CD2209D760D75E743AD13AF1E761
A8B7F996ABCAEA43645546F42C87F6909258CC74419B96A39D6DA3233834894C
C60B03F867B6ADAA2C18F60040A9D8E70BAB12221217095DFC57117CDEB536FD
A09E11787D4F7B448F88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C3284ADD469
2AC17DF0F50CE04DB21BB8B276691749E2E6F9BB3074DA40AFF782CB25E02AC3
566126F3605C5D91AC7F8E69FF15FE9F998D6BDCCF481FA69BB6B02740E8E674
BBF93E87F057BC472913D788E66AD436C8C5EB667A9E200B11C78F1226D5941E
BF08A7D237E81E39B47A6F25B2EC9290B2883555ED7DC703B3EB5C0F679227B6
E811F2C38700DC5D6EEC5223F0FDBF80711A377649E17BE3301FB1AB1AE47128
7800936B812CBED8EC4E0A114FF329C5D7372EF249FA82D2745ED89D47EB2E62
91A6066F1FE1971379E043F280BC4E314A0EDBBCCEB0029773C9574297BF4E64
D19DE34E73FE10D63BED7FDE25317440E34D4258502F4F01C52AFEA66570BE7C
7BA8361C07E06C4962417A31D0EF695F8C92EB33721D2363555F9F5034CD2955
B664FE75192F33BB8359030780CCE9A99B4C2FEDD3E39F711F63E15A82F4D4AC
55BFB5357D5AEE55D7062DD9A9AF99461B1F89B3CCB0149CE5F85208AA40009D
0682CAF5DB0821AA0F1378369902C813DEFB1A46426E7E895A9862CA1C8E10A4
8D3BA9DCE374762E175D3F06009092F23B871D14D3A3FA6A803B2DEE2684523C
FDDBC23B89F2A60DB25A27CDFAEFA66D2F0B1E5CA6EC76D9F6DDAD37B32EE662
AF7460953FC0A9A530058532E346F581AA85779C962E6F13E571E159A42E429F
A897523203F60ED4A87309FF8BCAF803D7FAD72A7AF7BDBED08049B0A868E226
23CD452F23ED427E439F0BFB8E51935CDAB083DD0F237B28825580C2306494BE
4FB721E4FB04F7B5D6B669502D0EF1B69371902CE4CF8AD84A8282A03C237DA5
78C6008FF67D6ED281BE7B396928F948E31B89CEA0D44B1E9FD3E9E8CFBC339B
8622C5288E99872B907D5A35C31A9064C3E522C63FCC1C69DEA3873E2A39B27A
9B7920B10E6C7E03FEA1BCF17D34264BC6DFB07D15896EB030D2ED4C12111379
7CC3D98833B67E38262680EB4AB9A4D92F1BA39865285CFF7DCBFC096FF9F878
5CFDBAE4B752D854D86A959AB5CE42952C956BAD194A222B76E5C01FD5C08F27
B2244E1A7579BC8B321BBF4E89CEE48E539E691F9563A45FF67FE0970DA66609
24EB00426703B781A4692BF21909880CFD73B51A92E3E71ECE7A5A78D48AD4A1
03B97A4AD2883802EA9123BBFC76EAE353656AE61C931C27705BADFB258D56DD
54397BC47A4FA41BBCE36197BD8EC41D02C86D0A246F40D007715DAAC213B3E5
ECC8E4815EA573573B64BFF8B6251FFE5B2B7E39C1EE2023EA55F8870E7AB26F
14CAC642917E47027D2FFF3622B08C61085C4C58A91BBFC23E9BFB77430B8E5D
C464877BA684728D00ADFBC1468216B87B7A86AA4110030E18F7DDF321AF4A93
69AC60D04886D106B7365E7E1622968858D0D7D1F81A5758FF302C10135DDE74
E372502F535B2564F43A689D9DA1043D288DEAA0061901488C87D0064DF99B96
25EAB93115FE5106981F87662E3180E51F1800FFB0CE77176E348715DABCCFE4
A1BA3732D46BBDB1B9A5AAFB7FB9483184C8E7FC7E2B72320948A93683B55DFF
EF1A246FE9E198553C18DB4B3F6B3C575BCCCC55AAADEB397E6727F9367D0AEA
C3F2C9BBC7FDE177F8F7E7478790F27A0E3FFEFC4576A763849C3605BFCF09E5
33CF65B356A8D902BE94A449C5EB8BEBF9E90B484FC8C8D637F6F6C0136E0E1F
0FB0A3B19F1D1B86B55D62ACB72C877AA2E3437B035F7E7ED019E4EB78C1A95C
FEF5D63253821A866F13CE96048DB6FC8FBFF9AACE0299E84F822C50194C21EE
916939BC0F25C44B4AE7D581455520DA75F0AA2AD71C12CDAC64F9F960EE62E0
49E6D9BC9858A3ED3CAA1D77CFB2D4B6C5E3F2FCD8562ACCDD70CBB223ED1F8B
2990CF39A746147F456517EDB169679D88DC163D4F588DD39081FA85144C7D57
622C0A2C30E211FE8040A6C037E0D504DB129CA8521F416DAEAE602E0E624AE6
733761208670F4383A3A50AF2A15877C5583EFB19808FF6A5776638DA2C6489A
0807A9C018CDE1EA43EEDB95556CC313E49CA2E024307F099920D11BADCD676D
AEE28CE031D2246E0763A1D3BD6E3C668B0368241FCF9CF7DAD7ED5113EF06E0
86E6B7C3D747DAC7E09336B23B240D18F69A5FA8A6EDB8836879B160C3ABA1AA
049D6D4E2096DDC7984C261817642858E02134BD213622213C7558D6B4413B99
726EF6A3D628162BE17AA2DD3DEC86DA34861535A4FDF284907B1FE2CC37A495
4A9DEEA52C77FCFD2FFAA5C428B7325C44FF858419A90695F5E1BC35CAB95FEC
09A75FC5FB483282D5589D95092ACA49DD2020416044B5A47F8AA0728D1E8B86
00FE25B380D2DFC3330FB69507130471503204710CCBA0E0138D450960AE529B
BA400A7FE6EE1551AFF52F20E24FAF645634CC64374047FD284ECF25B6240F89
12E6B8DA8C737FE57618A6967B964DCCF25D2190505A0360352CC62DF4EB2039
79C77A24D5FC81E9B9C3FA269C8553905A0D830E879AF1500FE9A95034D47818
B8235920A92F4F2A1CF72AC4275FDDEA364B0E8DCEA6E5D95B0C3B9E32C75B4A
02309F9972FC61005E7E5AD1CD992A1AB06A62DA5DFC521AC793BD28FCA5B864
2474DCDFC2D7017AA69EA69FBB406301E0DA4B2305E9BA211FE10DB1E5D223D4
E55C35805B79260E90985DA5E5B2F43DE20C88FFC83E4168467A22AE09E5C7F4
78ADCEDDDBC1CE8C2C221C3E656F55B139CDD5C4C87B5870BFAECF6BCFCA941D
2EAF8F1F26C506A1E1BCD761477D93651F1887304D1BA35FEA5AF6530B988B0C
D4C01936F03C32E26E1DBCF1FB9C10D83078DB4C600E481E928EF8263014553F
99B1F5E12F5DD347E5B028DBACB7ADD46658B68A3DB12F35581E35EF56423706
CAFCD37B081B793EC2CFAF342C9A3FDE75551EA7948959C17C911D9DA790DAB3
3E7A62605E65509A8ED679056CFAE2C8FA0CAEAF0A927D5C02969F9ABCA1A90C
F8CFFAA2F11010FEF2DF19711939017FC1AA96D6B4817828DBFC1601D7391127
468DD235D043560298C075C23C7CD2D8A720B1117FE1D7EDB0C4815BCF6BC127
FAECAE7D848895E96EEDC671A79D36CB57A9140802D69B485089A1FB2CD0DD0A
9CD725C57D247DB8CEB9FC7920F2C0139706F6828695966B8144B05961497C62
E1928A76C33E730F739778B6C25721662E0F626F85F24627E9A538A15DE3F85B
8A8A963B6F6E5D31AD786B2146703F0ADF44B1B1B16288C899AA421F4059C474
FA568979A964F519825659E854A8BA969D69F179AB98CA56CA3E82E7F8CB46AA
DF25217EF5D3A12F9CFAB4469A778BF067B751E665DF289D40E4C6F3997A5280
9151B04B0E615A091B7D8B708F94ED48A1E0E3FA01996FD0A61EC94E383EF8B7
E41F6BE9C3AA72EB372DE611E94D5FBB4A0CDD161BE473BDCD4958E166EC99FE
60AA5334CB63B98D4A88F1666E9A2FD208B9288D26172F6A32D3C5E85739E3FF
81DDEAE9E619598C6FB61C68E6E445B55EE19559C3FAA18600342B4DE22FB720
1194788C001E13D2E6E0C8FD6937E0F1C54F38D882DDE8DED172D5B1D5D6ECDF
F84902D9D1FDCF12B35C68F2270FF99C9EB398ABD2CEDBBE4AD9DBCACF045429
3448329C40118D2CB1ED85667AFCE8D1AE6414D63302AA07E00FD414592A6513
C287BE08715CB8E36ABBB2F276B5A025DE514D8B3C912B3B3BFD493C2360F511
4D530140C95FA4ECBD78008B0695E30D3477255EF61C590A827ADBF1F5BC54BC
A3800F83AAEB8F3D60AE5B120F1634F0189BA69836D76D228AB453597E80B7D3
FD49E1DE1CDD63BAC2EF7D50C3A6F64CB77524DC365B8B5A1CBD17DDDA448FA0
086CE1D80821A85E50B1D94A1015DA1FE51DF21FDDE7A6CC0A392D033A584AE2
2BB7365C93C198C291CD5DF9CCDE6D2009018C5FC06EC0F9D936CAD51D014165
AE15C467502382E75FE0EF7425536F506606366A76204D724F97689BBF2F02D5
A86FC1759A141DBBA602BEDD8354C358D109B7FFBB8A539A5A788308E04B1410
5A1E7E3B202D351C0AA0AD5C08E8B57EC3EA8859BD099F2B35842AF2513D3046
DCB55A8E30F03B1B44C6DB8F5434E8208FF9B785AEA25C6067AC3E3E0649D3A2
12C8C2717A440DFFFDE93D6B080E8D6262367CE045C7F44B6A10A10ED5AD4E6D
5020DF06DDB6F0D6DDDE2D630E60547CC89F59B3820B36D2A4CABC856BDEA5DF
E1B81757802E694B74DE8DB014724804073767DFE5B2270522D298A0BF31B2D5
38FFDF5EE37D005FB319E63B0A1E610B7A08B3C8260BF1DE23C0BAC10834B8C3
6ECE4B6404E454F76928AD331123FC0D5550765A9D4B49446410DDC3B41D526D
99AA5755841BA8D28860C3CC71E16D4733FA7F51C52741BF812CC81EF82E2888
3C6C8117225C2F7F19581D79F4196DC8949D6DFAB7D9F48A6A8C33CD8FCC6B93
630563E616576C54ECF3801E5C254C8DB26D5EBC13013E94942CDC0B947B873E
C6412D7CAEC54DA233359CE3816256FC88BFAAA5FC3B713F6E2592E2DBA6A7C2
792904080163C489F78582477DFFBD41B60A10EC7B9420974262A20AE6EC81F6
D4BCB656D151E70026C38556107B5B1959ACEEB34092D88C73154A0856CFCAF7
3F95F7271512805396FF417D22175C812BE43BF30E87EC2C8BADD714F8C55BBC
B42751E61C0057E3AD5D1237AD7982B336E83F52B85280F23428A980DA703C1A
231990BCFA8D492C8D6B2A88BA844936AC0F2AA6800AC387235599E0171A98CD
838EC3E5F005724DE21E4ED1095F54E726A49341182890C0CA0A8BE35A615F06
5DD14414F056F8BC4DC0EF01468A885982DED7695A99B2A5868631274FE43482
38890FC7A0F450295CCDAB8AAC408F75BAB9CD4BDD4F35233B8E5A30A81849E4
56D085F392DBB71FCEDAA299201D951426BA4EB4992B5A523877A4141508D365
50887883B3C9AC239DCA8EAE4F56629CB4939781C9454987D9A8FFE06EEC9954
4F4C808346B7C97C6158D33B1C32ECAD146546CA716558F7A0911C09CA68B6ED
9664B1991959652D328D2E1342BBDBA4155F5EE6CFC9617EC1FCDFA147DB71BB
AA034E8C3206977BF27F900C972401523CAD4238E553E0FCCD1E8BED51185356
87A557DB7A831094E3986C1F034E700573619C2FA5930E23281D1F886727C67C
8B3A1E06CD715FCE3587AB4F3DD17077FB9904640BB6383E95C737E1E6886DF3
7F5B5020FF51A3A6591CE0E29DD2B106B12005D6EEFD1B6D73320ACB1F9C34A1
F417BBEAA8F292B42926CF2AC2CA7FAA1B7BBE2249871871BD55E5E56B12D629
001D01A712F142E2CBCC77087E070FB5A398A9B6565B1A55CC5C66F951351932
D2A31913DDD824B03143E878CF7C9CB9058B9B16B9DBF5599BD13943BDCD7C48
863E5F7B5669D3AB338DB33054BFC4D1579D20F5D78DA7FA76C044D3F4F01310
8405DF82E0D367A0200CEDC0AAE2EE205807B7567E147112994F68FDA0005EFD
657062B91C7D40B69E0EFB3025040A619E34F538912B267CDD3210A0C76C831B
F6BD5DA4F1154E8176C458788E6C283C688456A1BA91A4B722775DB1D43E5572
35EDC7A31965E592AFDAA902F484D7EF76DE57175F79662D84240FBD48DA48CD
6F7D1A1216D8837C69C2F92988CEFA57C84DB354D9CCE10BF77C8F38EEADC554
E721F169C2E28195D577859C49042A080229296940CAE8F8712E1BEC7272951D
9CC4ECBF2DCE2D34C6C0F2D5F535AE93682E855B1BDD6CE955627281039A7753
771F4B609B835A6293782B98DF6D611220003EBFBAF734E2BE64FF1822562B01
43D35A5C72261EE53F4899C58A664D4ADEDF7B74E13E6D85E03E615A60A2AA98
3DE968A11E61AF16CE3C561BB821C5577F7ABE95D067D8B83ECCBDEED9E4E5B5
370AECA48C587ABB5E8C77E296575F5B893924EFA75FC55E740C78D4A1C58DFB
9828E99D1A8C7C2A6C659F3EE6D6D5F242F5ED8508E1C9EB68779D6FEC4A4E1B
2715664F98F1E30C448F26339969747DF3D710AC7121035998EFC1040A033642
22766029341CD1B46D9B6439EF7F936C9151F9C4EC7FB500FECC12C6089DF415
22A1772D82F92392B9224C232F332D69F9A855FFCBA0AEFE76DCC89196C2B187
3C725C938548E684BDD651A058F994B3221085A2C4867AB5F55132A3DB9FAE17
B29A59D2C328CC6D94A70E8C4DDA6D0E77C5DD2FAB23AEC83258746881E4A1B5
2DE97C318CAD7E9F75D168A06949D6B1591DE47FF98D5BDA3E3E0022FD6C9767
BE229F35324501AEFCE0417066719BF96B2C7EEA9759D337A840EE8E7C6E5300
6801C01DB6540EE667071CA18620536B978D5BB2C31BA3728A7511BDF21EF0A6
2A7512D5DB338DA0070482EBA48259A09C4C04E9F90BCD8E5E60BEC275AE47CF
016E3B3AD1A5C090108D4964C7FD5E57B2B702BCB4CBA088D3922EEE7150107E
3A46EAF7928ABBBF691741ABB6BDCA12EBFFD4384FC57CB4689FC0FF8B574B21
30E42AF31A2AF987B5EF7FB5D8C75ADA3F1A5BA0CF2B1EEC07707515C98EBDC2
768107C74AB503E5515E5C785CED7E829F5B18B621B99B494EBA7C40428095D6
DEC5E3F349A85B3B6F37E3D243902A687BE41534BE3ABB4335231A764745E1E9
B55E69694C514BF8D263375A8A64D2488FD5562C307837ABBC42CE0AE98F79A0
A179D3136C41C839FD2276760A7B4F21F4026AADC52DAFBB0794B5CC37910B42
7A1174243DD1049DB02D0EBA3109113485AAF50BB788A89F62C83537B418F279
2994F9032AF8371A46CE5D8CEC7FCAA3557307E7FCBB490A13F19098040CF510
BD9213EFA7E4AA3A5336AD7D86ED0EB76C02DEBE0FC076D946E67E8B950CE6F9
44C07E649B1492730D0903372C8F8FDACDF767A408FE4E1B8BBF088C9A4321EC
AEBA773E5940039A8AB12B03F1911186D4C0C238D4C8AE82F0C1422DDA808D36
5A74686E86B98F600E2CE31F69728A606239C9F1D3A39F34292A4A13C1842F8B
EB840BBF05B9E59B4DB6BD8DF01C2D122146F4022C69C6222793E83D322832AF
C2952E92134EB872B032134BA8EB05FA3F50969ADFC33797BD8CA1730C00FE5A
D3347370CEC5641B0A5FD57FBB3D3D2AFA7190932EDF4460445F0B7836BA958F
763828B23FFBA9D811510C9FB8F580F55E1DDD72A0002F87CD4BCC89FF449A54
A07AB73051F80654DA08D1AEAC8A2C07BCFE0680F97993627804F488BF649C05
A54260194D524557A4DCFAF525FD8DB541AFE3686B5D80A209D84424EB912FC2
62D4B1C0533316F0620B7C6C24A027255671755D35D7DBFC1153FB2FCF7A2358
5D9BD64C4F131E7E7A4C45AAD8F942A27E3886C50E125D38E8BE223CEB297031
B7100079F85487A11819E6EC4C31026B49433392C893CDFA322B2BF2CDB4B2C3
EA235B1E568240DE833B7E683E68BAC9D75E265DE0AC57F335F63E8155510D6B
13F1F4B67E31A7E484A4C4889AE83085F20B17D80CF672B43267C4E478F96082
F762FE4B75117E712D0EAE7E59DFC8D9A691DD1B8CCA9621362AE1311695609F
2A617F4B7CE7389C563DA96021171B92BC80322FA2B8F1CEFAC9631C08292F76
333E2CF7CB11FC108B8EA41F6CA3FD268032EF28746D55C68ED462C76022EA1F
A89CE3F8C9EE79E7498C778812464BCF069C62C488710BBC894B2D8565BC6D60
1964B36A40C001EF11095808C27FC4DC62208CFB1129CE2D287824E26D874C63
19D720E3C79EDB306A3AA0F45035D121810E3B813E4F4E7D5C23673BB52DC191
365103F27E668E38EBED10ECB6C6E7E2DF19325FAE7204F6243A9AF1F463EDD0
A9C01115DA456AA943AFB45D7A8DC9DF6BE6AAE516278B195410268E28689F54
68D9F92340FBFC8CCC611B826E2A6932F8041F09C10D3E203C1D6F6884A5D136
F79E09C46456ED7E68F879E3AB6A9D976D0B462D7C6C2DEA7403DE02C3AE0D1E
7529A87479A7722D9EC804B88B7533B73FC80DD7AF1BE905F322A65F97ED0889
45AA09FB875F5523553A09BE93A4A39EA4F710988DF283FC9CE0D25E65A8A7BC
711E3AE7121B43C4D183F4B24E929BF72A2443D74EAC3AC9EE1F8471E7BE285B
3779C63479C147E1A78C768698F4154FDB773A7D9E8FDCB09D9CD155C50C9615
6F8D806433C15C8325EC72EEC62B03337F0CA366ED24EE91B1940BC93508BA79
44FD6F9075C78860F4B213F43E7E565CD9E089851AEA8FC0ACD63F75048C7DBA
6EEF9F2631B6E6679AA5D0433A84E1EAE36B1AE18CC41ADAC2D064A16B3A50EF
A4ABB2481F4686F4524AD50DE11B810887826AACD696A053D9243380D8BE3733
7B51D45429CC07F9A407BCF4944396C6547AB9199C227812136EA54A940530E3
4EA04BE41F18B2CD190C40ED01B4E376A433BDE2120D67E2FBCAB9585FCCAC55
4EA68CD2276F235D1F3E08E60A27C0BD1C21B7A63731678F1FD2D9D6C4556CCF
885606CD9630A21F9D2440DF9205699245C3C362EF905C280942FEA82F241B5C
A8B55BF240F27880B1E3063BFAE23C4633B48B2E2586EECEFF519EC5F14BF056
FF0804DEB3609FE188E3689B9BB43007DD556313E162F8159FF0FF270C0F1D1D
5A0C48BBE2877B8118BD0CEEAEE4E2CB3C24C618FAE8B2A07CAF0CA088E1F952
76BAF6786A98342DA22A9177B298C44F000EBD3FE14E3515EE2448BC00A507CC
4FCE9DAA04D7ADB2BA3C796198643D5B5B46827FE6D198526586FE79BC040F74
2F91052BAF55D410175F89B07965E03A26958DC0A695C2BA984DC327B2D1A901
1E6DB56B182B3249E70D5B56D93B34DB592555A6247A3D4833EEA607C3BAD2AC
A097B102009098A4B6E0567A4CC6A4EC21D6F62D2EEB3C14DFE446C0968AD082
997E69B3F0B9E70D33C9A561C1B66554F0DDF3B6342044F8C065BBBB80930A39
6528FEC3FDF02F924BA9451DC545C3D509F8290068B65BB6C2DE71CF746E8EAE
9EA7ECCE7EAF7F81541B61DCB633EDBDF78ABFBA1E3AA92C88BF070F8CCFAAC7
12E7CFCDE7CADB52BBD04F9C8ED724D42B071613EED9F68639910671A93BCF66
6139E66CF7D2DBFF3D912F8964B970EAD835336301860E4D6F85E67BBD5C01C4
0CE469993BDF6B4E3300FFF9728FED3B48754A59A718BDBB81D4992DE85C3E91
541BB28A7006758D5ED2C927B36ED41B0D3A0EF22CFE845A69F2FF1D29A52B80
F45FCDE140B87D091CEE45BE19C46A4273F14F1ED4EA76A18CAA7AFFE06A2759
1B5F466D0EA7C94B69F91DD56F0E1CDE0D753D9F81D532395FD31FDC36387C50
B260F4A8BF6B2118362CFB2CEE5E77F98BD31AC2CE7BA777B592881F74EF271A
9DF64EC4B7F8449579DF75D39CDC690D5A0DD20E31E5E08B89B0E35A6FF7F390
152852EA55B22A0B3591C64736E11D35627F645710C734A19274E68A407F72A4
3D0571264482EC4FAC2A2AD750F4CEF651C525082C14CD8F6A110BE9F24FEB7D
BEA3FDF2C973B29E88A7CC1CA75DC53DC7E39ED544DC1EA9B92340AF6D5187E3
CFFDC95FD2CC2F53772199CEDE12A6355810BFC9744FE79E73D102337ADE7DB0
B8F386A42B627692BCA9148ED6CDA79B5F208D3DAE890711DF5173C090685537
25AB39A3AEEC29906CB1455985A5A125FA11125FBA828C0246914ECA5B1676DB
7A4610237E6C260E7E8897C931BCC729936D05B4710BF1C621F6A9A3146FD4AB
B45C90CDE85E2CEA9053C5F3EFB0EAAF9A5C5DEE9FC844D3C4D7AD86EC1EF658
DF63F2890BD63738872A05A92D139A80EC393492EA0DA16534811CD592A342FB
0892AD1E795973564204FC3C8AC7CC588D4032D6AC693E24077635DAC3F546A1
AE6A3368EE667E7D384BBD1CC67E7FC006F5D5A7D3C2915A9F7A26C594A7D416
5309BCA281AABC4084B14E38D69993CC74D56B0DE974A0EA2FD199E9CE839DCE
09AC4A6AFBE689EE2C0BA51190DF2DA2489F03F9BA2DF35D2483A2CA9ED340F0
91AD9892B09D67A65FBF407B9BB325E685059F27CBFEEEB11B771FB4D53AC9AC
2507650E6E74D664B244F8C3BA6E6CD5AA138BB414D921AC980DA0F19A573E62
2A1231B81620611E09C798E57A57948A11B588F665955301F5545EDB450B595C
AC609752C98F45C187F989EE12C99334032C0970D6960733AA79CD07BF467942
AD4D48C40B71DD23DE3C545978CE19297BD83521074B551E3790BC22834DF901
A50998A25A359E59F77F9872FFEF1A8BC1B76C5ED5088DD38751B0D8F17572A4
F47DD149CBB6E1CAB87956BFC372D2946562D057DB7D6B3A7104319C41686EB5
5C398E3F63F8FBA0DF2195F62CC490BCC3DBB6A00A7162165CC0AC45D73360DD
D66945D64FA3F73CE634206D4AE90ABCF88A906F9F5779033EC1DE165895EBD6
D65FE8DACC38A3BB2249B7B4A5DD0DB3E521E9A59547FAB1E47C96B1A23D0578
4FED88D7B752E0C3333A2FDFFDA30485C8416E81FE28FEC49FEF00B602B3DA2F
200F425BF76FCEBD2AF7E3A861D8AB583833227271615859E47EB24FB44C0FB5
B3CABA64BC5C7CF9A24B6D7A967592802D1E18CA6269171F474CE7D990AF8C98
80D27A35BC4C0021571B3CC5ED1B6638CE999FDAF71526B0061B23CBC6282C61
17AD928AA7A4FA3C63B7F1E04ECB7B4ED443B93841A432E809FD0D6A8DD54A14
69D3AE9F0BB80A99FF06DFF8BB42C3EF3C7474FE46801A8D5DE7E78BF1F0C189
2059DF3027E25596EDD4EF5108DD6AD41898BD17C8D6AB227D59C1C0D962DCE7
C3416075E1290D0B03C9AB9E69186019565C178A22D027F78DDBFCCF05B3C843
52B0C8C68B64FE3D13C77D56C74EC021571E2CAC2E32267C0818B5EF7FB86F37
F691FFF518F470FED8559BC0B6E34FB6B56A87699C694C949F9E48C6F4E47657
A308FF7290B62CE89B9D976F991B755309FFF28063F43200516B97E001C99508
457F4F1A9FDA5B71A282059FAD07F692497E6608CD5113BBE0267588C0BB8E8D
B23ECBC4AAEAA7227B717D3E2A53E066B2B9AA88D4C63B6C54883113018D8FB9
1DF5D145B0EA7A37B8BED0A15DBA06FC1ADACE3A165DF3E9E05C282783F66B6B
E61AAA6826EA79BA2500B1E9861D60D98BF16407A108C2C4E1D9387B71BD0678
07F983614E5FD9E8FCAB9AFECD01892CAC88FB096B7F6D71A5B655
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF8536EAFFE3
51E99FBFE366A8105105F3ABF883222A8596B5C71A798B4C25D89E1A97DF22AE
7F7C5F36F1025EB753B8EEFB121487E91658D1692E96B6A021CEA623CCF6C9BC
4ACF593CA80F3ED850D167CB091D6F95BE42F08C85CA35DA36AB230E3D91EDAF
A2B77B58F4D04FF628190034DCFE58B45A71579F9701691C2A5A57BC5C6B1992
738F39E279ADDF7FC21D76436C5E22167202C94B089B617755699EE01A4C7B87
E4F5D46FB80565D7EB65EFF9467A98BB2A1B06CD5A8AE30297EAD23237F1A1C5
F538FB22CAB1E57CBB9EF520D4E82FADAC6C3829A77B21282347CDE770EF4CDB
A6BB2FBF3648C5F5A0B3BE75E98F6E719AE4A222E708C468F8B757E3E4224BF1
5C2546FC3CD2F4C08EE304C75F8C275BA31E999ECE027C3F34F3A7994822DC58
7BAD51CF47D76895919973DF3F8DA82E7835A49860EAFCC0E659A9082991DC31
DF0B088BE04EDAD1872737624823085304CA2A9E9480BE92186290FC29C3C7B4
C27598C98A3DF3EB0CD389A52BEE29FC22398BB244AA98E0534CD3FD1A44C8A7
4DD5CF9B41D608FA42669681F72A3C3B7CEDF181D84B0776AAA08091644905B7
43C26A74C90C77B605EBAABF79818A68219E858B6E4B63F8E9BA65BF43438EF9
F52AF893BBDA215450E6174C5C555DAD5EEEB9110AE468D1CC587A732FFAE035
6382226C92B9537DF8C4F37383902B4E1665B01234AC83DF6D4E53F991531228
15AEF3FF77045FCD774A4F81A5577BD4B255CD6114AA6A305C8C2635D44EED34
55C90F1D36E21D52A210FECA5F50626F2156ABEC6BC7453597A1F20DDDC346E1
C4E776557BADF9158C88A253D74774970B11342D30A798FFA9B26E48E4728D19
5114A9B35634AC999453690C2945D12A5044CB0AE12FB168192AEE4AF696EDE5
4CDD8A7B08A1A0E70E5CE0FB43E820AACF407DB268F2760F36F91A050899D71B
F8873C2203C7003FE088725F37CD5EE2122D79E9E395F5CAB8B4637839E43022
2CC6CC2E73A8B7B88E1A128C703B117F616F6E9F716F0319307A660C06E76820
33B4376512D85F65AD30E430DCA35434BF21A4362A89E46F7DC96AAD0FDCD2B6
0FF9E8E2D038E6DDD5BEE6EA025BC7ED8AB2AD965E8A5A3ECEEB801B73F312A8
24384B68C1E63595042444FA75A02D07082A94D3B28BE10AE301CC183BA579E4
45175C7443E08C57B73429BB93964F504924FE9C00A60C733E43A02B47AFE712
90BB2D5AB03FCAF6FC56C26256B9B2FE8226C32B7662157E6D94CC34A4E8E3C9
2492497C65597085592B8B31A138323C4E3200FFFC58752B3FE0BF95441544BF
0944CFC4A423BCE1E467226AE0B39365CF469876B2D5045B1D100AB5BC1535A3
7E6033EB313E70DBA5FAE90AAC299B0A3174D32B6A82C3B240CC99E5E90538D2
664856D62E28396E84AD58C190F60FB936D01BE8AAD0DE0462CA73D02FBE71F2
7FF5C392E2B9166DEA6D6D320CC01FB1A40155887E252E8CA463348449063293
9E8288398C8F511B6D315271D10F2A087B94C529F5140D0B983413B5B2E3B1FA
05FAB8D5443843F1A6D6B1770EEB97A9EC1CDB6E0A5C046219CE2C7AFADDA494
1AFDD9F34D5E092354199A5574614FBC4584863FB63D37CD7C376462235F0B3C
CD4A35302FACC60CAF01777F4C3D073FFF4BBC2BDAF699BD320493CED607D5AC
16F335E35F2943A4925A7BE7ADF4FDB0E89F6924852C4285E0DE285E63C5A868
A6F39E6F9BE5567DFF012ADCB39583CD69A188FF8C5854200F256DD8FDE34C12
2592353543881A79445E2EFD74B0EFEE088266F9E9B8C9CEAFC0DE3FBE9E9BDD
4AD21669C8CB5A418CC7E8761C4EC57D628531D07DBDD17CEC6FFEE3F41252D6
E5F455419EB964D2FFE47EB91772F1254B39B0F4D79951A3D798EE3BD83019CD
38795B996BAD800210043D13AD0EFF0C2717CFF28DB99FA0878B916E25C685AD
98E4C1338EF89B2A464511E3A8EF24B846229B5F8AEDEF7FEC09FA20CEA73FE0
8D1867A3578589A939A0B9E63F74BBA9A961D5669B00D76A28F8E732D208E548
44EC9B612458EFC5CF443D55A389058F3E4A6F5A3313AC34A06DAE5E8BBB9C39
8DBB9E22D50FAE58151D8AFB0CF8CCF782D8C0B9A56FD3A7F768D29951166E78
42CC737495F33CA41077848FC0CBAA6606E892B2E41A173AA590B6C92E254E2B
37C053334806B316A54FF378DA0558E3F66391B521345B79EF4311A81B01E988
2822BC80A55EFFA1764CF132253C51B9E6E27E63511004A58EFD38E701D36EBA
399743D35021FDF6A848FF71AC4935E79D35E678D11BB966EB78912997CA0BEF
68A45EEFA77B2495A4AB6A1533FDC1183EDE146E7F5458F9CEAFE7D68C9C6F21
1E12E7E2BA1260BF0B76C97C2CAAFEA83534DBEA582F8B4013813A6223F1AA89
1938D83A61AD78BA441521A37B88196B0E2E20CEDB0A5814FB7CEDA8D8D0A4A2
4E265B0BA38E361B674DDDCD3DAF76BE82F6B5A92BD8134DB0FCA137BAEA5C23
8EAEE85201FDD8C26DBC06E81FC91EB29C8F5FC896D83B1CDCF2D41916880278
44C1861D70AABBDFA5331C248654D501E03EE260D83D6EBDBE9748BA7C5EFA48
85FC8B1AC2269066FD7220DF1315C0679C0906D77AB2144E85459AC9495A1E6C
C7D1FFDCC03CEC1A32490186FE8FA8A4086C627A97A3CE8303F134CE75D9932F
4F0CB664AC7A873B438AC76DBDA0317F621FBC86D3EEB72CBECDCE326F00A8CF
AA812D85AF83BDA04D575146065EBC1063DB3004BFD2A952B3D5635D117AC345
F8B3ACB722B2B2B5DBA52E09E257BE924C7F873BBA6A823725EBE8D8020D71C1
703D045952654926785042123F5784840515D3DBC1EA4DA15063F6D8912A1625
9356E0AEB7E469D23823FAC50DF9CDC5570CCF531E24AF0607C1BAA96F9F26DF
1E0FC2293061F7BE88DC5BE53189B71B63DA1AE3F42BE5800BD2EFE48AE1F2F9
593FC0D19F61FD5253F77DEADD54F659F819EC49933C8126697D8DFED7AFCD68
F1A760FC0ABF79F43A7CD6A5FA32BCC10D14429AB8FA9A5FA667E8CF221B9955
27DC000AAB577963DFBC17E9D7D71F4C8DC929C750FBF2545C75AC189ABAC4D5
8ADAC732C9A49FC0DC2EE33F6F8D4FB972214EEBBF020648C548C9196AB3F17C
C7A87BF1B8EB9A07AD38EE8787EFC7FAF8A4515883FEB8FCCD5D2991637AE834
D7135E30F50BBC1F36E6AC08E1506441E6C9DF4AEC18C1FF64998B2DB6A3E8E5
FFC09D8AFD9C981BCD54FB14E5CEAD55B5631F8C862061E619D5CC11725D0817
3CEDE77EEDCF510135A48DD45175D4D9A88D0F77DF304182E71AB323F71DCB1F
600B725CEBBD84769C293CDF66EA907B971C97D585A04ABBC0395A01E9DCCCCB
4157525DE302871FE299302CC2267726DF84B61867C1A3326A172CE4951163B5
0569AC18F62FFA2C630413881949CEA05F8313D48FE636E59132CC00B841564D
CB2F34E6FD596558D51C9E49F095A5F09C65CA94A9F071B1F014A68E614B625D
CF6B63CF4070B8FC5E49564A689480CF9CDDCDC376DF6A706F54BC0C4F88DDE9
AE21AFE518F60A77DCF3A71464A4FDA8F91DD1A49742B97C1A0F8DA57AB945DA
D3A9DC075445138B7983738209EB1EFB8B0C36B3B3455FF256BCF99CC5231391
09882EF6B46C3DEEFD3D2C6D53029E02A1B858E6221E297527FF4D1022D72887
AC800E27B7D543CA810B8D051A5DC8C1A01F3719F962BB597234B22D587D71F9
B789243CE240CF8CC9332DE439DB199E34CD16981C7430956CB434C2B2F25B4D
B3DD55D05668578E76736FB859EA249C21006E9E72B038A82F59FDD05F0D2D13
1A77DF3A3AA4FD05935C751EDFBB3E8B7291485DE95A8199D0EEB9742EB075D4
537CE98B120B5F85498AF51BD0C175850AB645FFFDD407375BEA0CD19804608C
C65AF09617E55708CDF2773A2424555C771EDDB9B003555F9752148F1A64CDD9
1A97186312262A3C6ED8D7A07C067E117A095973AB7D47083C93E891FAF519FA
993B53718C98D58C9B83C1E4AD3D84AC5249F85FF40A94018F1B9C56504EA102
5C75A74AC48E341259FC5E9BE69B31B76EB33786D41A619309A7F87B1F8057B8
1C6D9006AD09C439797D92E1DAE5765FC95A4026E9F9346EA1C8215739C46EBB
30D6D9EFB3604DFF7E27E6069FB4DC6AB7DEABAEBB7144AA9BB783F38B31A5A1
4EFA4230F0C0DDA5D1D9F4AEE1E3DB7C02F31189B2323AB7173D3793BBE29793
BE4C4C0F72FA9B2C56E5215AAE40F70A043FA0A1F1E2AE9C91171F55CB963A7A
123C953D76CD7D2BA92EEF2B97A011A754C33E3B41C64CFB706AD582DC1F4675
8CCCB5710D261A44E6471F7D0A03097505E5799D9FDECBFBC1E35BA9C1BBCED5
7132EE274D8CCEFCE2B43C735B9FA81014D136FB96E4436936277948E5D1B1CA
952445014186734C0044581465464EB40302CA5F681765B54067A2E8F6155D2E
574EFC3A90BBF54D37799DA9B97E5A15A320D8BCDBF241E7C4216D4AF6F60F9D
92E4B6FBD0AC2B7F2A22F14AC980D7957690D4474C74EE0ABA92D11B887BDDBB
82D961CE4EFDBC6940B03FFC69B3667CB385C244BB78B7F45D208DB1A17E80B7
9D9C2646759DFC1F0AEA2C88495D3014ED1CC15952724691C06116E22E1A6278
646600CBAF52E47B13D121430D11E87AA642D534719D416CE4384ACAD983B435
6C4E2C8E6ED1E2D6B550377F0CF94C53FB6993CF1509632188695EFF28CBF3E5
5CCD8A0B5266C607352614C0B6C53143CF39FF7507B485CBBBE41FD692FBC234
50BF0491169711D3BA7C52C08E7B4C85E0A7142395B70C2CBC61EA4984BFAFAB
CD69D83CB4CF5FC1C5681F5C0C46D62B2F0FE00CD8915CD755A1760E24C713C2
3F0F6719F323137C6D5F38628733DB0B1C405F5C4D91F311D5230BB98E42C4EC
528A74F858380AE64CAB45BAD33E5264C7804F25E9EC32AF67403FCA050E03B4
3581BB21BA4B20DEE8468EED183D619F3CDDE9BA004AC03CFE3DD02AF8A24E58
8610F35792DC64B934DD9C178B687064217D5462C705434B0A7D69EDB2E2ADF1
F8C6A99CA5F57919006CC52D9E451D422EE9CB8A4A30F16AC4AC410B22C3CDF7
AA2F72CFF07ACBD653F68DFB8E7909E7CFCE72D5892F2E87EFC7E1EB0862CFEE
FF4BC44BE30A228D93BF178FA8CF3A095B66493FAB95B3667B6161896F9AEBEB
B6BFC5B52D08D7EA384BEDF71A0EFEBCF52F91656839F0040AEC194210AF9048
96F3ABDC069EF7BF3D4AE9842A81FC7DC3C9377E8541489541976FF5A8A85F9E
F6C96C1307464B56036A7143FC7258C39E13BFB45C117A3C3ECDDD3470C49542
0806505EA8E8446A880E4E1263408B0DE3C9364C6FD78F49838749BD66A3B6DF
D76BDE579A02AF74678F6F3BE8A64AA094FE3697A275D68B3A674D43404E33F9
95945188405AE9E0E941252579831567FDD5B3BA693BB95C2E55A016EA9291D9
3253757C38CCBE4B84B94CEA77FC488E0908556D21F5AA813B81FFF08BD037A5
C2F43BB36F021C5282E0A1CF93AD9EE5E71EBBD223432ADF6C0B8DC625164B44
742676C8A12E7009F4DAF99653E80422F5B5B56F6D2EDDC1A7C76EF77C6E7C9F
6D3D1E591AB226407E6C99CFB6F3DFC7D308B5A92EC6C869400F05E445FE8DA6
47EAFED062C59ED0AEC6113AA4E475B8D83F6BAC2D60811DE69271977AFCDD09
A5323B8C050C2A38EEA022F492ACD8D6C6254ED278A979454654E3AB7A02A325
50E356E526DFF66FBAA70B4C22BE50AA44C469EADEE3FE6E519F3DF7A42DCA81
88C58BB4C207F5E12E9A87FF6ED8E4AE72E7FB4BF0203DCD9CD9F28A240D66F0
04ADF047B725FE84DF64B119D79FB0C902A7D952D8E05761D415F84CCA4DAB06
CBFE57FA652B69C155134C94C95F7E8C58229BC6B2FF3B5DCF068911EFD0CFB2
EBFF0D4E3EC508D6DDC7BF0C5793831F812E2102A226643E1D0F81D86C38ED4A
68ED49F33BD462865A8315C984AB6F141500FCBDD935769AE28F981114E8628E
32A2A40FFF3951D12C10153203F39E4E3AEBCDBE1D25C9DB2FDCA3BDDF2E61F1
E2128030415C524EEE8F4603D907BC35202AEE7874CE4AE2DF3A8762EE540D91
F8638931E3F3A14D0AF97B7A5477DE2AAB898FE681EB839195773A0B7145C8AB
17FF2BC394118DA9CA22EEC77D4705C70D0AAADBC6D35987D28EE69A091A4F44
99874FFFEC0D9BDFD9AB605E9461A0AF9F21E103CEC232FA36539B3F79A05F7C
A9DADE8CBA4B1AE239A8160B07FBC0E16A08E354B8D49A50AC0C91D93F0FF852
8028EB27AC840FE1852BFA6500D45170BF6D8A76C8CBBBF2E35EEBCBE6E35C0F
40327BEC9567C23A394AE3AD45DCE8C30A1578B959F69E875DE4F7903B6D0A56
26B35C4CCA744DC1F4A7B1CE10875594818C09C1C02C35A4E46381A1B3B7EECC
B7C31B557F941648A1EAB422D349CCE350805AEA7E0C15A5E74D89FA797068AB
8EE9933C40FF8A600F088414D899AD341C6658AAE08A5BF68CA3392C0BEE6A9E
5A19DC5C6CDBF3CD63D33AA3D208C0429066EE18BAD8350D3BBFA5E4C50CEE0A
D0F094840AFE537D1353273271086F7C9417F1CD89DDDBA052F9CAC627390AAE
7FF727C44F8F3210FAF339ED63590915B63BC4394E3DFE411B1C92D123C633E1
6FAF35AF86242E7145335BB9806B9C94614FD8DDB8EE32690561DEDD4DFDA6A0
D627FC46FD207529052C6433838754D0B56915B671BE1006A533D07FD97A315A
8D5B6BB84D2990935F3FACC06328C2645B905C55B25AFF16D2542BAEB9B324F3
3D3367FA26F249173BEE9487BC138368073D671B4CA30EA1BEBD55629B8F68BA
E6177AB0D7C7210B025429D6433BE8B35068104B041AD7722616B477CCFE4F4A
C408876BE2E74E8B47BE08F29D5C260BBD9280E2EDBE1C9692A2B6E296CE4A00
7648C0CE655612567DA35A9E9B07CD569E5C6147F75B3A9B3DE7E230CC48F8B9
0151A1A0FF5186A7AB03ECCC79A923BBBD362B788F5C9DD771E4AF5A7A1EB68C
7AAFD6A174B76EC9B4E80F6AAB41B38C8894AC32E915A73823D4D5AAE0A02273
A47AFF1F5F69DEE4BD2E4A16523198B2E05EC8749D3D46AA1886DAD1C3A949C5
47B8A5CF52D9334892D6D548E3AEE8B3FE7DD1E3D4AF398B968C9DFB8B3383BF
9817F355C5BCCC6FAAF5A11F36EF005402F6DAA9ABE6FAD20E8C5FDBBF534435
F198CEB491BAD552FD0CA912D7A12E6590BC0C262EE1E2B00C53DF9788B45591
972391929A1D45FBA366AF0C1F6AEDF63B9F7F23FC291EFDF0F33BDAFB3375EC
7F7666DC78AB35AB252E997A735E96485E6D35BC22D36EA55892105E54929F64
A3C8A01C8DAA5F5DCA23F696DDF95057F1A668F7137A0C348F450B13EF02D74C
328AB7B54F4D085798E459B5F96B09DA6000AEA0E6DF57EB38F69A904DCDEE56
EA78FE086797F74F876028A5A2F1FDBA6E4F0859AFD74E72167A3D3BD86F381E
D2C48555B5B29D0BD07297653D341BDAA6303FAFF112EC24F00173B0AB42D9AB
73076F3093E4DC65E7E87C807ED82A533CECDE6F535AE2F8082F5169B08B1937
6CE9DD896957A06D6A9242AAA931403586C3FD9DDFB328F350752DBC568B4DD7
BD55A251B7480D0458C2B748B4D75D892B7A4C654E84F581EAF2E78BED02DB10
47B51F26FFBAD918C10AC38C49B925A272431A026B46E0F0C7849BE2D0031727
9B317908744C60D13990F0A0C53A069E20EA948422C7074660AFB5C3331057D1
91CDEBAC6A13D24C052444D71C1C6EF00A8A55B6CB2F2E58E760A0B62AAFD71F
B887FD918D3B0ACAB4DD394F6FA4728AF2CEED07C088091458410928E48795C9
15119CE0E39BB063A88EAB691CFD6BA21500911836158B1455DC4E3E2050CF50
990BA44A60943531DD69B4A14D970E5B7D0EBD8C4A079E52F2B345DA5A127A08
36040C7C98CF0C0887861682345FA775CA4E19A46F1A7B1D5F755616A6949315
79849A9823D3D4E77A0521A4103AE83E56665A850C35B267F877A6C3E81F3C0D
BAE2AE02B2870FD8B52925EBDD62DFB97582B42B24D1424C444B9D6F5F6B620F
0B404E890FE77271791B092D4F20BE1AA0854418D556B128B7FB0CC33F27DDEA
31FCC21D44B0F4A49A20574E8D0865D6AFAF2E7CD81AEF38DB8C5FF57FADE49A
8ACA8D973C4B10E5707E46B6F0D573A2ED648B8448FB4889C78E050139CD64FF
FCE786521B8FF2E3C3D87546C00B66948984F6F4B45B3B4129CF356B7953B31B
F5BE2A7CE374D05DE334629C51ED5287F45265FDEFD4A316D6FF04D72F773BA7
3EAB76C27B6011596CE0A4BF9AEFFB92E0F0C577C5C1627356674C8F3E6867D4
451AD62ECC2A923D34AEEBEA02965B3E15AA720AC4FEB24C8861C95344B0D16B
D9E9C2097DFFDCECB1AF41D701877FEB5C3E533F18F5E25E104FDEDDCDBA13AA
969C40FD797CD026EC07C07C8D2AAAF8C726595D0D6320B23F16C0588A59A7F2
F1087CEC5D5E27CD14F3C92CAD99FEE1A786CE64B1456CC939D5101196B0C9FA
E3391068978E81523B397FE510DC9CE8897C45F50AA578DCC477794A54A429CF
DD92AE434C8057292F69DB4183CFC04E2B40815672A96EA312F1F9D8A249E8B9
A6D53F183B8F7C009024E349001AA4C5F67819C32A176469B3AAE79D167F1C47
E5D5A5F0CBF9578B16A4E2D3808C64F2775257A3A197545D1041B0EE4D1E1AFB
6B6FA6EFF9D626D24C4FCC92C696083B084687B76E2D4E16BF4AE8EF34E0F431
566CB2C79F4C5FEEB643A1686F3454A37FAC420C7945AE6274E0154AFEFCD6DA
55C642AF2B908F68988DEB01154525597CFBC9D6174F74DA77A8B12A05851331
961EBCA2C61400E34CB2B48DB39EADBDE7F3CFE60CA0E1DD0C42FBAD99BCD7FD
461F25863AAD1C56D4EA9E4728E8FE7992DDD46408D6A4A2AF0C0E321422053B
EB9C8D0FD7F33254F5CB35CFAC362E1D6C8BAEA8A9EB413411A7976AE7C554F2
677F1F81425432805A253C655CD08D32B7E4A45B51B18DD1620007058DDFAA9B
FE995D7262159F0A75095F433080A962B69CFA02687E2F003DE4F2F2ECF95A4B
8A6BCD7A6E8FC52572660C01179BD432AC00D22C2711064287306A76A6985113
3FAED287CCDA25580FC670DB2C352130B1ABC1C769A2B9169AD9A634B9DC0961
D590079CE3DA3AF6EE3BF5500AB6A36874F4F00DE3162D3A94CDB4830F68297C
A6DEFD695CE8C0FDDAED59FBE4433033026159FEBB0D468839BAABD4633A8CE4
96EACE3E51B0F5C7C20EAD1B15CDE93CA7FBE38B94B84C961F5ABBE6D982986E
573211CD0CC6B241337D6C34F1BEE465AC8FDF8DF56A850A45ABD3D68FDAF7F8
756B84668463680AA78A41E4BDFF17CFDD2E70DC54A2A26B1D78582A33F53248
1524ACE2C390E62B258E26E398918A03B37FA4B666C54EDCA21BFFFB56053A3C
2559073D8ACD6618AFCE83EC5E1F7EDE8369F5006F9417D29C7500A39A52367A
7BBCCB0FC874E9402F11D0B203FB25DAEE7C4A36F4D792428DE7081FF6F65DB3
9EB344CE73B8F0DADF02384A238C82A33BC75D38BD949F170D8F39F0160F0EFA
2524991EFAF10A3D25F1111C442A7CF71E1F1BE0E4F7F8D6287C0468E32DFA17
2AB152D782CAF70FB3E6E1B41A88C9D6CC45695092EACCD0A67EB98169406823
00F3E0CFECDD2597E92CC9129276EA210906DC60E3FD7EFB796F4FDCE4BA3885
8B5B4C3A12643BD8CB95621C527C1B121B2B8C450A3845A54352C9EE6BA5CB74
8F5423ADD67C16B1526108A4AE133087A619DC4D87EAF9A8B5216B3F70EAE755
3DE8B0B2053E697EC9E87AC2AE3E6AFE642E853B270870E644F313D2F697474C
BE564E7A063FAB36700139BD2029D015CD178E77233FDA56A688F46FAD169705
9C16BEC49C741CA518BD0315DF446C732E191494022748960EB048B5FBD3739D
2598DB81C6875472BB1415612C4E28BAE9CDA12AE984E7D25EB21D1076DD2A64
371C8F6B4CBEDC911A8ED4E363FD42BF06811B92E9BE545E389C22106B16DC04
BAE7423C39B388792C1FE4C27B551A9054BF047F382C6DE12EC3ADF9C9B7BE3D
281982934A8E97881D017BD2ED1646AC7FC3D4DD2BBFFDFDF185280668307405
DB318FAAD2ECF7540F6159638A084968C5B470545324EB6DED46658DEFE2CE9C
1851B14EAAE6541A3DB6A62108F632D3CF83F981822020840EA62E33B71F7E80
F4AC6E6A1F22DBECE190187A6854C768BC17F6BD280E67A99702382701CD9109
F39500D1E9868356A3F99E43BF6A333282B1CA96E02868E5F0F06B91B0249536
504B42DA495BB8325F93B35CEEE0102BC75C290A13009CBEAB2053E8DD69A2EC
5AB96BFB2B9ABA68B9495E15ED996F3AFAFA8B8FD7307F01FCC7B68477A595DA
C953D2D9A84688526A8006AA62B703493F8546386B61903D79FBB711F5257298
16EC3781395E4C443B8217F1F0DB37E3F94A65960C12408AD290A34B2C9C3C3F
A6513DE8B9F6410766D2E466B4E18359D76ADFD91EAE74EE09527348E31E7F02
D3FDDFC1A4723187F24EE9514ADDAB577E83177A68D2C604CB00112058E3EE25
A93A017BAC1C9418F8D191DE68266D76C5D89CA95CFEBCD22195C0E96CA38FB0
BFF562DDB428624BD0051E018DAD39762CF777175DC3391C12F6FAD1A175A47E
3B72F6A80FE96C65C704C44F66FB84BFBCF8A569CFE3C217D3FA961058108545
9FE250BBCDD1EF04ACE3F0AAC4399F5FFD172E2399E69F256E24329C62E9CFE2
0F074C3BCE04556B6A6FCA0E7CB620C78C58482D8D674E4FE88228ED00A0D306
EEAFE6CEB3BB8DFED31E763810B0F7F3C47148848FEF9F5D3A4F7790696AF321
6A01DFA6942C10E2CD882F0C474A580EB9E339542562571895086B6C4F3E1505
43DA6A1BC9E9BE3ADDA5DFC0B87F169028F71BFD25F6FBAA0B3B58BF4870481D
8FA433728039209E7FDD13ADBB921BE4160028CC6F434D3202BA66A2DBF7B27F
7E4E36825DBF87AEDA7FD111366C2AB8AB684FBE46841D2C95681B53CDDE35F6
2AF174E5F0AE215C4786A6034A75781A417D1ABFAFDBCE6D82909308868150CB
11C36465126925950D038C92250E89B27080F24E9F24006E938D17D122B0029F
173D766CDD1223B071ABC83477E84B2E685285EBE6A62D5AF6B69ABD9C7F5155
15C48046DE2B209C3CBD39EDC7280BD9F1655AFB6576F794D6D04687B8DA9168
C18DFA4FCD0D4EA41D60F609DAE03DF457371FA5A6FCCC16DF74D18A8CA65BCB
F1F73FCC94DB078895023DA86178E8301ACC92C156E6887E0A00795C3711FB44
D8D5989902475E6CE9C732DBABEAB5AF0B6CE33A2B969D4557D21081EEEDCA2C
1D5C657039EC1F69D3367BD6DFA41FFBC5DE2429EC09045490CE7B51042B6BD3
0A9A45D5E163740CF9932B28F30541F867B7DE4F45F508B38D45FD1775EB7F04
BF963A9DCDD89569F85300C027C4AD53853EE68F54A69BA78FA2C491398F6455
3369BB6333971452AB6A800EDB700E0FCA81002C71A541874B4B3188BB0B23F8
447979A2A7454687F03FB3F15467FCB0412E7F079B8AA788528CE98C9F14DDC5
4AC1E415379EDF7E0455D91178E5CEC8CA5BF29A80B4D78854124B117B2F35A1
E2F724B9928D3272F03F3E1E3F3A59BC1388ACF5FAEBC724250CE2D75BFFA609
4616F41B02982895820AB47D0BEB5D5BBE6577DA7F983DA2E68B180CB1D3458F
56F419ACD8CFCAD7ACCE883E71C1BFA5A90471B7D471C3BDB86F519E59A0C711
9620976442CB14BD2C5658C938BC685FADEC8C6514A72AA3586C074387052799
46B3ADAA44E8AA7D7C5CFDF2877334925DE2302E8F26BAFA9C8B162D982EF590
2192B0302BE325FC10B174AF933326AB37C3228736924B8469E7F61E8DE2BCC4
137F46B5F5665D8B788EAA016BD38C5C8F24ACF262A322BE483087E5108C7FC3
935B48DCF6AD3C9F3329C2B1A1D1349F12CC5E0B6F7027E93A416298CB7AAD84
02B3785C25646D74F35462480DC34A8190661002CF1CE0AFA0131545409F7248
0234079AB4174238A5B28DAC9E3179233B6F49A086DD95533EC5FB3EB2C4AB82
FE39E2EB21849BEE97D5128EF19B581C0FA82BA31CD0A30C00A5C2D8ED153DBD
ECE93275A3DFC034ED6E7DB302E9AC30AE90D2AE24504F2E921D2557F32ABFF9
6C06B67A6135F138C1EBD88CC9D17543DA815732901A80A18BB3DF60DF1D9C1F
0526611190E892D8AE698909E34F824317E8766999D17EAC8B28132D2BCC072C
9DBE70F640BEB821AD49E34383E63C474FB5CE9D674E8807F6E0781FF8233AA1
0DF72E6E09BCB6C2DF9C78F5ED7AF2A913FB2CE66241C5102CAEC3992BEEF19A
4CD8511017E77DE30E4887C0E7B8F2A0D884F8C09A5B108F76C329FAE1045C5C
6E47DE0F7213002E5CEDD40C1E25115BAF0D61C808A2ED8A2EE4FC201C41B692
BDBD53C83A2B82BBF1D51ADEDCE9D9B5299035A87E17B3BD31621A5D90094EB7
9BF159254A94570CC1D784EB10AF0D0F9A643E735E6C798B133BC2CBC99AC099
C24A94558659C278A9FE1825AF71A9495A0E4859391F21E8F54DA13F92862769
9FF4BF3141E88B83E331DF55FA18A22F967BCB97046EA347824A7728EF410884
DA6254810C0ADDBD80D78B64E78819CC4FEBEAA92370E177C8B7C24B02BE2C38
010560A3FA40B336DE45DCD30FE48EBE9CBE849A02868BC24DD755FFE818E62C
E922C9DA7D41FBB12CFF132C7CF956F627EC8A046F005E134F9B660EFF434CCD
DC96CC25E9F54CDC9E19D966D3879EE0591709662A1B521B539878818276E4A5
A521926C57D012715E3B92493BB601205A40E58A483766B92AA294147AD18E43
156C122CCE24C4A474BA19F3AFC98B5F7AA8413E3A653F17CE3D33638C065EF0
56061AFDAAA68AF61B53AFA57A14B7F2D4815E0733979B9FE7F2E3584CFC53F5
5B75BDE37DFBFBE5DB1BFCC5AD4B2EDB47DCC0CEA9D037D8F55FF50A280E12BC
7EC61DBB610F25C75052FE6AC212A20E02B86BE559E9AB16B32D0DF749DA2F08
424BAD2A76790BBB18E9A73A3AC40F568487AF483E70CB6437C18A6FE63341D0
99B30191D50286634EF7641B74BF8864CC28D7AAD8EA3FBBBB407E0ACC52AF81
383A5CF1546572770BBA3CB09E41AB8CD211371DEF2600222C8523E06A7BB590
04A76CA1994337967E03D87A1F3B3C3747C97CAD44686AFE62D85493F4C6DEF7
538EACD4A65A2DC31CBAB86F123D5941F9D6BE9D453D33995F4E54B91C0A2230
74BC7E475C56DABAD1CC9012814F6B1DE64ABEFA3F21B774EF714BE35CAD0FA3
43A595982F0C04E869841C42B4988F48BEE08EDEC618A6BD6E4674A9AB8FDF6B
17216756AC75CB0A6B8FD43C58490E5807F16818A84F987724653A6EBA1F30D2
27A123811D47A6AC7A6733F2749C5ABEBF4605EAF9BC3D8611E3607832D0EE1F
01B563FB3A21150ECB02E34FB17C301764186393ADE12F01985BCF3D9493ADCC
B3711D7D6290DD4760DDBFFDD77551B8EFD72B485F950B8B4C0F5E25DA3D226F
E6D5AF5BADE8DEFA9BA347858D3BB8EB28A7C6F669AAB46E2DE610C064F95504
C55B0B33BA921D3E00537470453C9BCCBF37D44713F3C1D3A2C9472B2EA38F17
3D2F89B9D874CF10A9960CA9559D44949A9023452DF54E541C1C596EB9150A40
2C5C350AC7EEAB82D64F9A5EB6A1B9FD59A20559123B2FA6D205481C5ED463B7
C86D689FB4C888689C8934EDCA599ACC5C1EA7B60FB79F8113D83F90E1821531
1431841DE8187A20D6664348C7A8ADBB0C702A1DE9564A9D3E07106E7C3EBF11
6741C894BF3F45195DF13F95F72715128053E9B14A055D9F688B1F4E5FB27A97
5BE804C5563DFC3C67C8166A935E2DFDC56F2803DFB32DB77E1DA2E2F92EB189
0FE6BB060A0F1F92E62202A63AC37031CAEE62F37E54EB76D9D9A73EF32A4973
C38FBA8107608BAFC9DB86B570FDE7E6248B6ED8252D014D43A353D719B14B24
7A87898A960DF68C0C08073A471B9BFFF791C452F098F3E8AD8814BCBF2ED9C4
871EACD19EB566F647A9138A2AAC3F60F99EE1E646A4FB16C5BB5DB4DE1CA906
4368A00D89E04C07B80303E1B51F423E6C5D3289B152CE19FDB55A11282FEEFF
F3E2651AC38093EF9DD5062FA35EDA346E927271617DCA696ED4C48F6D444048
8AE7C9B57B85DE61CE78FD29960A8F24A205BF77E16D1B0387843CD39A2AF0EC
9B5167730249BD82A1F2E2B2402299EFAB09130861D974DC68D33CD789F9D80B
15A0764CB951D16524B621E0A4FA9D650A39855AD072CC4C3ED8EABFF2A3F46A
104D060BC19EB24BB2F33508AAE4FB8BADD1EB4CE7AE86F0DA8A699138DA2B2B
1D2F8BF541CC8CDB1257E84AE167293ABBAE194FA860BF629EABFCEFAB8D28B5
C7E30455E8F5A76C4D6EAB6157DFFF0128C29E7F9F57223BC3651A3B3D100EC7
F458B977A9F37112DCFE34DC397E88115812329ABCADAF9CEB29E09A792E3319
4C446790316A92630923CD601E96E7A12D427E9962AC0772EFCA4B36A799B767
6DBF02B7F7B23D8A22E7E602AB5CA33B5E7B1A6A403CC958FB840024382EF8F0
841ABA48C0E9F98963FC566AE808AE20CAAE74590B3DD20DAE5AC62236FF9E48
27B97B32E0781FC15DD3C3D5F4C52C8C3F5E66A31AAAAFCAE6A03034E2281BEC
8D06F7B7A2D8B19596012837CA40EDBAAA2ACD2B44574480A071C4A72B89E3A4
939C152ACE83E912CB7AD280F09997BA04862487F80F4DEE34DCE95E75ABA3A8
5139790DAC9FDC8FC2282BC39C571BD45057FD09085730695ADEFF8924FA5E5B
134119F76D5908B953099D0A17ABB13A9B547114AD96297DAE0F90750C0F2D3B
286B540CD85D2F9ADC3A13C5028D0F35B01F081084D92EA30AC2431DEECAF65D
98FF6390D4F9D3AB952D812DC7EF545B8A2B4822B3F5859DA64EABA78F8C8545
9E49995EC05E1C5D85FE343E87ABC3D34172433CC652E9B2516AD0EEC9F45210
3A652EC54FCF9A8273B7989D201B161E870432822FD89CAECB9F06D2110DDA89
A3CAE0A3082B99772D58532A624E52405A6C2908EBEBE3E29F7C6A759857EEF7
2F2ECD6818A54E4358F2FC35AD5E36E6A1E22554AF326DD82A5E6E8298B2DAA8
B794E35F00BC8B61D90C52DA56A24817D54BA0959261F9098B70D161B2E281A5
39F8903B28DCB003E817265F192A9EC17289B7061E41E35F1C0AB793CA0B94FF
F36761C12C014AE3D87EE4EEB24124BC3B07EF7B24C163E19DF472705785EB67
1AD64DB34BB334B788BB2F98BDC3B721DB34D4C6186E5CB2E597FE23F43E704A
09B82101C19895ADCD1C601B67DF28586EA2DA417E15947BB237807480A3D701
136A3E03E1344994FC37A4ED5DF369FE8D85694A53197F0DC39F6EF6C57BA87A
22D823DE5338F6AA08ED9BEF61978D1C0BC4C152D25B99E116F18A259149C89A
05CD2D29851F5B0035A54613431B7D81D89117D3BF26AA5738946212D73692C8
62A5FDB85024E968FF6FBA8AED58221571106D486DC31457BD80F5D49FF2EB0B
160051BFED77D4396E6A7AFC1458F0B4D9C9E3DF6D0AB7F4434C76BF20141554
87DC65939F04DF25603E4E215532F9DEEA873AC7B461E0FB63D7C1CE62B8FF34
647199271B8B48B57E30DCC022B26EEAED59B188DCF08F2838AFA23591CE58DC
DE5998E5D85161661C364F0DB541295742EC9B0DF425F90DF8FD6B5003D9C6C8
787A337728D539032C318363FF20B5A0762A4A9A546A212DB60D5247E19D4975
CE752F2D3CF766AF8F6748D64821EB2DEAD3A46C1746D8B7A5F0E76AF213582E
46962647F86CEE03574A8D6A5ECA2C6701C4D3E399F9F629E1C12F0B48E797E0
AACDAD46C965637B09510DEBC15F22EFE2EE81AFF687EDBA8ECA0D388F9F5C6E
7C9E45C37806C4FF15DF8F0F44E9337555BE1084A73AD096F76197949EAB8569
BDA41956B3610FD0E20298066B78B7FA1390C1846260B2099F874D62E89956C5
822207EAEB4DC179926E74846306E52E323F8CF77EE1A8BC8C46263CC6367EAC
3EEBE036BF4F990FEBA612A6169F216684A46FE1C6908EB8BDA39CE040E9C0AB
27C39DB3105919AF87B3558F7C334A41156A07081969D92E201614B5B31D15D4
88D1E15CCB1D1FB473A442EA659C24098088BE2108FBA0364F6742FDE7686A1E
7DF861799206DFA02DD606487F534D463E8619B06B8A53849A9126CF6EA8EF7B
2A24D0DDFAF3D5C24550C76F422D7EE563B89F7D94FF33EA32816DD848DD4455
5685A869D77B3A3D159799FA4F45953E30A894F1EBAEAC18CBF2C5316A407705
2E2AFDDE4CB26FA6E8EFF71B7BBAD673687E4E217D45EDCE99C5BDA2E7096A80
72633FB0FE3DD5B084482B72480A0DA3A4E438114795914139A789FA7A41AD4D
CF22C9E6E120FE3E66976936B582FC7D5D2287E03E1AF221E501B56952BDDC1F
48C54C5987757B315E479FC07F080CAC793D855FE3E8B7F6C17DF84729DC1615
2B14DBCB4CDBC521AA9C3E7408DE7F5961BA60FDE2C7A415EE4B1677DC327BAB
9DC24F0F0E500EFBFB186B9D6DAA857C8E16AE1FB388E0E9115746B82D70C2F6
D5B59302778C6FA6D974FE78DD12A0DD8E99F0B3BA92AB05C45211018DA257DC
2063A50D56DE1DCB08343F72F7B196EF3D881B4EB02024ACEF56F125A70D6D9C
98BF63E7BF3F8D59898CB620F7D58383CE4FE0AD01287C6E56A1A20CB8F3D892
C5075B4C86FF6AFB30201AA21B65F84D058E0077E5519B7C209007D9B83AF541
592200C5F08717469530166F246E2E2FC12E9EE4E00B01FAD7705D8D7F265C87
13B380AAEAB509DA1026ABD484705ECB44139C4A05055899D6AB60CD09FF14B8
3B19836278B21FA999010BA689A8693CBABE8865E8D3B764BEC1209A4186E07A
E5B5B06B81F5859C3CF736ED1F2DEC4CA1856F591A0C69F3518846B3B9FBABA9
27FC1917FBA21CCB75D52E030A0A646F28A485E0F888353DD4C0723A38C72676
FB8675DED5FDD58989DB98C51AC781A47A86AF77C8CA75F6FA7F164525264475
48C0EA4C0DC51E34C01F184C6AD3F84B9EB77D10BBA5C5BC3DF07EA6209D78AC
D3CFB98A0760ABF1A7310BBE4541E0A48203EBC33CACA7D3FA128DBF58EB6CFD
1AD7E45AF49CD6E39D238CBF335E88C9A1B9AE89AB8920A9D4088E844E20C3EE
8EC9DAB5864BFF9D01BDEFC2864B9D50927D7E55D84B69D02352EC36087F396D
2C00518ABADDEAD754AF70BE133F48C8B89F8E783B80A69CAB634926107EBC1F
408930DA17F448CF1E07559049F52248A684835A95C2048F1EE35E4A97080AE3
2BC9BCE8614E2BBBE41D9FA5DF575DC68B39946CF7FB6537A0A83115E8AED878
E6E96E6CAE5898CE30CD7D3A61DF2BDD42CB1C6069D3951D8F9ECEF972730F0E
C5700123118987F729F9E10E63045BE9D1B96233297C5F905227DA1EB2E006F1
FD038018DBFF835C6FE8F6C5BA273973E8710A385A47031D6AB1C300F22FBEA2
8EAD009C12E9A8D9A09C1D757DD1B1589C4E2BDFB16736BBB09EE9610DEEE649
F586570B587838D8BAF82A6DDE262F706073BB9E6866EC5561996C7974124E5C
B51B90BB9AE5465785C2DAC5767494C5E70112067D2497FD789FEB85A9684E1E
AFA395848B5BAAC9B2585939B12A758D19876B38A45A2DE52C5D8F84B958AA1D
95EC9D74F884A9B7A9B0E8F534EB51C1115BA5F93FDD0D11D8338E37AEF5EDD0
07133A5BCE4161C84907B5904813B4E4BA04BCE5C1143B5E150B0BFF5F6D5056
51C2A1612323A2BDF48959848571CE0D42C81F1097A579A2F1571DE043D0E778
3E161C5D29BAE4D82980B5CFD0BF46E58CADFAA0C2AEBFAC9216FBCAB1BE10A1
A1C29402B92034B483988FF13692F22785B324AB099844282972DDABB415D6A5
196BAAF901B15C3BDBE4C6E8F925F925EDFF1B4CA10BEA6F47C5EFADA7E38F97
99D199EB9BCC28B98BA3F8FA3261ABC4F573C724D22E34920A60406A1367DA78
3F1B7596FCCC331F0B88DBE8CE32447FB94B70CC3D15F7C3E969CD4B2B65AED1
E24D3E11252BAD1DAD89A79F96DDA90D0E0B681676DA3CAF4B94082A603EA3CB
48BA8C3276FCB7E1A8A998F222ADED151D66249C5BE46FA8B3B21D0AED83010C
B092F2D5C48FF09EA4CFFC083E36F3DB62C2ABCB26CCACFEBD4B618A7D48071D
654BDA298745460D2AEE15563BADF2CCA50EBBC123C175935DED8D661A18E650
2DF0D43936D6E71407727CEF27E631A9252E52843FF0CB3F54D2EE431A80B89B
B960EA718C8760A9B9B6DD9AE5B2B077C424F7D3FE42E3DCCD9D029E3E50524A
F117DB23A115A6B019AA4A506913B62766D8437BDCA16DE8F52048EE0EC296B9
1DDEEF6193CD33B811A2C6875DC89259D8D748FAC169E2342A0601F9004783DB
B81C72D6D1596F262644B7F43E421987999E8D8E972003403F41C99DDBD41E41
885EA22594BE4A8C014B206F25481C94C0C909853412D7CF99C9679BC907A8A6
EFBF96B9C4C57B577391CAC0C63F08FB67579ABE902B0CA79D0819250BF8CAED
18410D6FCBE7B601232F8B9D7242C3E54FD2FA4FB25AEF5361DAE9B52669E797
D004F871D7777852CFC7C9BA82EA0CBF251574353CCFB283A1026985DF9777B6
27DCC95D4FD057F0A6C6EE5168CF5082D8B3FA64097A0492F1B81C0EC714D0C8
40EB38675C58A9F886D7D6599742F0A0472CC8CA89450C6D9F2586CDC9050A1E
420F8DA4E8741BEE58AAE6A8CF80DCAAC079187080F5753D02A23A799B65F0D0
61EB0B7D8344922CFE918C6AD891D67531678F115BF88DABBB3839CE1CA73BD1
8BEF6391323F2EB03BA17D1C791E6E398A71BC8DCBE48B576252B8412FC550DC
EF7AF7977B8E3E59CCAD26BD76420507B3573AE15ED9C5D274EA74DF32D730CF
097ACF3EBE3F82016B69E7F8B4ECD0DCA450D9297368A646B3C27162315B68FF
064E1272CD2F48A6CC17479B0F49C4BCB30F939CD6D12A33B34AC39E8C5CE52A
2440A6A3AFFDAE6A6DA08CE4ED1A84E7346206772228B7D7B218B1082B4534E2
10B45CC27FC200D55C3F49EF3400891111F20413DC855C83ED5259C09CE87C6E
A0B174A0CBE26083FA63DE5C67E82287A8F17A3A2B65D78732C40F1FE4AAA177
0F25F82AF00B116E76BCB2B3E7F531C3FBED1AF53E2FDD1415934E15F62CE74F
15351307D31EF05ABE77FAD0CD67EE677061BA623872890673A21B8105476187
6978A74E93DEBE153F5A405DF696F7058DD422D1F79EC5A4BBDEDDA114E06810
A76B6FAFF43750166B61420A06019D486DD9513F88CB26E730066103478ABD09
B2B77F204B976EF5D3861E1D79962881C07427A402818198B2C3886ECFD7AEDB
2DD0B28A639F845A776AE694DE19FAB7247CC119B8DAD76F4D71EF0E453DF81B
FA203B74DD3929376F2ED32A804B830A7707E1294B2C319C15B598BA206AE1F9
46BD011487213AD210EDDE9CFEE2427030D577CC1B3181967E2BA4B657477106
AD205DEAC1F4D6E23F5D834809772042D0A6434ACAE6B1DB832D9C2B1ECDAEDA
27A11E9532930B7A929C07F7A9FCD0CC15BDE99106C40BB45093A438B4357D08
6673DCAAF10FC982343B330F7B0CF049970FF77D2049183F081CF481BBB796AC
3D370E5B47A6157318EA140E622A5040F23BFDD8C7EC8221724DFF5C2A10F01F
9A0CFEC7553C60D442DE4D8ACD10C89CF5AA8E4E83AE0F7934D38493BDDE07C7
EB2226CCE0F2621C8CF65E65338341995882FC95561B98483C6B7093E8F3C916
44A1EC9776BBAFCF1999E393526F2E9913A36AB6228781512A27DA787A032B3E
5A64468E7F1A548479819079CDF2C9C189CFDD83D7C633BC2301C2B38FD93002
9ADBDA5F88C69442682E0253161010344749968BC3E90C32D438C3B1F02E3B5D
6FA25431EC87AB7708E0D3C1061FCC7BC11FCA7259417FB6784656691F3F709F
C17BE05AF8AFD57311CB67FCD4615F63A26E69BCA226D23C215EF14BA832AB4A
93CB584550544F34A83B06550C7C20123FCA0175C0B7F6E42FEB20D5307258BC
138D36103C6EF5F7C95FB566098919B6BAB8CC19C7EEC387D5787D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
52C3A3CCE44DFD38C1A870AF15D782F5C403C5A9A475217E3BE7967360F89551
3FBF9B83D58D8413A45EB18DF19455770726B7082E4C33F9449E6DD6F89FF265
2453807A286AFE8DA4988BEDFED0C357A977805FA702F68652A4BAE9F609047D
B5ABF832032CA1F96E550903DF9B8190F9FFFA8AD1D68385057BF5B7592F73D7
024231193023D02D89731376114C1C0300300B9EF15A312AFFAE9B89C5965996
5C1144C7F8E92600D0BAA927ABC183A538251EE2CF46FEC77739437A52505EB6
45502B99547E91C25D86F0C590D7FB9E51E09C85C5BCDE30D15CD9A0DC335FC4
B589DB92B21ABD5F4A1828236BBC63F11D5FCE4783729578878D2C9CC4DECF24
6DFCBBD6E44045F23AF2CC8C8B621E9E3271620735C9C7C11C2166CC9CC6ED53
5A8E49C834D9A67B584D1FAC4714260B22178E58171EAE1348D1FD7F86AF5DBE
94FB5A2083BF5C7671606BF4B02AE069BDB00369B9B9089CCCF80F6FB7A324C5
A752A3774143475E1714EDBEE8E521D9FAA2FB7184AE70700BE94273DC383C3E
0FCD9102FD16EB35481E0B0B753DEF0357913C83BA2B0CB0657399EF0A213CF7
42E22C285B8940F89B5C7F37EC30C88DB6EA541956B904DB911D009F0B209BFD
C2EDA5F6A8082C5D91442EA1B50E761A116748EF16F2BE0F6DB2B3EB237E10EC
66A1EEC27C5849208FDC43C98E4D8D6BD45E1B9454F9B1AB0D125837CA28BAF2
3894EA151A6F8272286331698B32CA773AD5820F7347C7B23BE10FBBD2D5498C
4A68B73340A257BCA013A9BAF2BC881602C2505F744778396CEFA60BC49B57A9
AD5DB0459BC92DAEC28588C182302F21D0B09563510C9D222D6EC6A12D550ADE
A92F9C52980F86A82DC5C6C33CCB472AB1E6FB87210269E40D365040B9659A37
83520F22DB201A6131D13D6BBD73AD0E3ED5F7E7086C597E6814C795B0C74ABD
18A03458A477707F143A46E4B31B755D8BC35C7F5A2C3BD9D2E42194A4902A0A
8B6B3199D91C065EDB18B84E0C7AB5154A2FF155757868EF371BF4BF97B23D6E
7AC76CEAA06FEE972B78AC075ABEF2088109E69564E8B2BA34D910F4988ADC8E
402F8A7548AB91C19BC05CCF78C7CD504D94ACDAD57B7D9938D25405D1566F2A
2BFBB0B91834B01F8890C5E4C899DBA9E9D86502CCC5A3AC48F66B134529D969
3540AB8BC393521EC9A73FD1E6619B3AF0FA91FB32FF0706C80B6811ECDAAB16
975D98DBBBF1BD0F929C71E5E5B43E92840BD29870276B292A4BDB6AC8046437
DAF0B4884CBE210292FFF2EFE0E796B4CA065001A8E03F79D062F7E9D3D23C8D
0B7E061C55129BF62A7668C14A84F8E1297A7043C868ABEC83B315795037F147
ACA224263E47DFA1B77355C95AD47D4FF64CA833EDFCFEDE6DFADA377D84F772
FDA8F61DE8919B9F5A5B55BB47299EA698C1F93228EFAD74A27A94BE7CE34AB8
09E7E4461907C8EF7DCDFF6650F77604ADE5A1743ECD451F0E78ADA05FC73D5D
92293BF29C73EB3A28617B0A4AEC1DDDBC2AAA1BFAC5D7C2CA79E289F6CED4F2
956073574A45148B7C666524A365D9A5443B5DA5ADDEEB1CDC7A9B117EB4B718
B71119F3840568E060AD7BF22132E956AF6047A4205B7D4BA1F36428B20EA9D9
4D420E8CD0F60D2894A4BEA7FA46C14DB12BD7B7D0C8207A291FE4C18F6335FB
A135BEC329365631C73E02B5065DDE064D64B07C5041BDB97BAB801D2F7F9A4A
5F752E9A7CE92289F1D8DB442575753A68DC62693EDC9C5A4FA4A71EA0848A93
64BA6446D5BD972F156ECC4E82D4CF8E6F87B2A2DAFC69673E1FBBBEAAE4015F
53DD5994514C074D8D84A638CDAC65942EE3504C2A06911A7FB36E5EB80D09C7
48FC43A09AE6520D29410CA46516D6C3366FEB901D3FE44C2EDCC228B99DBBC3
4829E8DDE124CEE487B35B9ECE9CCB1C30149894C7AC757D835BA3CD63BF4134
66B9801CF2338686071FE0474E58668AF1C8E93B0E2BACD65BA437A3141F8149
B4BE0D5852EEF87F6DBC8D2A44262E4E7BBC6CED991E074413FEFA33E565E9F1
DDE2C4D003878381FFBBE87B8FCCB614801C950EA82CE252563A79CC5FEE3BB1
3BCE08FB4D5512990BBA06077BA03D8E143511992B3061EED7BE2B3733E01308
0109C762A720C2DE9AFC309C01C9E86914F92D3BCC2D56C35F652A346077184D
2A6EA34DE62BBD9310C7721D0D301A86EC3CCC1F4524C7E8997615C0C6DF2C6C
8ECE35FD4A8F5416BCA431CBB5B28465A9A64B7EABBF5D41F970CF8BBD767AD3
BC0C7BAEB11C3397FC5BFA15282DA7087C4C78A0BA3DA07F07FEE22EC24DB352
F5F04BFDF4927AF8F20D44ACA5A7CA514AEF30938E1C0D2DC758A9524785231C
472A6CFD3720F7A672BB8F4F960BAF4F456285AF733937E3B3D67CE3931758F2
6B6387027FCF82ABBBBC2E847AE0AB253ABBE4E70CDE43EAF5A9C37C883A3077
00E7D2D7A9B133EA2E438B90455D7534E1BF8A73A1D72437FC9DA03808AEB1F5
D7F0BF49D8D3CB1E4BF19794AB8D9A59A1DD403FF939178D3A03DD0B3C35E60B
26EDDB8317C9B74D3EC06DB36862DAD57BEBD8C35334CB99E970CF407752B61E
82A67F751218E66439E67950578CB9E77CEEFBEC670B629A73E68CD306F9E896
FA32C987EF2AC65075BD22ECDA2C4577B3E534D48E463FBD19836E0DF56FB741
A6B5241CBB111B764E96CF61BC6FBB3891A68E16CAEBEC3BD73EA7ED3916A262
2D340D335FF406327BF9D7D653BA474D54BC5AAEB5FBF94C5DF7ED9698D4CA52
4A950BA49EF8662D08581A186EC03D5F9AD21D63EA6358CFEE50B3F6BA350C12
F4529A610540B0AD56FD97E23740B707A8E39F3473B93CBCB4A7704FD04B726D
52ACAE148206B977AED7F7698654A85F8613F1D1FFCE2F8C5B919CCA6727F9D7
7B1EC3181F08C4B4569686EC3EED5EDA4C2EF7843CECB006D26DFBCE0B695369
297D6E55CCDA1A0FD47C2D61C4688E335C27BFF26B9F962538A90CED7429D531
A0C7D8E2EE24236473B2A4C8AED44AD345E2055B07D8312A7930A5181F0B3D6A
2A5FF2DF249F7E592619BA168FCCF06F18F9C135B24E21823D58A56A1180605F
A63E75436277D92A8BFC779BEA764A2B2747A78060AAC4F388390C000BF1DADB
DEE83DE2C0FD5E78FA9A6AD71C58F6A38DCB282EC09BBD55AAAB4875BC678D5B
EA63AA5BD9C5E3C95A69BCDA5AADC7865087CB0017070EB9022F6AB83A5B7AC0
B16FAF3B3E8CC8F4162E86D91E99E5486E6B93E12A0435725CC5F431265BDE88
FBF26D6BB03E6C8105FF3B6B70F34D937F5AC9C0E74D0CD08FE7F37F0E9253FA
62A1F7ECC4B26A8F90D620D7EAB729B8CBB0BBD2CE859186A6F5035B9130C6BB
D7D996A0A624E2A4BE90A7D75B4F0A10CA6A5CFEC0D23D53F2EBE9DE4C19F3D7
A1A2CD63D1033DEB765A44B1332EF5C9506206070EDE1A01098AE66AC78CC532
318116EB824A1E62604ACA4772D5C9F52F1EFC559920A92F8C4E4DCF29A242F6
C8B52ABCB92033E3ABD52F95DCF3E0E6C5E5E25C94C79A68AF0079EB709D7F14
8016632AA49ED5C079CAD5E5E30E64634FE8FFCE889ED77E9E60172AA5974177
62B3AE0F4BDB0BAF839C78B6656C664ED6526921A54BC0039B003D683C3281D4
E119FF59053081D585A6CC09CBD4C42FDB25D61C3CB7AF62457094F5811D4B53
C08C3722AE4B3D8BB58A87AF43281E98880E2B8C6628BEBF712E9A80AD879C09
6D8FAEA8B0F2D7BEDCEB10FF8671EA24B09A412A324EC3B4D3887D34C8058019
CD4AB8C7116882CCAC55075074FA53A8D22E0B8180E56F69014948F5F1798188
5EF98F81BF6DDED475DEC5CF3B3ED7391DAFFB6D19EDF94ECBD37E23C876D62A
AD04DB73C99959F888901ECD92373C185E489EB379EE8B4EECE3AD106EAC3B4E
E9A067DB09D29FE989694911DB23374302A26A148C245902F054BD22EFFE8191
4C4C4723989B658A05D23A14836096502925F88AA7F62C456C9869078F8D9739
2BB6E1616541060375D24A0E555ACFC24A06AD3B98D594B41EB764B59E25BD69
CC82C6A90E2528B88106100D28C5A4BC9EDA2311532F00332D58F7EF931D2B05
40CFEA05AA38BA6D32BECDB75D052F89381332EE7DA58040DE4B68687DA8F931
BA754BEB5234806692049AFACFAFDBEE602E295DC27136269D70E6B094B619B6
AEA94C04296B96FC75C3B095946ABADF3ED74761BDC7D4F89224342016D1BDDC
C491985F20B9DAC406C97E8470FEE531F76640A60632A3580AE427E268A0053E
7D8B5D754DBB2A070715D5A856B9156AF78D1DFC136CDDECADF1EFE837E765A3
7955560DB159A23959CB3A8BFDEC77FF2017B34D92B6CF893EA61B67870F3244
98F33B950CBC65BA1FD9064F6FAC77D3234785286FDB66B6FFC7322529458A77
2C3FA07585A77E0C2A9678284C9FD005201881B7BC53037EB9A0C7AF633C43DA
97102B526391BD8F1FE4ADCB601AB629A982C1D19902599D5A1497EBDD46C4FA
398217702A64DE3F70C3621495BCE6B66EF2671E811DACCE1B1E16BBC495DEB1
35A3AAE80757286F595B14E340139D02F0F5CDD65C708CF4A25DDA363B9D43CA
6DABE9C09CE8BC518C2A601A76EA49A6B0727CACD99BE86C1D92CF7CDA62C202
7428F4D3680E027953974EE917BC3A4B4387398C8D8B2C12CA8DCDFDF460BE75
EE7E17CEF013F99A70695C9BE658A8D13051FBC576DDF504DBAE9D5C82460DEA
DEE6F74C2B4FF01C84952BD49A3C4A09D58E92DF655D862F3F154754862C5D3B
B50596A212452C6762D0F70A09CB341AB93FC9BBFE69904261369AE673CB7E1F
6B976192D167877FDDCA6149C87A2F293D7464A06C2F7E28ADA21DF697544053
5E3A04F05B6E52D80E2133F50B403361D179506B2F383AB4E4011DD24160E368
B3599DF2243EC19FEB979927969A163E2C8EBC8F967C6F82E940BC05B1AAD41A
1E552BFC9ABDE6D27FD2F7672F686C869B683E8B55EBB7A85C9BCC415631DA66
DE5C6E923B26279FAA0FFEA4A9463279FBA88850B638ABF0D45B5387BDE4026A
1651850AD0E9AC1304ECA90F3AE5CA3F2CDABFCF0ED729645D440E5870C001CC
7E54A6B9506D98669D69C0706F4BCE50E539AA95811314B23524C8FD899AA2CC
41E566AE9291BD8308B70562A4FD480C2A29400D0C1F41B69AC077BA7DFBEE04
8A9C56FF44245E7923C9C2143867F8E3BDD37010BD03C9128F54B5D8356A8FB1
55C5C33DA966D299B923B2B34279C32D74996A4A800F9CE3154D807ECE5AE544
EDC9DF05C302641CB1709E75DD1B726566F8E0C539B217AA48F77691CCFC3B2B
988CA4EBC5472FA5659BC498AF85DB105AA78ED65585BFF9142C1C19A77EA356
EBD38EC5A9344FE6955B1C4ADCC9D1519E0F1311805B1EB6CE0E8EFB379C802E
9C3CEA1ADB5AC74C8CC7F77D271CA6C37E357D0C01FBC844D4883874C9F20A02
E0F8AF666E6E9F877E260A2F4B8F65B0D99647AE3DEEB6EB084D2FC93B21A4C6
D12F40EBA73DB5339C50C4ED97C5C9F49A8BC65C9361AE6B923377768D4619C6
88D28FAD01BB959732276C9B6B2D4638CC37DACF178D880EEA547616C38D2F3E
145ED5607CF7681A08DD8BB56D57F72A76389C9A3B8930E1388C09751E79D4D0
6D76B7052F6FAB0168A5A16895F3DE3CBE068B5541FEC42E4F4A8D374F445508
9CD934123D4F8583E1873C9DF8216C6612CCD5B2B7335599E75E51D49D5206E6
190F88AF42A02FD5667817CFAABBBB698372B7744478920BC22E87696B65BDC2
AD474D1A41E3F494A50EF566BE4E58B36395632A5B2592056067F5304B20368E
4C7FF9D32FC23B10780BE9962E26436B78CAFDAA47C7F1F6FF65260C1BD2E4D3
302CC0D1BB6C788ECB81039462A6F0E35CBC7BB423D17853287060434826A464
AA90115DC6AFEFFD361B04C8A515E07D8E3633F571D8E924298087A511B2C553
5001CE1F1B80F1F318B502820AF267C99C8192DF195E2560854FE176E87582BF
4D453B7695162C7DECE89B1CA48E3FB5261380C9BABE2D63496BAE068570BF0D
40325FE485C61437F6DC56D4C44D1B8D8520E5A6E395BA39DB9D45D3D488559B
6FACDC1CC8430680C9F7AB0BC39A077BAB777F3B3B6A04D69452FFD0F601D7D1
DC0EE1D08FC02B1E9812F85ED7239F0E4D19C34FC3C4C7E9BA850BD6F8EFF9E3
A617336CB5A6B1ED93475D3AF379CB51E6B1FD19A8559B2C956CD66135324F0D
B3BC60D3DECDB23DEAA2BA05D5EA8DAD1E0BA47A522E6D5BC36E2851FAD1C2DE
8A1F1931FF71C4262E181B174D42F4078A1DF6D495E6518E4BAEB056FF289E08
30F0773C93DB8EFC0C856E6AB0903EF88DA269FF2547A5E7FD6AD1A2016CEC65
7D381961160F3F2ADC5C4A2B87C291987576B4492B79516557F130318CFB7A4F
93DBB18CE5FAEC2462257F0F5C1093C087B14C09414FA4651B44DB5DCCB3509E
806D6D4AF965330C02774D0B35F920D92DF83C329B371F61D88DF00133841991
065694B0C6FA874307E8A3888E3C59775F49382353C01BCE2DF11C9172AB0B2A
9391ABA86AD147BE41103369805CAF4969D70809D80776CAD09783AD5392290C
30680692917C7DF7911F13CBC49403D73E535B9D5352E759866F93A01C80A1FB
69ED546FEF0F261154C0FC91DE33BA67CEAAB77719A889B5B4CE1A0075E72747
3F92A1ECB27F6D69AAC6EEDDEB932EC19D32931389BA446B38F2778D169FAE79
B1A78008BA579DECACF7C701390231972EF889947A75D71414B0A84C84860DF8
61A0E40CE31A6E6B2332CF50842CE7DB1DE07AAF4FF3BE4238B120526B082D99
269795626820B763F877931C642365D1317CB461DDC48C420B2269C8CC2CF7E6
259E40B4A5B3E204A0FDB7C9A9F5A699CEC2CD58024255D40FC64CFB78863AB8
FB574E1392CEAC5863F095E0A3FFEE63B8753B5A133596D13F9C3668A7411994
87A49AD3AEDFC72AAED1C2E7C91B7F7F9A1F19B1DBCC073E20B3391841E9FA9A
BADBC61714BCFC369F8861FA468F9FAAC983F08562E7EE270EABF12E2C36B6F5
6CF6D5437DF7EC29874127B278963F7648B8A32C5830705DC8510704C1E1C55C
4EDEC96DD90CDA0DC8876BE48F37CC21F37DEEB685E63DC5DB1E745D5511001D
AEA4C8D97583C01663347DA6C5B2E5202D1B1A6B0EFCE243B31A3CED19A8C32E
4BCC14F793D3D76EDE7BB9E1A113FD2FB4E051386094377B5712F24A9227F0E8
2B94D89C8B911647101874BE9395BC1066D967D73359B2BB10FD3D82F9ACF9FA
8501CA6A6AB8C132631859530487E9C7F42A731F11C3D56D1BD7AEDCC114CD6B
D79910F1278CF892998E2C5A9704DE44B66852231B48AC180A73E917D23FDF52
033D7FED2B0779EBF2AF35530C5AAF13B96E126E5A84FC2E81FCB6484AEDF63F
EC6B1AC791CC581D7A9A0146B6BC1D1BE39C831EAA563CB1CE957650EACEDD0C
986ABC8515B842D29118FA7F8FAF12FDBB7EC23C70F5D26E7441A835CD7FD7DF
9DE5CC2116AB0EC3F82A00984C68C770E5953382DCEAA017F9241626B0FD3B42
9216D822EF568942E085AB2FC165E0273DDD2355D7E6B9BBE47E930FD7F048AC
6966CB5FCD93721EC3CCB2B101BA2CA33C82114EAE177E1ED04958B888E4F11A
9C2681BC1280070E9ADC7FE6B1E82AC779C9DDF4C4885D09EA36AA8CDBE0F12B
3B02B837E6562E949D7E5A69F34CD7281B0A6CDFCBF0FCC1810C6FC1003DA805
FF52FFF5557E65F272F0216ADE4C855DCE420D3C4CDCF54E4C07CFDDB7F4790B
CE01E32204EC073EF91924B4DCC58103C84D1CC8B33696240D26CD9F6C7EFF75
F2D8871F2E3D6DA66A9456EFB88266EB671FB3FD19678AD74ACCFFA010059C85
5EF7CDC416EE237BCF63F3E472D6A8C1EC629AF4F338C43A68261AC6574092E1
DE49E787050832A7F6EAEBCDB85EEE4AD3700D67BF70F640BE7F8D7C0D0EE745
EBB89C4D4D9F6F81DB34361FB1824A2401F336CED810420648AE52384B10FF0E
FFF40A8E2685C57D97D2BCF6350D9DC566024C882996E52BB4A7A6D32DC96133
6CF7BB5A14387CEA8EFA30278C6D50BFFDC72D24FB05E19F34FDD75318711B93
78EFCE4ED845FDCF03BD99AFEFEDD83B6B2CB278B340670B7B9029C6300D8B42
2B8E13F5F0023C00C5B28B8499B9732928DD8082833EFE602A74600714A6A75B
43C62A685E74703341164B1BDC8814BF8DF0451527ACBC3C640EC01BEFF96480
4A5256C4B397A755C379C9E3C28FD4161F04C20F0BFFBEDF694BFD9228DFC193
6514DD754D371452C94D7E9218CF07CF7A111136BE19BC2B5003B8D749AEF094
D27437D598CFADB40D52DF8D85F126022861322464879CAA456B5BC995B0C7D3
BC65C8B707D067865B96D22E804D54C5957A53295A343D55DC900045E70BCFF1
F2DBCDBE7E23F6FE0DA7DF4D191CDB69EA37588F6CE2056D87E8B08CB91B603B
AAFF7950E438008B8BC9CE6E21AE4BC9DAF08B5F6204F18A14D84EA9FF0D527C
9473DD4A2CAABBC9CA479780E48D7D7F0C801868195BBB354E68D9C7DF43580D
1E8F3C374AB66F7F7B40DE0224FE7FB891CE0F2602C36141D27553B190D3D79A
0AD8730BEA8715BCDBAB1A4CF9204D181E21B41E8744E35ABC6CF2D30279D49D
5059B2E9D111039D24810261D0AC7CDF4FA142BA0EF103565DF88B77FE288932
A3585D4A5CD82E8DDDFB42CA5335D9FE934DEF4D426501D29D46B6CC2D9B4D9E
741CF77D7EF4F7E2E00D3320DCD905903B00EF0E3ECFEBFC9A90A226B60DC78A
6351296D85B32A8457404C32394D4B4E7E7527926B728730C4611B2AA03B9523
AC131CF0F126A0CD05542804A2F0402F484B781E1559FFBD1B030E6AD1084982
354990704DF5D787330CD837991483BE3C1FB9A6C5CD934EB0FD81A246FB44B7
CA2064E690E09B470C7F24EC4BC8BEAF505120FD4891A72606170AFD36B49FCD
95CD98513AA99A47FDA004012A43E02E27E050CDB6CC60BFB0560CA577454122
46B3C21E8F7823D225E88AE8CFDFD7C82DA4F1C904E4C7F1413F762C99E1E4BB
DC610A794AF708DD6EA463FD0206164252A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (tech-review.dvi)
@start /Fa 135[33 48 33 37 22 26 26 1[33 30 37 52 19
2[19 1[33 19 26 1[27 1[30 11[52 41 37 2[41 1[52 6[48
2[52 1[41 19[17 46[{ TeXBase1Encoding ReEncodeFont }27
66.6667 /URWPalladioL-Ital rf /Fb 104[67 2[33 26[37 34
56 38 40 22 28 26 37 40 36 39 59 19 37 1[19 39 37 22
32 41 30 37 33 3[22 1[22 4[48 52 41 35 45 1[40 52 55
63 3[22 55 51 1[41 52 47 41 52 6[17 1[33 33 33 33 33
33 33 33 33 40 17 22 17 2[22 22 37[40 2[{
 TeXBase1Encoding ReEncodeFont }62 66.6667 /URWPalladioL-Roma
rf /Fc 240[34 15[{}1 58.1154 /CMSY7 rf /Fd 134[44 44
62 44 48 26 44 31 48 48 48 48 70 22 44 1[22 1[48 26 44
48 44 48 44 11[57 48 53 57 1[53 62 57 66 3[22 57 62 1[53
57 57 1[57 11[44 44 44 44 44 2[22 1[22 41[48 2[{
 TeXBase1Encoding ReEncodeFont }46 79.1666 /NimbusSanL-Bold
rf /Fe 107[40 25[40 44 41 66 45 48 26 34 31 44 48 43
46 70 23 44 19 23 46 44 26 38 48 35 44 40 3[26 1[26 3[79
57 62 49 42 53 62 48 62 66 75 48 57 26 27 66 60 1[48
61 56 48 62 8[40 40 40 40 40 40 40 40 40 48 20 26 20
2[26 26 22 35[48 48 2[{ TeXBase1Encoding ReEncodeFont }69
79.1666 /URWPalladioL-Roma rf /Ff 138[48 26 35 31 2[44
48 1[26 48 1[26 1[44 31 40 48 35 1[40 11[62 53 1[57 1[48
1[66 1[48 2[31 20[40 40 40 40 1[23 44[48 2[{
 TeXBase1Encoding ReEncodeFont }28 79.1666 /URWPalladioL-Bold
rf /Fg 170[66 56 1[66 1[61 1[66 1[56 2[25 5[66 14[51
51 51 51 1[25 47[{ TeXBase1Encoding ReEncodeFont }13
91.6666 /NimbusSanL-Bold rf /Fh 170[53 45 49 53 2[57
53 1[45 53 1[20 1[57 45 49 53 53 1[53 65[{
 TeXBase1Encoding ReEncodeFont }15 73.3333 /NimbusSanL-Bold
rf /Fi 201[32 32 32 32 32 32 49[{ TeXBase1Encoding ReEncodeFont }6
58.3333 /NimbusSanL-Regu rf /Fj 134[33 1[48 33 37 19
33 22 37 37 37 37 56 15 33 15 15 37 37 19 37 37 33 37
37 11[48 41 44 48 4[56 4[48 52 41 44 1[48 44 9[37 37
4[37 37 37 1[19 22 19 41[33 2[{ TeXBase1Encoding ReEncodeFont }44
66.6667 /NimbusSanL-Regu rf /Fk 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fl 171[72 8[85 5[71 90 83 20[29
46[{ TeXBase1Encoding ReEncodeFont }6 116.667 /URWPalladioL-Roma
rf /Fm 166[62 1[93 1[73 57 49 62 1[56 73 78 1[57 68 1[31
78 2[57 1[66 1[73 65[{ TeXBase1Encoding ReEncodeFont }16
93.3332 /URWPalladioL-Roma rf /Fn 170[156 123 105 3[157
1[189 3[67 1[153 1[122 155 142 122 8[100 5[100 51[{
 TeXBase1Encoding ReEncodeFont }13 200 /URWPalladioL-Roma
rf /Fo 169[116 124 98 84 107 1[97 126 133 151 98 116
5[98 1[113 1[124 65[{ TeXBase1Encoding ReEncodeFont }14
160 /URWPalladioL-Roma rf /Fp 188[144 133 66[{
 TeXBase1Encoding ReEncodeFont }2 200 /URWPalladioL-Bold
rf /Fq 171[107 98 3[133 133 2[124 5[98 1[116 1[124 65[{
 TeXBase1Encoding ReEncodeFont }8 160 /URWPalladioL-Bold
rf /Fr 175[60 1[83 22[50 4[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }7 100 /URWPalladioL-Roma
rf /Fs 166[53 2[58 3[53 1[48 63 1[76 6[44 49 62 1[49
62 65[{ TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Ft 171[102 87 111 14[118 67[{ TeXBase1Encoding ReEncodeFont }4
166.667 /URWPalladioL-Roma rf /Fu 166[89 1[133 96 1[82
70 2[81 105 111 1[81 2[45 111 102 1[81 1[95 1[104 65[{
 TeXBase1Encoding ReEncodeFont }15 133.333 /URWPalladioL-Roma
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -31 705 a @beginspecial 0 @llx
0 @lly 345 @urx 435 @ury 1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 521 1025 a Ft(C)8 b(S)51 b(C)8 b Fu(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Ft(T)8 b Fu(E)g(C)g(H)g(N)g(O)g(L)g(O)g(G)g(Y)52
b Ft(R)8 b Fu(E)g(V)g(I)g(E)g(W)1488 1225 y Fr(N)t Fs(O)t(V)t(E)t(M)t
(B)t(E)t(R)35 b Fr(2)t(0)t(,)d(2)t(0)t(1)t(7)1141 1725
y Fp(C)10 b Fq(O)g(N)g(N)g(E)g(C)g(T)g Fp(B)g Fq(A)g(S)g(K)g(E)g(T)1617
3460 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5 b(E)g(D)36 b(F)t(O)t(R)1402
3693 y Fn(O)10 b(S)g(U)60 b(M)10 b(I)g(M)g(E)1292 3877
y Fl(D)c Fm(R)g Fl(.)36 b(C)6 b Fm(H)g(I)g(N)g(W)g(E)g(I)g(K)g(E)33
b Fl(E)6 b Fm(S)g(E)g(O)g(N)g(U)1649 4110 y Fr(P)t Fs(R)t(E)t(P)m(A)t
(R)f(E)g(D)35 b(B)t(Y)1492 4343 y Fn(G)10 b Fo(R)g(O)g(U)g(P)59
b Fn(3)10 b(9)143 4577 y(C)g Fo(O)g(N)g(N)g(E)g(C)g(T)g
Fn(B)g Fo(A)g(S)g(K)g(E)g(T)59 b Fn(D)10 b Fo(E)g(V)g(E)g(L)g(O)g(P)g
(M)g(E)g(N)g(T)57 b Fn(T)10 b Fo(E)g(A)g(M)1376 4760
y Fl(T)n Fm(A)l(Y)c(L)g(O)g(R)34 b Fl(K)6 b Fm(I)g(R)g(K)g(P)m(A)o(T)g
(R)g(I)g(C)g(K)1815 4994 y Fk(Abstract)127 5123 y Fj(This)18
b(document)f(descr)q(ibes)i(in)f(detail)f(three)h(par)s(ts)f(of)g(the)h
(ConnectBask)o(et)g(softw)o(are)g(that)f(will)g(be)h(de)n(v)n(eloped)h
(b)o(y)e(the)h(team)f(dur)q(ing)h(the)f(2017-)8 5209
y(2018)k(Capstone)f(y)o(ear)m(.)g(These)g(par)s(ts)g(are)h(the)f(user)g
(login)g(and)h(pro\002les)g(fr)o(ame)o(w)o(or)q(k,)f(the)g(issue)g(tr)o
(ac)o(k)o(er)h(fr)o(ame)o(w)o(or)q(k,)f(and)g(the)g(SMS)h(ser)r(vice)o
(.)g(F)n(or)8 5296 y(each)c(par)s(t)e(in)h(this)f(document,)h(three)f
(technologies)h(are)h(compared)f(to)f(\002nd)i(the)e(best)h(choice)h(f)
n(or)e(the)h(project.)f(These)h(technologies)g(are)h(the)e(HUGE)8
5382 y(fr)o(ame)o(w)o(or)q(k,)k(Request)g(T)-8 b(r)o(ac)o(k)o(er)m(,)18
b(and)h(man)o(ual)f(emailing)g(respectiv)n(ely)-7 b(.)p
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 4018 -296 a Fi(1)-148 -144 y Fg(C)t
Fh(O)t(N)t(T)t(E)t(N)t(T)t(S)-150 80 y Ff(1)178 b(Introduction)3487
b Fe(2)68 224 y(1.1)197 b(Purpose)74 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 368
y(1.2)197 b(Scope)35 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 512 y(1.3)197
b(De\002nitions,)21 b(Acr)o(onyms,)h(and)g(Abbr)o(eviations)40
b(.)h(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(2)68 657 y(1.4)197 b(Refer)o(ences)49 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)-150 880
y Ff(References)3763 b Fe(2)68 1024 y(1.5)197 b(Overview)77
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(3)-150 1248 y Ff(2)178 b(User)23 b(Logins/Pro\002les)3211
b Fe(3)68 1392 y(2.1)197 b(Userfr)o(osting)50 b(.)41
b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(3)68 1536 y(2.2)197 b(HUGE)67 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)68 1680 y(2.3)197
b(ASP)-10 b(.NET)20 b(Identity)47 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)135 b(4)68 1825 y(2.4)197 b(Comparison)53
b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)68 1969 y(2.5)197 b(Selection)50 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(4)-150 2192
y Ff(3)178 b(Issue)24 b(T)-9 b(racker)3460 b Fe(4)68
2337 y(3.1)197 b(T)-7 b(r)o(ello)42 b(.)g(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68
2481 y(3.2)197 b(Request)21 b(T)-7 b(racker)46 b(.)41
b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68
2625 y(3.3)197 b(Manual)21 b(Issue)f(T)-7 b(racking)55
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68 2769
y(3.4)197 b(Comparison)53 b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(5)68 2914 y(3.5)197 b(Selection)50
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
135 b(5)-150 3137 y Ff(4)178 b(Noti\002cations)3478 b
Fe(5)68 3281 y(4.1)197 b(T)-7 b(wilio)21 b(.)42 b(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(6)68 3425 y(4.2)197 b(Nexmo)45 b(.)c(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(6)68 3570 y(4.3)197
b(Manual)21 b(Email)51 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)135 b(6)68 3714 y(4.4)197 b(Comparison)53
b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(6)68 3858 y(4.5)197 b(Selection)50 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(6)p eop
end
%%Page: 2 3
TeXDict begin 2 2 bop 4018 -296 a Fi(2)-148 -144 y Fg(1)96
b(I)t Fh(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)-150
25 y Fd(1.1)79 b(Purpose)-150 194 y Fe(The)21 b(purpose)g(of)h(this)g
(document)g(is)f(to)h(give)g(an)f(overview)h(of)g(what)g(parts)e(of)j
(the)e(ConnectBasket)h(pr)o(oject)f(T)-7 b(aylor)21 b(Kirkpatrick)h
(will)-150 338 y(have)j(r)o(esponsibility)e(over)-6 b(,)26
b(and)f(analyze)f(the)h(technologies)g(that)g(may)f(be)h(used)g(for)h
(each)f(part.)f(Each)i(part)e(will)i(choose)f(a)g(speci\002c)-150
483 y(technology)e(that)e(may)h(be)g(used)f(in)i(the)f(\002nal)f(pr)o
(oject,)g(along)i(with)f(justi\002cation)e(for)j(why)-9
b(.)-150 737 y Fd(1.2)79 b(Scope)-150 906 y Fe(ConnectBasket)27
b(will)g(be)f(a)h(web)f(based)g(portal)h(for)g(the)g(OSU)f(V)-9
b(eterinary)27 b(Hospital)f(that)g(will)h(str)o(eamline)f(the)g(way)h
(messages)e(ar)o(e)-150 1050 y(moved)e(ar)o(ound)f(the)g(hospital)f
(and)h(pr)o(ovide)h(a)e(better)h(way)g(to)h(track)f(the)g(r)o(oute)g
(that)g(messages)e(have)i(taken.)f(When)i(an)f(owner)h(calls)-150
1194 y(the)31 b(hospital,)f(r)o(eceptionists)g(will)h(be)g(able)g(to)g
(type)g(a)g(message)f(into)h(the)g(computer)-6 b(,)31
b(assign)f(it)h(a)g(category)-9 b(,)32 b(and)f(r)o(oute)g(it)g(to)g
(the)-150 1339 y(necessary)21 b(staf)o(f)g(members,)g(which)h(may)g(be)
f(service)h(speci\002c)f(vet)g(techs,)h(house)f(of)o(\002cers,)h(or)g
(faculty)-9 b(.)22 b(Those)f(staf)o(f)g(members)g(will)h(be)-150
1483 y(alerted,)27 b(either)g(by)g(email)g(or)g(text,)f(that)h(they)g
(have)f(a)h(message)f(waiting)g(for)i(them)f(in)g(ConnectBasket,)g(and)
g(once)g(viewed,)g(notes)-150 1627 y(can)j(be)f(added)i(and)f(the)g
(message)e(can)i(be)f(r)o(e-r)o(outed)h(to)g(other)g(staf)o(f)g
(members.)f(After)g(a)h(message)e(has)h(been)h(addr)o(essed)f(by)h(the)
-150 1771 y(necessary)24 b(staf)o(f,)h(the)g(message)f(can)h(be)g
(closed)h(pr)o(eventing)e(further)i(notes)f(or)h(comments.)f(The)g
(audit)g(trail)g(of)h(when)f(the)h(message)-150 1916
y(was)21 b(cr)o(eated)h(and)g(closed)h(will)f(be)g(visible,)f(along)h
(with)g(all)g(the)g(notes,)g(timestamps)d(of)k(notes,)f(and)g(staf)o(f)
f(who)i(added)g(the)f(notes.)-150 2170 y Fd(1.3)79 b(De\002nitions,)24
b(Acr)n(on)n(yms,)g(and)f(Abbre)o(viations)-31 2340 y
Fc(\017)95 b Fe(Capstone)21 b(-)h(CS)g(461)f(class)g(at)h(Or)o(egon)g
(State)f(that)h(the)f(developers)h(of)h(ConnectBasket)f(ar)o(e)f(in)-31
2484 y Fc(\017)95 b Fe(OSU)21 b(-)i(Or)o(egon)f(State)f(University)-31
2628 y Fc(\017)95 b Fe(Hospital)21 b(-)h(r)o(eferring)h(to)f(the)g(OSU)
g(V)-9 b(eterinary)22 b(Hospital)-31 2773 y Fc(\017)95
b Fe(Owner)22 b(-)h(a)f(person)g(who)g(owns)g(a)g(pet)f(that)h(is)g(a)f
(client)h(of)h(the)f(hospital)-31 2917 y Fc(\017)95 b
Fe(Patient)21 b(-)i(an)e(animal)h(who)g(has/is)f(going)i(to)f(be)g(tr)o
(eated)f(at)h(the)g(hospital)-31 3061 y Fc(\017)95 b
Fe(V)-9 b(etHosp)21 b(-)h(the)f(hospital)g(management)f(system)h(used)g
(by)h(the)f(OSU)g(V)-9 b(eterinary)22 b(Hospital)e(for)j(keeping)e
(patient)g(and)g(owner)98 3205 y(r)o(ecor)o(ds)-31 3350
y Fc(\017)95 b Fe(Mobile)22 b(Devices)g(-)g(smartphones)f(or)i(tablets)
-31 3494 y Fc(\017)95 b Fe(CPaaS)21 b(-)h(Communications)g(Platform)g
(as)f(a)h(Service)-150 3748 y Fd(1.4)79 b(Ref)o(erences)-148
3942 y Fg(R)t Fh(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t(S)-150
4110 y Fb([1])40 b(\224Userfr)o(osting)100 b(\227)e(Modern)h(user)g
(management)f(framework)h(for)g(PHP\224,)g Fa(Userfr)o(osting.com)p
Fb(,)d(2017.)j([Online].)g(A)-6 b(vailable:)-33 4223
y(https://www)g(.userfr)o(osting.com.)18 b([Accessed:)g(14-)i(Nov-)f
(2017].)-150 4448 y([2])40 b(panique)20 b(and)f(others,)f(HUGE,)h
(\(2015\),)h(GitHub)f(r)o(epository)-7 b(,)20 b
(https://github.com/panique/huge)-150 4673 y([3])40 b(Micr)o(osoft,)64
b(\224Intr)o(oduction)g(to)f(ASP)-9 b(.NET)63 b(Identity\224,)f
Fa(Docs.micr)o(osoft.com)p Fb(,)d(2017.)64 b([Online].)g(A)-6
b(vailable:)63 b(https://docs.micr)o(osoft.com/en-)-33
4785 y(us/aspnet/identity/overview/getting-started/intr)o
(oduction-to-aspnet-identity)-7 b(.)22 b([Accessed:)17
b(14-)j(Nov-)f(2017].)-150 5010 y([4])40 b(T)-6 b(r)o(ello,)20
b(\224T)-6 b(r)o(ello\224,)20 b Fa(T)-7 b(r)o(ello.com)p
Fb(,)15 b(2017.)20 b([Online].)f(A)-6 b(vailable:)20
b(https://tr)o(ello.com/.)f([Accessed:)f(14-)h(Nov-)h(2017].)-150
5235 y([5])40 b(Best)23 b(Practical,)g(\224Request)g(T)-6
b(racker\224,)23 b Fa(Best)g(Practical)e(Solutions)p
Fb(,)g(2017.)j([Online].)f(A)-6 b(vailable:)24 b
(https://bestpractical.com/r)o(equest-tracker)-5 b(.)24
b([Accessed:)-33 5348 y(14-)c(Nov-)f(2017].)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 4018 -296 a Fi(3)-150 -144 y Fb([6])40
b(T)-6 b(wilio,)21 b(\224Communication)h(APIs)g(for)f(SMS,)f(V)-7
b(oice,)20 b(V)l(ideo)i(and)e(Authentication\224,)g Fa(T)-6
b(wilio.com)p Fb(,)18 b(2017.)j([Online].)g(A)-6 b(vailable:)21
b(https://www)-6 b(.twilio.com.)-33 -31 y([Accessed:)18
b(14-)i(Nov-)f(2017].)-150 194 y([7])40 b(Nexmo,)34 b(\224Nexmo)g(-)f
(APIs)h(for)g(SMS,)f(V)-7 b(oice)33 b(and)f(Phone)i(V)-7
b(eri\002cations\224,)34 b Fa(Nexmo.com)p Fb(,)d(2017.)j([Online].)g(A)
-6 b(vailable:)34 b(https://www)-6 b(.nexmo.com/.)-33
306 y([Accessed:)18 b(14-)i(Nov-)f(2017].)-150 531 y([8])40
b(M.)j(Gr)o(ech,)f(\224T)-6 b(wilio)44 b(vs.)f(Nexmo:)h(The)e(Head)i
(to)f(Head)g(Showdown)f(for)i(Developers)g(\227)e(GetV)-7
b(oIP\224,)44 b Fa(Getvoip)p Fb(,)f(2017.)h([Online].)f(A)-6
b(vailable:)-33 644 y(https://getvoip.com/blog/2017/01/05/twilio-)q
(vs-nexmo/)q(.)24 b([Accessed:)18 b(14-)h(Nov-)h(2017].)-150
1030 y Fd(1.5)79 b(Over)q(vie)o(w)-150 1201 y Fe(The)24
b(r)o(est)g(of)h(the)f(document)h(will)f(contain)h(thr)o(ee)f(sections)
f(with)i(an)f(overview)g(of)h(the)f(parts)g(of)h(the)f(ConnectBasket)g
(pr)o(oject)g(T)-7 b(aylor)-150 1345 y(Kirkpatrick)27
b(is)g(r)o(esponsible)f(for)-6 b(.)27 b(Each)h(section)f(will)g
(contain)g(\002ve)f(subsections,)g(thr)o(ee)g(to)i(analyze)d
(speci\002c)i(technologies,)g(one)g(to)-150 1489 y(compar)o(e)21
b(them,)h(and)g(one)h(to)f(state)f(the)h(chosen)g(technology)h(with)f
(pr)o(oject-speci\002c)f(r)o(easoning.)-148 1788 y Fg(2)96
b(U)t Fh(S)t(E)t(R)32 b Fg(L)t Fh(O)t(G)t(I)t(N)t(S)t
Fg(/)t(P)t Fh(R)s(O)t(FI)5 b(L)t(E)g(S)-150 1958 y Fe(A)19
b(featur)o(e)g(highly)g(anticipated)g(by)g(the)g(client,)h(users)e
(must)h(have)f(persistent,)g(personalized)h(states)e(to)j(distinguish)f
(them)g(fr)o(om)h(other)-150 2102 y(users)f(when)h(tasks)f(ar)o(e)h(to)
g(be)g(passed)f(on.)h(These)f(user)h(pr)o(o\002les)f(must)g(be)h
(private)f(and)h(secur)o(e,)f(one)i(to)f(each)g(user)-6
b(.)19 b(Messages)g(may)g(be)-150 2247 y(user)o(-speci\002c)j(and)h
(carry)g(information)g(that)f(is)h(con\002dential)g(or)g(otherwise)g
(not)g(to)g(be)f(made)h(accessible)f(to)h(everyone,)f(even)h(within)
-150 2391 y(the)e(company)-9 b(.)21 b(This)g(part)g(speci\002es)f(what)
h(framework)h(or)g(pr)o(oject)f(will)g(be)h(built)e(of)o(f)j(of)f(to)f
(cr)o(eate)g(these)g(users)f(and)i(their)f(logins)h(and)-150
2535 y(pr)o(o\002les.)j(Of)i(note)f(is)g(the)g(possible)g(overlap)f
(this)h(system)f(may)h(have)g(with)g(the)g(issue)f(tracking)h
(technology)-9 b(,)27 b(as)f(those)g(ar)o(e)f(usually)-150
2679 y(distributed)i(as)f(whole)h(pr)o(ojects,)e(including)j(user)e
(logins.)h(While)g(we)g(do)h(expect)e(to)h(be)f(using)h(one)g(of)h
(these)e(frameworks,)h(it)f(may)-150 2824 y(clash)c(with)g(what)f(the)h
(issue)f(tracker)h(framework)h(brings)f(to)g(the)g(table.)-150
3098 y Fd(2.1)79 b(Userfr)n(osting)-150 3268 y Fe(Userfr)o(osting)24
b(is)h(a)f(complete)h(and)g(easy)f(to)h(use)f(framework)h(for)h(PHP)-10
b(.)24 b(It)h(depends)f(on)i(the)e(PHP)h(tool)g(Composer)g(and)g(also)f
(makes)-150 3412 y(use)d(of)h(Node.js)f(and)g(Bower)i(for)f
(client-side)g(packages.)e(The)h(framework)h(fully)g(automates)d(and)j
(handles)f(persistent)f(user)h(sessions)-150 3556 y(without)28
b(r)o(equiring)h(the)f(dev)h(team)e(to)i(handle)g(sessions)e(manually)g
(between)h(many)g(potentially)g(dynamically)g(updating)g(pages.)-150
3701 y(Userfr)o(osting)22 b(also)g(adds)h(easily)f(customizable)f(and)h
(rather)h(nice)g(looking)g(user)g(pr)o(o\002le)f(pages,)f(allowing)i(a)
f(dev)h(to)f(simply)g(pr)o(esent)-150 3845 y(some)h(information)h(to)g
(users)f(under)h(the)f(conditions)h(that)f(they)h(desir)o(e.)f(In)g
(addition,)h(this)f(framework)i(pr)o(ovides)d(simple)h(methods)-150
3989 y(for)h(a)e(dev)h(to)g(cr)o(eate)f(user)h(r)o(oles)f(for)i(r)o
(ole)f(based)f(contr)o(ol,)h(and)g(assign)f(users)g(to)g(them.)h
(Lastly)-9 b(,)22 b(the)h(framework)g(allows)g(the)f(cr)o(eation)-150
4133 y(of)h(a)e(user)h(administration)f(page)g(for)i(user)e
(operations.)h(This)f(interface)h(can)g(be)f(easily)h(built)f(for)i
(non-technical)f(users,)f(and)h(ease)f(the)-150 4278
y(pr)o(ocess)g(of)i(user)e(administration)h(for)h(them.[1])-150
4552 y Fd(2.2)79 b(HUGE)-150 4722 y Fe(HUGE)25 b(is)f(a)g(PHP)g
(framework)h(for)g(doing)g(simple)f(user)g(authentication.)f(HUGE)i
(came)f(about)f(in)i(a)f(time)g(when)g(PHP)g(was)g(lacking)-150
4866 y(many)g(quality)g(login)h(solutions,)f(and)h(was)e(built)h
(primarily)h(of)o(f)g(of)g(the)f(passwor)o(d)p 2472 4877
40 5 v 39 w(compat)f(library)i(once)g(it)f(was)g(r)o(eleased.)g(HUGE)
-150 5011 y(is)32 b(no)h(longer)g(in)g(active)e(development,)h(but)g
(has)g(r)o(emained)g(an)g(excellent)g(choice)h(when)g(facing)g(up)e
(against)h(many)g(other)h(PHP)-150 5155 y(frameworks.)24
b(HUGE)f(makes)g(use)g(of)h(the)g(of)o(\002cial)f(PHP)g(passwor)o(d)g
(hashing)g(functions,)g(with)h(many)f(other)h(nice)g(featur)o(es)e
(that)h(one)-150 5299 y(would)30 b(expect)e(in)i(a)f(login)g(framework)
h(like)g(email)e(account)h(veri\002cation,)g(form)h(encryption,)g(a)f
(\224r)o(emember)f(me\224)h(function,)g(etc.)-150 5443
y(HUGE)j(also)e(of)o(fers)i(many)f(other)g(nice)h(featur)o(es)e(like)h
(URL)g(r)o(ewriting)h(\(masking)e(possibly)g(sensitive)g(info\),)j(and)
e(supports)f(user)p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 4018 -296 a Fi(4)-150 -144 y Fe(portraits)24
b(alr)o(eady)-9 b(.)25 b(HUGE)g(r)o(equir)o(es)g(PHP)f(5.5)g(or)i
(above,)e(a)h(MySQL)g(database,)e(a)i(handful)g(of)h(PHP)f(extentions,)
f(a)h(few)g(developer)-150 0 y(tools,)d(and)g(softwar)o(e)g(for)h
(sending)f(mail)f(if)i(desir)o(ed.[2])-150 275 y Fd(2.3)79
b(ASP)-9 b(.NET)22 b(Identity)-150 445 y Fe(ASP)-10 b(.NET)34
b(includes)h(a)h(r)o(elatively)e(r)o(obust)h(user)g(login)h(API)f(for)i
(use)d(in)i(ASP)-10 b(.NET)34 b(pr)o(ojects.)g(As)h(this)g(pr)o(oject)g
(may)g(be)h(done)g(in)-150 589 y(ASP)-10 b(.NET)k(,)27
b(this)g(is)h(something)g(worth)h(checking.)g(As)e(the)h(web)h(became)e
(wider)i(and)g(demanded)f(even)g(better)g(user)g(management)-150
733 y(support,)i(ASP)-10 b(.NET)29 b(cr)o(eated)i(the)g(framework)h
(ASP)-10 b(.NET)30 b(Identity)h(to)g(keep)g(up)g(with)g(alternatives,)e
(of)o(fering)j(full)g(support)e(with)-150 878 y(other)j(ASP)-10
b(.NET)32 b(packages)f(along)j(with)f(the)g(expected)f(featur)o(es)g
(in)h(a)g(login)h(framework.)f(Playing)g(well)g(with)g(other)h(ASP)-10
b(.NET)-150 1022 y(packages)21 b(is)i(not)f(to)h(be)g(under)o
(estimated,)e(however)-6 b(,)23 b(as)f(a)g(pr)o(oject)g(built)g(in)h
(ASP)-10 b(.NET)21 b(is)h(sur)o(e)g(to)h(have)f(numer)o(ous)g(other)h
(packages.)-150 1166 y(The)34 b(framework)g(does,)g(of)h(course,)f
(support)f(simple)g(login)i(featur)o(es,)d(along)i(with)h(mor)o(e)f
(advanced)g(things)f(like)h(social)g(media)-150 1310
y(integration)22 b(and)g(a)g(persistent)f(\224r)o(emember)g(me\224)g
(cookie)i(login,)g(and)f(r)o(ole)g(based)f(contr)o(ol.[3])-150
1585 y Fd(2.4)79 b(Comparison)-150 1755 y Fe(At)19 b(a)f(\002rst)h
(glance,)g(it)g(appears)e(that)h(ASP)-10 b(.NET)18 b(Identity)h(lacks)f
(featur)o(es)g(compar)o(ed)h(to)g(the)g(other)g(two)h(options,)e(and)h
(this)g(observation)-150 1899 y(is)g(corr)o(ect.)h(However)-6
b(,)20 b(it)g(does)f(boast)g(the)h(r)o(eliability)f(of)h(Micr)o
(osoft's)f(pr)o(oducts,)g(and)h(development)f(with)h(it)g(in)g(V)l
(isual)e(Studio)i(would)-150 2043 y(be)h(easier)g(than)f(the)h(other)h
(two.)f(Between)g(the)g(other)h(two,)f(Userfr)o(osting)g(is)f(much)i
(mor)o(e)f(hands-of)o(f)h(than)e(HUGE,)i(and)f(while)g(doing)-150
2188 y(less)h(complex)g(and)h(err)o(or)g(pr)o(one)g(work)g(is)f(nice,)h
(it)f(also)h(r)o(estricts)e(the)i(fr)o(eedom)g(of)g(the)g(developers.)f
(HUGE)h(and)g(Userfr)o(osting)f(have)-150 2332 y(very)27
b(similar)g(featur)o(es)f(available,)f(but)h(HUGE)i(may)e(even)h(boast)
f(mor)o(e)h(featur)o(es.)f(However)-6 b(,)27 b(HUGE)h(was)e(never)h(r)o
(eally)g(formally)-150 2476 y(r)o(eleased)35 b(as)f(anything)h(other)h
(than)f(a)g(simple)g(open)g(sour)o(ce)g(framework.)h(Identity)f(and)g
(Userfr)o(osting)g(ar)o(e)g(both)g(mor)o(e)h(formal)-150
2620 y(pr)o(ojects,)21 b(and)h(may)f(not)i(be)f(as)f(bug)h(pr)o(one.)
-150 2894 y Fd(2.5)79 b(Selection)-150 3065 y Fe(The)28
b(HUGE)h(framework)h(is)e(the)h(tentative)e(winner)i(in)g(this)f
(category)-9 b(.)29 b(It)f(is)h(a)f(happy)g(medium)g(between)h(the)f
(hands-of)o(f)h(GUIs)f(of)-150 3209 y(Userfr)o(osting)19
b(and)g(the)g(mostly)g(manual)g(con\002guration)g(of)h(ASP)-10
b(.NET)18 b(Identity)-9 b(.)19 b(HUGE)h(has)e(r)o(oughly)i(the)f(same)f
(number)h(of)h(featur)o(es)-150 3353 y(as)31 b(the)h(other)g(two)g
(combined,)g(is)f(much)h(better)g(documented)g(than)f(both,)h(and)g
(has)f(many)g(years)h(of)g(fellow)h(users)e(for)h(support)-150
3497 y(that)d(Identity)g(may)h(not)f(have,)g(and)h(Userfr)o(osting)f
(is)g(unlikely)h(to)g(have.)f(This)f(victory)i(comes)g(with)g(a)f
(caveat,)f(however)-6 b(,)30 b(as)f(it)g(is)-150 3642
y(dependent)23 b(on)h(what)f(language)f(the)i(softwar)o(e)e(is)h(in.)h
(Should)f(the)g(dev)h(team)e(be)i(unable)e(to)i(use)e(PHP)-10
b(,)23 b(or)h(otherwise)f(choose)g(not)h(to)-150 3786
y(in)e(favor)g(of)h(ASP)-10 b(.NET)20 b(or)j(something)e(else,)g(HUGE)i
(would)f(be)g(useless)e(for)j(the)f(pr)o(oject.)e(Of)j(the)f(thr)o(ee)f
(pr)o(esent)g(her)o(e,)g(however)-6 b(,)23 b(it)e(is)-150
3930 y(the)f(better)g(of)i(them,)e(while)g(the)h(others)f(pr)o(ovide)h
(options)f(should)g(other)h(development)f(decisions)h(invalidate)e
(HUGE)i(as)f(an)g(option.)-148 4229 y Fg(3)96 b(I)t Fh(S)t(S)t(U)t(E)33
b Fg(T)t Fh(R)t(A)q(C)t(K)t(E)t(R)-150 4399 y Fe(The)24
b(primary)g(goal)h(of)g(this)f(pr)o(oject)g(is,)g(in)h(essence,)e(to)i
(cr)o(eate)f(a)g(cr)o(eate)g(a)g(custom)g(issue)g(tracker)-6
b(,)25 b(personalized)e(for)j(the)e(veterinary)-150 4543
y(hospital.)k(The)h(bulk)g(of)h(the)f(r)o(equested)f(featur)o(es)g(for)
j(this)d(pr)o(oject)h(ar)o(e)f(in)i(tune)f(with)g(making)g(a)g(non-IT)g
(bug)g(or)h(featur)o(e)e(tracker)-6 b(.)-150 4688 y(The)31
b(featur)o(es)g(r)o(equested)g(ar)o(e)g(both)h(standar)o(d)f(issue)g
(tracker)g(featur)o(es)g(and)h(mor)o(e)f(specialized)g(items)g(as)g
(well.)h(Thus,)e(\002nding)i(a)-150 4832 y(framework)24
b(or)f(at)g(least)f(a)h(simple,)f(fr)o(eely)h(licensed)g(issue)f
(tracker)h(to)g(build)h(of)o(f)f(of)h(would)f(simplify)g(the)g
(development)g(of)g(the)g(bulk)-150 4976 y(of)g(the)f(featur)o(es)f
(and)h(r)o(educe)g(r)o(oom)g(for)h(err)o(or)-6 b(.)p
eop end
%%Page: 5 6
TeXDict begin 5 5 bop 4018 -296 a Fi(5)-150 -144 y Fd(3.1)79
b(T)-6 b(rello)-150 26 y Fe(T)f(r)o(ello)17 b(is)h(a)f(popular)g
(kanban)g(style)g(scr)o(um)h(team)f(management)g(application.)f(It)h
(is)h(curr)o(ently)f(owned)i(and)f(maintained)f(by)g(Atlassian,)-150
171 y(who)24 b(also)g(own)g(the)g(similar)f(softwar)o(e)g(JIRA,)g
(which)i(is)e(mor)o(e)h(technical)g(and)g(is)f(not)h(fr)o(ee.)g(T)-7
b(r)o(ello)23 b(allows)h(easy)f(\224whiteboar)o(d)g(style\224)-150
315 y(or)o(ganization)30 b(for)i(tasks,)d(and)i(can)g(easily)g(be)f
(applied)g(to)i(non-technical)f(uses.)f(T)-7 b(r)o(ello)30
b(also)h(has)f(a)h(r)o(obust)f(API)g(available)f(to)i(the)-150
459 y(public,)21 b(and)h(is)g(what)g(the)g(developers)f(use)g(for)i
(further)g(work)g(on)f(the)g(pr)o(oduct,)g(pr)o(oving)f(the)h(power)g
(of)h(the)f(API.)f(T)-7 b(r)o(ello's)21 b(interface)-150
603 y(is)i(easy)g(to)h(r)o(ead)f(and)h(navigate,)e(and)i(interaction)g
(is)f(simple)g(and)h(intuitive.)e(T)-7 b(r)o(ello)24
b(also)f(works)h(with)f(mobile)h(devices,)f(supporting)-150
748 y(most)f(modern)h(mobile)f(br)o(owsers)f(as)g(well)i(as)e
(desktop.[4])-150 1022 y Fd(3.2)79 b(Request)24 b(T)-6
b(rac)n(ker)-150 1192 y Fe(Request)21 b(T)-7 b(racker)h(,)21
b(made)h(by)g(Best)f(Practical,)g(is)h(an)g(issue)e(tracker)i(designed)
g(for)h(general)f(use,)f(instead)g(of)h(technical)g(users.)f(Request)
-150 1336 y(tracker)k(has)g(a)g(very)h(clean)f(interface,)g(with)h
(simple)e(messaging)g(and)i(includes)f(user)g(login)h(support)e(by)i
(default.)f(Request)f(T)-7 b(racker)-150 1481 y(is)21
b(an)g(entir)o(ely)g(open)g(sour)o(ce)f(pr)o(oject,)g(and)i(the)f
(community)g(and)g(developers)g(seem)f(to)i(be)f(quick)g(to)g(\002x)g
(discover)o(ed)h(bugs)e(or)i(issues.)-150 1625 y(Request)e(T)-7
b(racker)20 b(boasts)g(email)g(integration)h(and)g(allows)f(users)g(to)
h(interact)f(fully)h(with)g(the)g(system)e(thr)o(ough)i(email)f(only)-9
b(,)21 b(not)g(even)-150 1769 y(needing)i(to)f(open)g(the)g
(application)f(to)h(r)o(esolve)f(or)i(interact)f(with)g(tickets.[5])
-150 2043 y Fd(3.3)79 b(Man)o(ual)23 b(Issue)g(T)-6 b(rac)n(king)-150
2214 y Fe(This)23 b(option)h(involves)g(cr)o(eating)f(a)h(bar)o
(e-bones,)f(incr)o(edibly)i(simple)e(r)o(equest)g(tracker)h(in-house.)g
(This)g(option)g(would)g(have)g(exactly)-150 2358 y(the)h(featur)o(es)g
(desir)o(ed)g(and)h(would)g(integrate)f(the)h(easiest)e(with)h(the)h(r)
o(est)f(of)h(the)f(pr)o(oject,)g(with)g(the)h(caveat)e(of)i(taking)g(a)
f(signi\002cant)-150 2502 y(amount)c(of)h(time.)f(However)-6
b(,)21 b(when)g(parts)f(of)i(the)g(pr)o(oject)e(ar)o(e)h(still)g
(unknown,)g(this)g(is)g(guaranteed)g(to)g(be)g(the)g(most)g(\003uid)h
(option,)f(as)-150 2646 y(the)h(development)g(team)f(can)h(change)g(or)
h(customize)e(anything)h(they)g(want)f(at)h(any)g(time.)-150
2920 y Fd(3.4)79 b(Comparison)-150 3091 y Fe(Cr)o(eating)25
b(the)g(r)o(equest)f(tracker)h(manually)f(is)h(a)g(very)g(valid)g
(option,)g(as)f(a)h(major)g(pr)o(oblem)f(some)h(of)h(the)f(other)h
(issue)e(trackers)g(may)-150 3235 y(have)19 b(is)h(the)f(extent)g(of)i
(the)e(featur)o(es)g(they)g(have)h(that)f(ar)o(e)g(mostly)g(unneeded.)h
(T)-7 b(r)o(ello,)19 b(while)h(pr)o(obably)f(the)g(most)h(r)o(eliable)f
(and)g(one)h(of)-150 3379 y(the)j(easier)g(options)g(is)g(especially)f
(guilty)i(of)g(this,)e(as)h(users)g(would)h(har)o(dly)f(bene\002t)g(fr)
o(om)h(the)f(visual)f(style)h(of)h(a)f(boar)o(d,)g(and)h(tickets)-150
3523 y(being)g(open)g(and)g(unsecur)o(ed)g(may)g(pr)o(ove)f(to)i(be)e
(pr)o(oblematic.)g(Request)h(T)-7 b(racker)24 b(is)f(a)h(good)h(middle)
g(gr)o(ound,)g(as)e(it)h(is)g(not)g(bloated)-150 3668
y(with)e(unnecessary)f(featur)o(es,)g(but)g(does)i(not)f(r)o(equir)o(e)
g(a)f(custom)h(built)g(system.)-150 3942 y Fd(3.5)79
b(Selection)-150 4112 y Fe(Request)26 b(T)-7 b(racker)26
b(would)g(be)g(the)h(ideal)f(her)o(e.)g(It)g(contains)f(almost)h
(exactly)g(the)g(featur)o(es)f(the)h(client)h(is)f(looking)h(for)-6
b(,)27 b(and)f(has)g(bells)-150 4256 y(and)i(whistles)f(that)g(the)h
(users)f(might)h(appr)o(eciate)e(without)h(being)h(overwhelmed)g(by)g
(them.)g(T)-7 b(r)o(ello)27 b(is)h(much)f(too)i(bulky)-9
b(,)27 b(and)h(the)-150 4401 y(kanban)20 b(style)f(is)h(not)h(very)f
(applicable)f(in)i(this)f(case.)f(If)i(Request)e(T)-7
b(racker)20 b(can)h(be)f(integrated)g(with)g(what)g(the)h(client)f
(wishes,)g(or)h(built)-150 4545 y(of)o(f)27 b(of)f(into)g(a)g(new)g
(application,)f(this)g(would)h(give)g(the)g(users)f(the)h(most)f
(functionality)h(while)h(r)o(educing)f(the)g(risk)f(of)i(human)e(err)o
(or)-150 4689 y(and)d(mor)o(e)g(bugs)g(that)f(would)i(be)e(inher)o(ent)
h(in)h(manually)e(cr)o(eating)g(the)h(issue)f(tracking.)-148
4988 y Fg(4)96 b(N)t Fh(O)q(T)t(I)t(FI)t(C)t(A)m(T)t(I)t(O)5
b(N)g(S)-150 5158 y Fe(The)19 b(client)h(has)f(speci\002cally)f(r)o
(equested)h(smartphone)g(noti\002cations)g(when)h(notable)f(activity)f
(takes)h(place)g(r)o(elated)g(to)g(a)h(speci\002c)f(user)-6
b(.)-150 5302 y(Users)19 b(should)i(be)f(able)g(to)g(be)g(alerted)g(to)
h(any)f(activity)f(r)o(elated)h(to)h(their)f(user)g(pr)o(o\002le)g(or)h
(r)o(ole)f(on)h(their)f(smartphone,)g(should)g(they)g(so)-150
5447 y(wish.)e(The)g(client)g(has)g(not)h(speci\002ed)e(how)i(this)f
(noti\002cation)h(is)f(to)g(take)g(place,)f(and)i(so)f(could)h(be)f(up)
g(to)g(which)h(technology)g(is)f(chosen.)p eop end
%%Page: 6 7
TeXDict begin 6 6 bop 4018 -296 a Fi(6)-150 -144 y Fe(The)28
b(initial)h(idea)g(for)h(noti\002cations,)e(though)h(alternatives)e
(wer)o(e)i(consider)o(ed,)g(was)f(using)h(SMS,)e(as)i(it)f(does)h(not)h
(depend)f(on)g(wi\002)-150 0 y(connection,)f(and)g(anyone)f(with)h(a)f
(functioning)h(phone)g(would)g(have)f(the)g(ability)g(to)h(r)o(eceive)f
(such)g(a)h(noti\002cation,)f(even)g(without)-150 145
y(a)j(smart)g(phone.)g(Push)f(noti\002cations,)h(while)g(pr)o(etty)g
(and)g(useful,)g(could)h(be)f(impractical)g(or)g(impossible)g(as)f(the)
h(ConnectBasket)-150 289 y(softwar)o(e)22 b(will)g(be)g(a)f(web)h
(application)f(rather)h(than)g(a)g(native)f(mobile)h(application.)-150
563 y Fd(4.1)79 b(T)-5 b(wilio)-150 733 y Fe(The)19 b(T)-7
b(willio)18 b(tool)i(allows)e(an)h(application)f(to)h(send)g(SMS)f
(messages)f(r)o(egar)o(dless)h(of)h(pr)o(ovider)g(to)g(a)g(user)-6
b(,)18 b(among)h(other)h(phone)f(r)o(elated)-150 878
y(featur)o(es)28 b(such)h(as)f(pr)o(ogrammable)g(calls)g(and)i(call)e
(r)o(edundancy)i(allowing)f(for)h(mor)o(e)f(r)o(eliable)f(calls)h(and)g
(messaging.)f(T)-7 b(wilio)29 b(has)-150 1022 y(a)h(nice)h(looking)g
(interface)f(and)h(easy)f(to)g(understand)g(setup,)f(and)i(of)o(fers)f
(unique)h(featur)o(es)e(like)h(voice)h(call)f(support)g(and)g(r)o
(obust)-150 1166 y(message)d(quality)i(of)g(life)h(impr)o(ovements)d
(like)i(sticky)f(sender)h(and)g(MMS)f(support.)g(Pricing)h(for)h(T)-7
b(wilio)29 b(varies,)e(and)i(while)g(they)-150 1310 y(of)o(fer)23
b(fr)o(ee)f(API)f(keys)h(for)h(limited)f(use,)g(many)f(featur)o(es)g
(even)h(for)h(small)e(uses)g(ar)o(e)h(not)g(fr)o(ee.[6])-150
1585 y Fd(4.2)79 b(Ne)o(xmo)-150 1755 y Fe(Nexmo,)29
b(r)o(ecently)h(acquir)o(ed)g(by)f(V)-9 b(onage,)30 b(boasts)f(all)g
(of)i(the)e(featur)o(es)g(one)h(could)g(expect)f(fr)o(om)i(a)e(CPaaS)f
(tool.)i(It)g(allows)f(a)h(user)-150 1899 y(to)i(send)g(messages)e(thr)
o(ough)i(most)g(pr)o(oviders)g(and)g(includes)g(useful)f(functions)h
(in)h(the)e(API)h(for)h(number)e(scr)o(eening,)h(allowing)-150
2043 y(a)d(service)g(to)g(catch)g(spam)g(or)g(malicious)g(numbers)g
(befor)o(e)g(devoting)h(r)o(esour)o(ces)e(to)h(them.)g(Nexmo)g(also)g
(of)o(fers)h(a)f(r)o(eal-time)f(chat)-150 2188 y(function)h(to)g
(interact)f(with)h(users)f(should)g(such)g(a)h(situation)e(be)i(desir)o
(ed.)f(Nexmo)h(bene\002ts)e(fr)o(om)i(the)g(r)o(esour)o(ces)e(of)i
(their)g(par)o(ent)-150 2332 y(company)-9 b(,)22 b(able)g(to)h(operate)
f(in)h(80)e(countries,)i(supporting)e(many)h(popular)g(chat)g(systems,)
f(and)i(of)o(fers)g(fr)o(ee)f(inbound)h(texts.)f(Pricing)-150
2476 y(is)g(on)g(a)g(per)o(-text)f(basis,)g(but)g(does)h(not)h(contain)
f(a)g(fr)o(ee)g(trial)g(for)h(most)e(featur)o(es.[7])-150
2750 y Fd(4.3)79 b(Man)o(ual)23 b(Email)-150 2920 y Fe(This)f(option)g
(for)o(goes)h(the)f(external)g(tools)g(and)h(the)f(use)g(of)h(SMS)f
(entir)o(ely)-9 b(.)22 b(Most)g(email)g(pr)o(oviders)g(allow)g(for)h
(drafting)g(and)g(sending)-150 3065 y(of)o(f)29 b(a)g(simple)f(email)g
(to)h(a)g(tar)o(get)e(addr)o(ess.)h(While)h(this)g(option)g(would)g
(not)g(dir)o(ectly)g(solve)f(the)h(issue)f(of)h(mobile)g
(noti\002cations,)f(it)-150 3209 y(could)d(be)e(used)h(to)g(take)g
(advantage)f(of)h(an)g(existing)f(featur)o(e)h(most)f(smartphones)g
(have,)g(email)h(noti\002cations.)f(Noti\002cations)g(could)-150
3353 y(be)h(deliver)o(ed)h(by)f(the)g(user)6 b('s)23
b(email)h(application,)f(giving)h(the)g(user)g(mor)o(e)g(contr)o(ol)h
(over)f(when)h(or)g(what)f(noti\002cations)f(they)i(would)-150
3497 y(like)d(to)g(see,)g(and)g(also)g(should)g(be)g(fr)o(ee.)-150
3772 y Fd(4.4)79 b(Comparison)-150 3942 y Fe(W)l(ithout)23
b(the)h(option)g(of)g(push)f(noti\002cations,)g(which)h(would)g(be)g
(ideal,)f(pricing)h(and)g(immediacy)g(ar)o(e)f(the)g(most)h(important)f
(things.)-150 4086 y(T)-7 b(wilio)35 b(and)g(Nexmo)g(ar)o(e)g(rivals)f
(in)h(the)g(CPaaS)f(industry)-9 b(,)35 b(and)g(have)g(similar)f
(pricing)i(plans)e(that)g(compete)h(with)g(each)g(other)-6
b(.)-150 4230 y(However)g(,)22 b(neither)h(of)g(them)f(ar)o(e)g(fr)o
(ee)h(for)g(the)g(purposes)d(of)k(this)e(pr)o(oject,)f(as)h(both)g
(lock)h(messaging)e(tools)i(behind)f(a)g(\224pay)g(per)g(text\224)-150
4375 y(plan.)29 b(Emailing)h(is)g(fr)o(ee)g(and)g(may)g(likely)g(even)f
(be)h(easier)f(than)h(the)g(other)g(two)g(to)g(use,)f(but)h(lacks)f
(the)h(immediacy)g(that)f(a)h(SMS)-150 4519 y(pr)o(ovides)21
b(and)i(also)e(may)h(not)g(be)g(r)o(eceived)g(if)h(the)f(user)f(lacks)h
(a)g(wi\002)g(connection.[8])-150 4793 y Fd(4.5)79 b(Selection)-150
4963 y Fe(Manual)23 b(Emailing)h(is)f(pr)o(obably)g(the)h(best)f
(choice)h(her)o(e.)g(While)g(it)g(is)f(possible)g(that)g(the)h(client)g
(or)g(a)g(member)f(of)i(the)e(college)i(would)-150 5108
y(be)d(willing)h(to)g(pay)f(for)h(either)g(T)-7 b(willio)23
b(or)g(Nexmo,)f(the)g(featur)o(es)g(they)g(of)o(fer)i(ar)o(e)e
(overkill)h(for)g(this)f(pr)o(oject,)g(and)h(these)f(noti\002cations)
-150 5252 y(may)g(not)g(even)g(be)g(used)g(by)g(many)g(of)h(the)f
(users.)g(Those)f(that)h(do,)h(however)-6 b(,)22 b(would)h(likely)f
(not)h(appr)o(eciate)d(texts)h(every)h(time)g(ther)o(e)-150
5396 y(is)g(any)g(activity)f(on)h(a)g(ticket.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
