%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: technology_review.dvi
%%CreationDate: Tue Nov 21 11:21:51 2017
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold NimbusSanL-Bold
%%+ NimbusSanL-Regu NimbusSanL-ReguItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter technology_review.dvi -o
%+ technology_review.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.11.21:1121
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD3F78D45115A0F0D564DABAC8AEC177C91C2946D5B9FD8DECF1E26
FAE568E3CEE9DF3897D4256F3134B7F3A134993536AB81B2E45EF42240778A79
4A4F10E1AAF04B24CEFDB78D3C62F09DB1789801729BCF2F196EBD7415B504C1
EB30A98240A5DBBAD1FAD5AFA9BD1B7B08ED668CB7AE8D8FD27767696AF2A888
D2012CD5E72B92E80B1EB0FAC4FFE1122AC115B0E9987359D656AB8E6CE48266
18615F0F6BFA0F998FBA3EBC109801F114AC328677F7767018909002301A0AFE
9D416B32570E543CB79A87ABE184590223348E51452B505DD0522F8F04594611
58E05FF7F59AE40665B1C9C4B100BE8334ABEAB252698E633408FF890A429693
98178E8E9086980397402BA2F164CAFB78E4914D224B57B06250F720769FD0F3
D31C6BFE42F3BFB8ADAB12E05085C22882274BCE02E58CCB2DD80A97CA2CC3C9
71D049B3CCA668E5E7DFC7B15FBD608B0262F7CA566AF899DB068706113FD771
A03C633FB7CC59DC52C83F609BB496317EEC7597BC2C48552E6F3E76B34C04A2
1773E2EB42020B9DA1C53FA40FE42FA89CAFDDE49CDBAC5D23D5D91FFF4EE43C
79B2D1BE3072D6898B2707243F409731FFDF5CC59DD39D8D40759EE9B3BED754
A63D9D962E225BE4CDDBFCD51A4E1260CFFE758ECD59EAE9ED878D047D2E7467
A552F704EBEAF9F9AF6A649DD0F7E5D013A694453D99349FC4F65130127A3BE6
7847808336771B8093FF5CC9FE8D9AD16D04DE108727FD7C001FC630378E0843
451E4D9840AF87F800D3B6E0248AC51AE90769453DD157B162EC914D673AA42D
3DC00BB1E2FA5671C1DA26CAC3FCFFE7C6728D9E330928C1E5FF577B80FE1C82
074518D7466BB2B91FDE11773B6435A5C58CB39775D460226F20388BBF95B334
2044FBBAD6904EBBD089B189203DF723F44B7870557B23B9D45CF28667266402
E11621A5A623CAAD1FA80328613C1D1030F6CC9B504E1FFFCCA352431A0D5BFC
FCFAD30F86768E3BEC5E192ACC1FBF937035DB4920F0B8ECF0E0617987E8E672
F4865524FCC099290D716C9C1BEB9A81479EF18DA2237CD71F4CF359B4AE356D
1DB317D48BFC971B79387EB20F148A6D598FF2805240F62B2393161B2701068C
DB309F3DB39CA8CF2A2177502BC2879708341E84D32AF03079C8A53CFF146BC9
BA85094B7AD0D23F47F26B6BE853545FBE99F703A6FFABEEC41B415182F40F52
3E462687AE0F3B838C3B4527EA4929E4C6E6FE9D66123C78D762FDC1622DF8D7
6298C73296E42990B31A07577CB8A9AB3E9D95324248249AEB37B5B9678729BE
B61E702A78D3660E42732DC0CA8E68B4823E482FC5A3EBF6F30C1D2EDC39FF4D
BC037F2C19602304394C529C4783A7ACA621BB7A2850B9D40BF976BB3F13781C
6F65C0854708346913A8E0C73C256A2B140AC79767C883413632D88DE8FFE4EF
7005FAA7AF982C172A2E03F8F09397A487334FDE106450D2E633583994419B27
566260F6ED768BD87C1879FD06ADB7C99B976EE2C88AF259C11067EF1272CE4D
E2AD8E509B7F1E51DC0EA1314D41EC6841074A8E0DC7DF3BD0BD84389B4D97DF
A7B1024E22917F39E015E59EC31B3EE964CD0E9A173DFE09A8210577042DBF4B
F45B9D80E84C9200B574CA2EFC9F6DDE8FFC6DFB3D21373B5766BAB99BF06D24
1D07496805F58E624078BCECC9384B0D14AF8EF62A0A7347F6A3ABAEF099DB30
85D6BACC2E900088AD6841C7D22C0071F5BF6F6786D9CFC2BC8E99CD9A8FE88E
81759A3C57F31A1B749A92CE78B4069D631047678177F03AD7B8BB595B3A9549
660A19A1E6464D99B6F77692F226175A38CF69B612B32BC4A432F6142FC8CB29
49498A322E6C2DD254985D1DED29E1B72F8EF51ACA4F77E2C0A459FA2AEDE315
E9364411DBD79B6FDA788B2A4A0EE7735795304A6430A70EC98E981E7921962D
745036951CBEAC78234AB640F5B4E5B6787D5E769003941B363A7D885B414B59
1354D461B2681AAC169B271FC609982B9E69DBC55E6DD283F1D3A52C5BF591B0
A9B27B9B609B64D559B0F0A75EE969665E34962ECA8E4E071F214E6FF63A3860
6D791E652BA9425D440C556AF480C03BFCB416F0F3C758E8D4A22604726AE9F6
AF49B864CD07DF756EDB47A8F71C3BE0DC673E8C2374CD62184F41224E08003A
D66D4825C650D6B995593B67BB57B6D5F857BD4C118AE533F46E819D11CDE003
14D4E0DF2FB49F8BA556DB5633EFC8C67C61E95290E11A6BEC7C285F0092AD48
ADCAADDFE69C00E187DFEBA20450BF2D7051B1C5C921293446A024AFFA9AC0A9
FBE3771E8C46BD42E14DA219B27B514F98284BEAC44FBAFA2ED3C350AC0C64B8
24E7E38C93136CBEDE51AA6CF0186BC094CEC2F97E5005FCED9FFC797E6207C1
BEFACA6E743770557EDCAAE9A2E23ADE6D0B92057A04BE4F2F53E89DF89C13B3
0A85ABF31B62E3BE1E806C7855509CD57489F07108D995887AEA9D20B3C1E85B
4C766F93041FAA0DBB196B0A220B8E3A9FCA62D47023463DD07C26FF1769A4C8
A2518CFEEC51A393401A2C3E8EABE227B936313AAFB000437E042266D191D963
D97E95A2589E5DF9D6FADD368A715AC0D3B7A1ECFC649A61E39641465400B651
11C0CD77AC6662DF2F9C524527DD20505648123C0BBD2C7DB1F1CC74B4A64602
A7207A5E4B76E2E09A64136BA119E4F7B9DC42002C4C553EB9111573C1FFCC36
79ADC9A0298869ACCAC8EC6AE482EE93B3A900D0164240FB570FE1D7CF1A12D1
6A4EE7037A492C6E299BEFCE25597AE756DA5CA9D1FDA61E88C998834DCE29CD
3505992AD7680BD4723D09BF281CCA25DD384DCDD067444272BD8E263B7E189B
065832EDFE86D243B72B3E700F97E1451C4DA6A0946805D0E9BEA948830E6987
404A4ABB37B2BD32CF9286D250ED22087A14C454EDD9570EC1EF7BFE2DA4B5BE
5CFF57FD2CAC717013E61F8FF3A115780B4E2257FBAC3970B2B20819C87E85D8
16CA5EBC25D24A2FA55862DD786E2770228B5319E19372F8A8F55F7AE5824893
E3F2A4776EB709ABE1ECB515BA32E9A537E4183EA50C25F204C393931F99F40B
7D04BA3D5612F7522AACABC814AA2DAD380B69A047B8DA4F052F1D50AA8767E4
FAA063A02F0FEA69C9063EA1D43063342040C1351D1BAF3C46AC27CE1449920F
9A073DE8A77D3E67E54011D9DCF8C70A6E4AF6B269BAE0CA28563B02CAB57B9D
C5BF98B15B08D0B6E2FD051D5AA7DF9BCDE600EF35D20AE7CE47AE35A156DDAD
111959E0AF61865A3684B6E0FDE48DD0EC6EAC821F83722848601E71F3318F41
061465C24DAFD54593AE7614981A0678BB2138370763770C3BF284B76390DD9A
A7963A47EF2E39A813FC4891B49EF46BB96E974FC51702C2C33127357E9CE2E0
925A350676B2C4890EF433B6612A7C8D7CD3B041C16FD67CD878035F25FFDF86
EF1ECB8BE2E564A375F6820E9117E037C77F024BCECA515BD60076098A654CAE
2B7D54F8A7C1B4C40FFDAC0040D9EB9C436FDF8904A4BAC6FA1D90B17A57940B
DB45DBD0D04A282E37DDCC88E6B3E92C8F04DB2D952FF423341BC32B742E2379
30B6498C50F36EC39D1DFCE54BBBECB23FC1C7CDCA7D5229975EB19FBEAB936A
5CD8DDFED8FA29EF15E654020F34D2E4564D557FF2F59C5E6A27F6FA044B2856
E5573D30CBD27D95C4B672323894D5B24CDC33D18F40332E781289C284BDF5D1
E26FD6A5236B90CBA876AD485BAE73FA5299A6343F5838C666B61470DA712B94
7316AFA38D30B70C958A3C0D7CB61535E56121B290A62E6F51A1FA52F08BAE1D
E76D4CEDF6C1C609350E18E00FD0752A640EAB1BDC36EBE59576BE157F0840F3
EF427451AA0BD9CA1FCD7D86C31D12776C4CAA93CEDE2B7FF63FC9A763254F24
95AD591D39A5CA4B4ACE447ACF9876496B13818E067D3EF1DBCB5E4FC89568B3
5A3AA86DF0E2354CCF5C5EF4C9F3DF525CF8B66F3DBC506B313D823947D0051F
18B5373B7CA0A6537478517E6456B0EBD937AE2B584ED999960282C49EE6ACF0
944E02A74E923BA1B8451EB8C8663FBE2620AF8DCDED6153BF5AE98A02993C18
F5228D9C3519B73CDA023468630AF059DB826E567081D625B60EE20D1141AE2C
28F3C3D62F90C2221D7A8E39782ACB8A908C5E8C355DAB38E029492A3761D716
5BB086AF5244AC88A48C5DEF86D09D48A6D111C1B4DDED2D1718F457722DACE7
A51B93C9AF2FD3107EB16E658A5ED2AD984AB22B92C60EBC22673030FCD12153
EF75A00DC20A649218FAF36BF07045D62BDAC3AB80DB4844F2C3DDA83E0D3865
ABAEBE8A6A325CEC720FF99651B8EA2DB2812E7FCDBA672C3E6A26B4F69672BE
3616C49C07BEDA6A23C990FEE5DED4CB035948752BD90CF4641D3A1AB90C8C47
A8A338C4F7B3F6AF8E6FC439F43CFD47832A28C93F537B8F053390E2ED53A475
F388C614331792901E33FAB46F16E05C447E85BFB421A319D7DE21E91DC93BC4
29BEFF450B6951F120944F679A2FD2A0910F421C621232A49DE26F3F7182BDDA
A77C93DA2ED4351666F90CC1B24EEFC1D47A92BB56F0352BA829E167AB5A5F7D
6C95E27EE33AAFA730E8E2000E51275CD0A783ADE845BF88E18DC3731E91453A
73CEB92BC6CFDA2C4C8749702D9BB011C7D04A81D8A671BA39880E2C98150B2A
4EDBF125CC1C30D674BEEF419BE8E5B70A0023068437AF28BE161CF8FAA12AD8
73C74850FC8B69D15E90A59C5AD07CA7E3A6500E4D89B09DD5563FEF3467B4DF
7732AD755319FF7DFF97FA9E86D7C5F02F2250BEA09653B74753FD7BB4C479A5
9BAA3A105282DF6A35151D7C34EEEAB5D91E09884555A1C85E26A087B2C9397B
1FFE3252825E52935EA24E96E00E5F95EBCECE33C86CCB5C80EE1E1AA94D1F8C
50639747D4FC9092E14B0BA7554EBADBDDBD21A64F1A8AD69F8E5C9750C4C99B
979F631BD3814EF639E5FC79015FA7625F2D535767C7FCC48150F1DFEB71B17A
B6126C864AD7A343F782B071F59BB055F151B8486E0E1E5D62EE921BA1C11EEC
B26A0473B30C8E4A400571DAB6F722080B1908C5200EEE87CC6C676DA85B3AC7
8EB1619EA7E09A17E7892CC8930B6C0481EDF2724FDE4A5B2FAB1B41D31D0D0C
E89A319CD781504EA2CCCCE5C888A572A7F9D3FDFB32501CFDD650E0C997B175
48D1A3E777E280AFD236FE46EBAE04002C119C74A5EF039C8EC4523BAB1D12DE
774C78A0BAF50693838109D0DEAEA56974B27AC623150AAB3E8287C307F553A7
69F6124346CD79B5F21694D87989110E575F71214886E42C0E595681980B7728
5AF5BCAF6C0D9233E1D1F61B549704DFF82BF14931B22B465D1EA917B10B32ED
08E70482F0658D21297DDB8E781B16E78E2D2932F4590EDA5DF4A1E25783E9B5
CDCE5F2B1CA7379A8627F62C3D658462322630C2D4515FA048047C0B78FD1C24
4BB68376F4A6B72B91DCC5B8A7A8C3B3E175B1D22F687066179B05F4EB955747
2998F574AF99DF6CF36D15257F758B5D150CB3584CB2DD40E8B29EF1F8CD6F62
21B5CBB72AFCAEB3130AB232E69939AE5D6FC720EE76C2804AF5DCA6A0F79002
9D97FB8286992F49CD0A2D2644A1F10D20FE170CA56A6688B2F97A82DA55BEEF
A17485FC2D8977D3D8466485E76E3FB313B37C455191E057F5D6E69C678E05F8
68C2ED17BD1FE69671678BA5B3A01015244779FDED72256089CF8C3FB1769452
632D38F7E2EF4017C6AFC828B9D4E6FA617AA5E4D5A49724B7C251841AC84485
E28084F09311819C67296CB735C41F862CECCABBFFEBF0F70C0EDD576583A6F6
192952FD53DF52FBB756C7D21AAFA482B4A7DD0E27D8ABC8583B1FB0BC61C722
E20FD71907F2CF57CAD8667DFD674256D084155932533218338E38694FE57394
6F9445D28DEC20233EC224762E467D2C62B3B23045F09209436C7EAAA7F093ED
8AD1FF483D54921DC59103E42C36B213F9C7704512110EB66A0EA595C5436389
55925AB08B3BEAC8E02C097DF4B2A85C797DE5E7C25DD24D9889E0CA5E640AA3
6E6BE2E5186292AE697DD80428CAEB99606BC079F3A0B8B5F70D97A0E9B896DB
F8B707129C8244F42FD757CE24139474F1DC187D03B7892E8A8974097A0F3E30
FFE8EA6D1A87561E6E4CD9500856589AAE84BDB3DCE4EBE2C249E7CB351ECBF0
AB3D57FC926C63C7418B4BCFC127CCAA55742540433187CDE5C0831925ABCAAF
29E069A1C60A2F0B1EA9B65541298379A98F8FC8169F6CA53AC196D0D29564C5
44DBFCE1ADA35F64393E93E3AE7E97E9BDD216C1D27D4C68E3F319A59BD87CFD
884D20698E6DC6477B2D359A05F39571E4B523AE3C895912EA1E6C6053599475
4BC83945F39AEF223DB2AC8055C6553DD7903A49977230F1F85044E95BF43F4C
C39C1712E057311DF474799C7449FA8F5749DBB7A7355AD0AB8AB3CFD09DA194
14BDC43AA6155E2867706E51CB96E8561C64782374B5BB113B860B56CB0362D3
55933650EC8C92E3CD1667F35F9666BF24818566F026E25F3508C48A8BB31377
DE3B1B911616D9D83BD9B3617334857EA92C2DB592CF08B3DE2FF46BAC71CB65
CA8AD5869CC9FD7C4C194AE8D5D20A780293D479FFD5CAF4D703926F1BA042CB
A121403FACE3239AD76BEED158DB3BE2DC4BA1DC216B2D085F251E51A80D32A6
E6302E20A88B91EAC2D1F8961FBBD2560C2174032BB57DF31DAABB7DE1EBAE20
A38DC804C23244D5045F576D9C446DD56ECEEA07228F0B0DD14607112ED9EF0E
112CC860A42D5FB50529EA6CE284EDCD95DEB8969FD1ED07778DE2F62958FF40
9D37332AA4BA88CFB197C0A40AB5B4758AF32EE889194AB0C6FCBE00A4E85371
9DDDB1DA9475D34528238F35683C726119CC760DD7A81CDDA23EB58FAEDF9409
71FEA8BCF0734157F326A0C9AC332202DFEB04EBAA1CC102BE870E086BFFDB8F
DE34A307FD04BE442CCD16DE83E99B0F4A87D8D42B5749D9766AC956F58B5B0B
4F975E059C972EE14D1E7FFE556472E7DEBAFE008D7367459352EAD6B4A2A6E5
02E9B50D6C82C0B57F6B0404398E6DB1E7C694EF5199C717C8C05CC414EE0EDE
65BD9EE02D6D796E9C6D5613EE1854FFF474539ECAEBF49F8132D20817ACC970
06A17CC574E6D02180555C3095FD9E572AB7D0C13C6578611E8AD99341A3E576
154F231234B648B32BA57CFCEAB6A6E3A6D00C1C9B656A24515D104D18F15154
34EF6D0EE3E54A03B90556DB2C486CB633041D98B8D792DA3C3E096477F410E7
A303DF077BBD256FE9B411F0576E73726CC811FABB2D296C5D616001CD8F00AC
3022DC1AE865D0840524EABFDD96C37AD28AF1C3C5F56B4C0BE1F118D054A2F5
DC5F512B21F0518B9E3260EB81496D3BAA3ABFF06637586AF518565554C4D7B7
A625C1350893BF0B820A95DE4DC41C544552F707ADAFE8D8460FC48F3329A04F
F9BCCC871F588436821AF7646E0A5B0894537524606711423149D9F31063C636
0DEF03AB0E82C608AB03CFF2B0BBA26006FD498F7B8A680D209F321D7FA34172
CB07D301C31338A30B2DEEC39CFE18B2F8F9245CD2F5FDA66CC7875CEC5973F9
5A018C1688918DAF16B548189AD8068A5D55FC5333A0AFFC7770240FD125D4EF
D6852E13BA39C74DE51A1513B2EFDFAE341E5FFF146C3A78D480FBB740B15F02
D4717E3C16139F826C96D7322C7CB5DFC496C4DD4405547DCCEC62D67F7D04ED
14BFB32D71C74497E0AD8568753C04F9E8C4E3E41B1B7331E5168F4A69F1FAB4
8FC852CE7C53C0FAFBCC5F6542BA37152F2C34EF89C4C892A9E4F0A041247DF4
FBD194FC6D1ED8F9E0AC14D1C5CA1FEE4603A58DA94773BC1AA35B31C45EA8B7
525DAAFF7B70A5414E182FB7D57AEE1526874BE44B8F5E92D2F88DC8BDB5CF53
E44C832B9BF0E529D844262D01ACFE1A26E6C7F496EF2D2E5A6DE68916EAE505
776D90A2D1A68B51C0B83856E9927C936DF7FE8A81A0259809EE9F92F7666047
2C5BA5E78AB435FAC919EEEF9BB535B3BB2DF00419F59E7D9B9BA37245CA14A5
41F77604ADE5CA870961C65D9EE861F61D0090301FE39015FD53827C84050FAC
E29DC5A593B40E732D3FB96A73D1DFEC96B8B48C55D6D0B9CDAD690F8976A671
885087F49909A6399C1AC4D093AE96F31557A70C45422D1795581A3D76B9F387
D719B0005323B20AD59BD541AF29CA3946912402BBAA2BEE4DAF43002692041C
4FF7B281B04DC1C56AED7E3E83B767E4E968204B3BAAD1969883FC2C330B4F75
B2FB0D5A087CE736B14E6BB73F491976F265C098A20D5BCBECB3BDD3E0907D3E
933A0341823727FC16B9DA0C6C6DDE7E4D3BB7B830AC7CFB155A9C9190E52DFA
CB6495547922C9A783B786A3D5D0C5AC21EE34434B5EB5B995BFC4DA81D143F1
6110B9892219EA62014336DFD7D79CA86DC60A2CCED7313934648F7B62B09979
398052331F5EC24981C310D03C6340EF20A6AA719A576FBC7F0793492CA7BEF0
6D439417455C5DF4EBD8ECACB63331266D46E6D7F7EA561AB9F7EB03301D7B3B
E29063F022AEC92E52EF84F8688C860B050E0812114C2AC669D9B29B5D11AF2E
820DAF8348E3DE2CCEE6BADA0AB5872EEBC01DC90D8792BB447F2171E48432BB
AB96BED8C07A9CB1B755EC5E1B8A02D40FCF2DA924BF5B620DE38F5002F02D3E
7B31D9F386F774FFBC77AE08490A2C3AA8A9E31BC80848182189DC0F82F21CD0
C6E32773E3FA0A63C03DB348ABE792AF9648FAC371F4AB8C8393F296A63643BE
3A12E486B6E5B6D3E679A7B5A8CC8D2229A01DD3B6D30C54086625A129417765
AF2FB181CFB8B23F517368B7FAACC8368171CB3D67603663FD812CACBC72A2E2
D5CE9E8CE989C37F72E489ECA5AC88FEB3F4E9236CCACC568FD3C6321B99E7FD
62962C1775B1FA42E81FD60DC2EBD6D1F34285D3FFC8A29E97DC693C36E979D3
7D30D33E149AC29CCF86082B8AC66776AA4A613B77152BA69D8B0AAF3741D6C3
BB8A7A743B5130600F7A9EBF2FD426349C40750E67098665B3E230CCB32015F3
8908E4B20F2D83CBB78FDB6CD1FAFBC688CE7026803F091EB88CE191081DE21A
F12C1240C57540E73362D1F9A0904086EBB4A9E7C9D1BB679CBABE49EAAE671A
FE6FC58C092FF42C6D177A3E42525D290C4D9A6C64A43245F40EB62410681E61
0001264311840F91FAF4C4C43E5E8E02E1321349FCF43C2543AF9C4D1DBA6462
B88F8ADEF6A2F7DDE7A2AA7A5629DB44B919E2A7FADA3984CDF065D65E460535
6F5DB4ED03CADFBC4EAE3A07DD9BACA2C23AF631DCAAB68514DD570C325B5667
E5B46B778EA3CA655ECB6248982D43CF1487FF79D9763AE381D94DB00C64D515
0604969CD6B9C3E7748C9C093FF36C008CE70291990C201FA4DDF49EE7703D9D
FE30FC3F11D35789E6130614BD1301F1248952EEC7DA08433612F9747925B278
F9635F04EF3EDD5642DD0A220076A1D820075A2EBEFDEF19D1BFB839EB2D21E2
2B0068557EDD7E8F34C75470C6307544B6FEDA40136A0FC19959DF9D1404A2EB
ACF2575A2F30C6DF5FA2097AF77F579DA4E3AB7105C5B4C77C17370B26B9202E
70FDBB79E2F1D42FFB8C7AAE9E7CA25ACFF49B3E7509D2D29D0449BC7CFFD9CF
2413AE3068A03ACCC242DAFF02379B2BECB9CEC523E107F43CF0088B45FC024C
331274204C1E9595CA012D7174F75396E978EEB7BCB638D463F45D4F460CD581
94330D0FA2B075EEB8999AE47C52553CCC6465A318C7B26AB146C815D4C840AD
14A936885F8A2AD39A4249EAC07ABB4A2C47A7E990DFFAA871B1EB483604B6B6
95C88C555CC71F6A231446A9555339E79EBD2EEDF95AB3DCCC975AFFBBBB3AB3
A16D5585F6B937DFE5ADC3891BAFBC347344B9C64331F1C027E69B233A6BC54D
F3A9D8301606D669A756AD707F40B5E4157B29A1B7032F86ACBD88F88A6870D2
712521238F74278EA7C87F699E28F04FA753876BD921CC9830D768AF93535893
4908FF78EC89C3C5BB170FDAE7922D97BF0BCEDAEBBDA6BE7764CAC582CEA8DF
93FCFBEBC586BCB872E666A060E4D9241802B7288B90644CB6F9CBD3D6037A86
83539060782AFAC56389CA5AAA2F25BCDC92F98CFF9F3D5881095B96FBB30E83
372BE7151445216C26286A1459620A95758C87D68C62C2E180058433952B6985
25612082298F0E6E36968C8EEEE9E4F39F192B2A2CD3C1D603EE3527EF55A975
94DF3F6AAFDE81F65C9BB3C11F8E1406D0B11F7745CB40396BDD78BAE6679AA5
D0433A8473690787DF01663308A8F9E2CD0B91088F3DE113E86442C14C4F1692
6330A6CF2F05717B6A6DA0AA29EA8B96B90DE0CA87BD2E3FE287FF27B773081D
6642B2722A5D383DC3DE34556BE4A7005D97DCC398937149ABFCBE4A62B395B1
0AC189665735038CC22BE54D3F0330D6D4D62C14107B5BBB1A33FE2D6BAFC4BB
81A046D60B90189993C3D25705AC51622700E0E6AD7ADD6E0BE703E27E41B39B
AE86D5ABFB951A678B9FD0C56CE5552617C2B4E2F877A88F042931CAF75CAB6E
3BBCF090EC7CC3A93FB2A9E6996EA36D92DBD2D70B17284CE3F6FA6E71C3E1C5
8F8F3B1C647F00D147F33C89E76E4E8816F141CEE95FC8726ADC87E473C1A8E9
75719C13D0B931DD6FA82A5526DB59CB617F9DBA0ACB6E42D82C460F5522FF5D
4604DE8BF1664BE2611277299656A37ED83D4DA7FB85DB7526FBD9A0152EF4B0
1165E5F2EE5834F2C2F487CA8BC069E60E68EBF0290AFF7D77E2813E25B30ED6
B92B62F1651CB12743FBA7F80BDFF45A5C9C3240CB047CC23B3FB4762E5742B4
88416118607F8BFA186DC0A15E5A7A95BCA716EEB7D089FC50CC4816213191D4
EDF853F6D6ADFF67656FBABCA9841C59C936C9825E30E3ED35C779D61A907F55
CD9DF168F864F5F613DCE3811C534CC0AB36283E654327D81B9E131EC1F22636
5C749CE68B2F2F57DC0BEB0CD3ACC12BE72EBE063CEC68FFB3A8516B9A52FF96
083C1344502AB5FB46ABCE1F57F017B0A8CD28FCFD7A8F18FD4AE0210D6C2C06
62DEA4E1A01227978C9ABF2CA3F6BF90933A4F2969C25857EBD7AF81C215B00A
4E583588848418D342A1D4D0259818FD06ED79AA77C59E4B75B31EB720411FC0
13394E9A848702BF442D0F70FD30A1DF211A3795A9C98D8732EBC389BB647B90
4716794C21725D8F5B0A803AF98792D9FC9343C144A726004B8A4073368FEDC2
CB48F1DF34BF6336DE606FC20C11895198870B881BBFE2DBD53C0DF89B963359
55749D247EC067E191DE88CFD0A4F1DD464E25453351B08A09704D45B259D7F8
AD8F8A00E390D5F6F47CE1FB3E1E056247EAD510229AF29335A22D1843427153
A3ACBB96FC713CF30ABAE4631847CC2BEBEC083CF0C05C0E30F0B34457AD4530
EE68EB7338E7A3A97D8DF49C859723FC6BB43B7CAC8106C77D205785F3B25092
8C75E230CC48F8B90151A7578051855E379F4A7EDE97DBB3B270AE62BAF31D7A
021FF5FC228787DFD54EB5BC4501CB1E5F4CC8301E6AD1235AF7930C066B760C
97EC8F6B00668612D22789A74F3A0D4B1E940DD82659AC261BB494DF002CBCAD
24E5C2541FC6EFBC9DF203DEAF03E1A561F77CE42E7C2D63C87477A5962E4A69
F38FA95396D71D358DED2E819A887FE3670ED1EE9266472ADF32D718BE4E69CA
373169E2D360575B1C0EB608155D42F884B4A0EB462E423410C34A1D83662892
21B88187EB148AF69215A68B94A30088FEEC79DF2655DFB03DE8115FC1E42587
858922A5FEB7466C509BB5BC7D66EA925DF47B8343ABEF68745378AF892C68B6
248E69690C9AE1F66FBAE371392DD0991D792252723896D6D4105E43D207AA80
52854792C3AC196BF0405E05FE5E81A7EB8419BD2B190977C8C0FCD1ED2F4E98
B59AAD06E09E5F1E29B150EE1126EA8CCD820975F8CC4CDA46EF8C4F1EE17B3B
CD49A9B85C1DD123C0CA8C5EA2A259C419B2F978E1F4C7958A2747AF7ACC0E9F
5B34A0105D03681EBBA88CDBE87590B7DB16E7B1C0926FB02DA992EBCA7DB813
D409D20109CCF64B31CB5C2D1644EF98C958E130CFCB54F3360B020BE5FD7DF6
494B041CD5D33E6FB38465455CB336AC63334EE679CF3B9AD41781F30A5EF42B
04A1190B5884269D9271BE468AC0E2E6DD2FEE9F11D5912B7B2850E6EB4E3AE9
244EBAEBAD35AC7918DD4F490BE4C5A42696457E3F49734C4B5E51C7DD49FDAE
75FCDEFF3FF81C94BA66EAFEE2C6E3F1871E8ABB33397E62B13975D92183792C
38BE21C113707DC8D1BD6C1767A6F38278897ABED09C033D1CBE1401143D22EB
275D822B9C53ACF173441D317884684A5DC123E6C6894B6C00F8F4F6193C0CA0
4CB9750C5036965090789D3B90999FE509785E7712462C9E603B60608D70D7DD
6058B395AE725ED9019232C234505BBA2AF4023F60BBFEF460E8B09F18BB7291
3812FC14C81C578CBBC23C7B47CFE64F10B7EDEF1FE75F623A1C4B99C4E856B8
177310964BF98E3299560DBC638C18B1B45EA6127CB79D5ED5831866268A8C63
765AF536D13A717D91EB5B8F0E20A4FDD0F854A8430F9EA8A70166EEB71451A6
BF9B7D75F16F8CB4EFE729E102A5444626A25A0D897275EC81B0B49A2BFC9AEC
04569641B3C20EBDA3B87285AE27D3DAE73DD13D36293886B348E1712065717B
85D1F1223FC31301606743E08E35657BB121D124E270C67F1868C2FE500CFF85
EC69342AB07720A199D68534DB16D4360BDC79EE357F953C701838716EFEE2B8
91B74EB3C3EA073C4787027050773F7D4A509EA7AD0D2111E416FF8565267586
592927BB426D4E01F2244633862B102690C83ECE81316518FB78BBF223A60624
9F30E55416AD68A4C4005D26AD12308464CD6818213F6379899C514704EDA860
67E126D3EABF3F71E88A5FA89E5EB76914057C67600CE6AE50D79B44DC75DE0D
08D9CF9F5ABE604A21280674F5C2137FE13E0CB7A4566F608E0157F694C37909
5BB6957ED41C4946C2D52923C657CB78716FEB4C2C21631D59B961602C8A4804
73826F762E8B958124E20CE31051EADADA0D4A422AD1374AFFF084E3F644E187
9C37A1E4CE692616152E8FB0D17159B13CF2EDF7B119E13303A40596F048A31C
49094FD6377BC0C6309835F84E7D62BCE26735CC4CE79578BEC6E6CCEE03A6B9
AE1AE673AE78881F6DEE2625A680F3356FF0514C109D673AA58E7371A6A34DC7
DA5A0370F0F2D6FDB8AC90DD4C9DEC6CE2FDD0986C76336D808BF4BE4D3CFEEE
B3F00F92FD3A44AD3A6D7F87DF2BD3338F89BE2624BE292D89FABAE142923245
5D8BE0727F924450B7A5278508BCCD47E6C5B05B7FFDADF7ABA151CC237C0FDC
2D68D8904C9481CB7B525BFF347744AE6E85EEFE74610AA79831DF5EA9FE72CE
B1506888F15CC1218BEF14B148B2B5456B6CC965F3BF81EA6D504DBF0944CFC4
A423BCE1E467226AE0B39365CF469925EDF431B62C19D3A6401941DEA15094F4
380B740722FB2B181059096C657BE453A22AFB28D18467CC43FF7689AABF7713
E3898334BD99CFBE66C4FDBDD9B9180627931212A109A6CC8D6FE62BE6F89D50
06719D81FFC9FF3462A4C0F771593F5CC541BE24D02AFF56B18DEEEB89908D55
ED7906C5484FB0E9D44FCF6EDD85ED16B267CF579743FCAE8FABBE29ED7CC4F9
7EA3795353BE25CFD3D05E95601049B03FFAA653F82E2CABC8596EE39E400A6F
1CB18C8409A794245BE7A3DC5CB4A6C496001027372C9274BC2419DAE45E1DAE
BD6177B43EA2D6D9E95F9EAD282A511B44EEDDEEC3CF8C1CD3FC01FFAD306E65
B71DA25362FA923A1C770213F5546CEDD67E0CB859485583F682844189D0C9E2
1C9CA0416C17F3FDF6D16A395CEA43B9314242D706B380EB0EE95F36A3ECC7F9
32472CBE67001B87081FA67D4377783BD5D88E46E2668B96A0EFE7944D817E5B
C73377E7155A03A55E587532BAAE9DE070E73A17613406C711B92AEF8134F99E
A91708D5756D66B87C838592437274AAA30B1535E3FB56E88BCC646F39372421
5F535FE991920686F6574C8F67BC3774D44B5FF7010C93C6FFB55D0FA449D50F
D591E39B6A5C032629C85724CC1B73E3AB241E4E95C8D83382142D21572E18F9
A47F8CDF87E6666CB5E72F5BE5CB4CCA91AA2F7760754D8ECEA334EE26725672
0D6CE4B05280FA712230610C8D83F4C9F5CDE041E156D38BE5D5DAEB02B26172
1845AD34384F239A820E20864EA841182EDCF0999AA37879A65DD2F8F54E9F7E
A25DD2FF27D291FA5AFB0C215B9E38FFD92624B0E9C27A27B59664E8566EDD89
0ABF52B03EBBD31E2C5929BC1BA47AF05D473962EF4BB086640B12E95FC462DC
C5CF4D2C399068232A1294A29DAC701F82D7956E57025E7B5C7192144B553769
823BE18EB50CA7FAA2F815EE93C9E7F43A6BC18B43F57C4832880AC41C3C5F80
6CDD64A34CB4203DB0A98E40A9372824884E391DDBC99A51A0D075B9E592C1D6
151D1ED96373D0AA761F9C4B189830EE8D1475703B18423080BB2CFC8ED5E4AB
1186D810025F63FA10B46493E9849967F12EE3DF3BCD0239BFE22BB8ECA12177
C7C7E607CE160BD216209890529F382C932FA279612164BA463DC07140EE2370
1B050A96023009555378A4483D1EAF9CF14981D7AEC1634074EBEC25F725FCB6
40CB4A217669C30B543B1FE9A5F7B3FBB7159022C4F80A9A6AE4D3398538D919
BB73128443F23612B6E3040F6515229FCDB2A6ADDA63E9194BF16CD2D5A59260
473DDF23A85B531324DB9A2B30D4CC3DCF6B0746C1339D7FE3C1ADFC392ED586
4133A65221802ACDF73DE4C090240CC0667E2ED796A856C96638ECF1BA090DCB
C0B3445F20AE69B183BB63329F37871E4D537100C4D89B538E492DFC8832D5EF
2CCA3F99BBC41B415182F40F523BC9C51B55E4B99D27A83093730BA69532D86D
D4F2F27CD463E537B72974527BF071302A5B32E6F3D5BEEB8A2DF8F6FD3AE333
BABB1309AB3314985C5064F395EB02341C42B5C31A3AC1A26F59B1E1A0685184
75EDF093F71337060BF4040641A572BB43593818527039AC74080963FDFBCD68
4792387AAA48CD3D9A87D445CA03234AD544235D8AF5B205854F9BF1F07AFD65
2CE63CCE100ACB9E0DAD6181F82F434EDF67317874D7B2ED2A4995E08362A8B6
0E85AECCC56074FEF94482491DC499382C93A60D098E0FE2568235447928A5CC
0AC171FBC47998037CAAE89747064C5377945680904224686EFD2C717646CFED
9066B427CBECC79D637BE3D0D98B8A0F2CA6D16F64C3CF84D14D70FC76799A57
B8009493921B84A6AB4BFE41314FA52F003645BE1139A5F3332699713A1D0E26
C392220832FB00C79B93556A1DF4CEB57A1882F307F0EE099AF080659E535DD7
2842FD7FB86459BD0F10B0796C113D22152BCBAD4DAEB76731EE262D684627DC
8F839EECED8A0313F0AA2AD1F300AA4CB2620D7426002161F983AE95E542E87C
5536F0EDCC75AF25592EB7E7829E4EFAE3C6BAD0D1A5CE858A863A9AB484C68F
7021E9A1E1CC9750DBB35B5A632ED8AC2ABC213F81757FCDCA8EC6F0E9EA338B
249D34CE5F96174DE5818862B948215A40A87CFE2F881D6AF97D9BCC70D18E3F
C72E8A2CE3051BD437DD2BD1B2F366F2CD09BBEB1FA1FF7EF8999DBA1B10FD88
E772B497BC5C493F0DF9044517835C5A18B6EDACA49FE842B9179B5CB596CE9A
764D8FB11597FA64C204AA8AAD5CA1B30A7F6A0635F4D60C3D5A5D5AA54D4566
C36A1DE47BBF60FA142CF8E49FF59D0132EBA0E54724514A96DCFD18E46AFE62
F4E10693029CE085ABDC77E8EBBBFC63669B0778314EDF4F4361872DFA2C65EB
44D5CB662BE0B2807DDC74CDEFD3E5D7C8FE54C9A6EC3722200E4229571B8DDE
C4B23A97D080C2641931E59633708BABA1C0C2956DE7BBE53504F2B08A80874C
F0D889281F4761B0DA07C7AFF39097AE400B8999F052AE0A8CF6038EB3DB7F33
C9BAB88C180322714B666A2F5FCBA48BFB38EFFF20985D32343A81099DA63D30
2CBC3DC51217D4A4CC87B5398776E612686CCD91C077DA5905E8B396E749AD4A
357A9FAB35DCFB3E4BEAFA1585B4ABAAA808B7C5315AF784DA0937C74083F42C
FFB4D070311E8FA6595500DCA48E4802C8E4DA4C7DDF1590775AC2166849D5C0
346A43F8D80B4839668C824F6336D430519C2A613FC95D777C6F2508D429C625
8577FE6067582BD32430A52F8A9957642C677B94D8D5F61228A754FC694EE1CC
DB9201C3AE0FBC304E6157804785C5361EC052773C282975597CFBF6D1652BCC
E43458A67354D479220D828688A6A03E80DEE3F0D3A776F8BF6F046670BF3272
A4D03D6A518F3FED0B0E0857A05A69ACDE989B3FD5A3840CE2CE6486CB6BC760
4D8438A0659071C8A5035CA40C63F7E5C48AEA1FB37AA154BF47FB70798FD29F
50BEC1BD115776BF0430FD9E381AFF1238CCBB7E48A1B1BB474DFA01B0F4CFA3
A15609465EF425A6A412DBD0725908B76E47EE44ECE830955D10D3EEC871AFD5
7FD3DF1D9E409FE5530340F8347DB627FAF051FE7E452F3A888CDF0C93B874F3
F22F169A9AD2A517E036175E6D4F5DE3BFFCCAF634AE7A1DA162EAB5D1BCCDE7
4BFC2C993AEAB20EA224ABA4D376DF7C94218A51887F3881C8F1E9A673CA957C
08962A3BB0599D512E8120C9832B68823192E78065FD67C00111FCBCD1B1310C
75AC850F341F510ACA9F7EE84A30ACEB4C36B5E59E3AA4C8B47CA7BAA05B3F8D
B5ABDAB00E5722E2A8ED2E74001D2FF527944E7283D8869CC6930E602A64A1FA
91CC0354EDC51768351853990FD8153628B292E4B5B3B7D889C29A9C92393330
6B66C43E2EE403E4EA6C788A6D156C470460104C978F4A7DB5F97644E7D2AAAA
47BFC5A88A53C4784C85AD055A30E8B6F1A3C9DA8C4CAF98A5AED4DFD9B89820
B2E61735E237BF1042155BE10F056538DA09C189665735038CC228D0E698F31F
12DB0007FE6521EFADF8B1A322119C487AB4A715E0EF128E085E9F64DB789053
3FD8C727765354CCF9FEEB521723DB349612E6C35BCBE54593D6130DF667C8CC
A89FED056BE933781F5FB7061E41E35F1C0AB793CA068C676090F93D6A7C9394
7F0EB14680A3B9650D6C2163B73A83DD53F4D15F219219825BEA068392E9EC13
AC072328E1B32287D1724301D3B14553CB0D9C6CAE3D2D13B6009EAE101A774C
B61844FEB21466DEA111589CF8DCDC48E4F63B4D8BCEEAFEDC4E0DA7BDECA4F7
3DB4D84D7FF9FF20D50D96B41727A72FF76E7DE651DE14A8FEE68EDC00A8415D
70BD5463DC64D0B5DA53249395935EDDA7967B2433B6BD77628D7DC92221438E
1C15460ACAF7A943A90C34D2B74537CA1B5456842983851FC92621C2124A9CC2
E373ED1F6F3EAEBD1C8C533E943977A64CEC09D678C2C287675D73154A460057
914C456336CEDC50294747AC9860D99A71E821D8F966478C97F5D32847C31C1C
86B8FD8EF3FC186A8EA4C9BE51D592FCDED36569621C746CFEAF186B9198AC67
4D0A76D7A11670C28C42B4F0D4BDE28886E9CC715784C7BF7F0AF6DB24367BEC
8E7C6E53006801C01DB6540EE667071CA1862051F27E58924D1BBB4D7213FED3
D8F19FB7B423041482B0B05323A71396BA0A0F314018423977C9AD585854C18C
8769792D5602695367F970C99634BE71947B7F69127488F604E972B742BDA1BF
A3919D1AF60386478AE1B70ED89D4C85E01BB799A33BF68EEA18E6E2C451C626
2AF180A3D7E8EA917D15C635FF2D186730EE8EABBB95F16A196AE7CD6EA69488
611B4C5600BF38AE514B57CBEE38464997A04AC9CD59D4389E5A84930FEA2A1D
89133341DF01F1BC0414FC98F0F035385A1F49A5C9D9020BF62AF81F40ED4AEF
84057FAC50C227D23DCA95729794727C7405DFB32DB77E1DA2E2F92EB1890FE6
BB060A0F1F939114F05719FAF20F60E5D15B630ADA5342D0CE252B637ED19561
508B1E19EAFA4C676576BF1DAAEDE320A054E79BDA1FD2D967EB9B7F6B389EE2
2D1C0802FACD28FE8E77A4F13ABD480EDCD34370F71F9BFE330C32D011AD6566
9C1ADFD821E84706606D82771975AB24DFF6BC7BE8916E10F03083BB89F311F3
8E8043FA363DCA07A1078FD34B0343D48E428C5E1888B32E0B820A95DE4DC41E
33379ABF670F1C9F40AFDFDFE2670577F8EFF6F94F15C971AEF113C74CBCE6FD
76D921D0A902F21C5F507F78C630FF867B79A86CF4A5D26EB4017C11A63255FA
E12BEBDF403BCD3BC89209CA0790C849D51FF24C1CD5D8613BBE23203D233D9E
06D3FAD451B9C70A9B90D90E2E6D46E5734604ADBFFDDC55F549333C2EC7A5FB
CA8BAE0C5A3B12276276C95F7B1735B4DB1D38B48B159971DD315CDAF8B68686
1B3EEF3157EB920655B93EBBAE2BC134E6C5ED6A0EBE098275EF106518DCE691
3B5581A0EE56DCE2545C3AAAA9B441F5418A965DD3DD2C6CC997DB0146AA1877
89211DB40E374E370D53CB983F9BA5E7F8092B30E849ADF23F9434888D25B356
6AB8F3172250DCE8442BD6A49A425CAA465C3DD4048378BDBE5FE4E2ECB891EC
28127E0D0036E62CD1CEB66042DC9156BAD856DA51973ADF81D7EC9666F7E74A
5A1D97174C8AE0AB347956135E794390D46DAF26CC52EAF2664C27B00C6A7067
B87E52D9623713A2D88CB67CECA9DD2507C6CB6AAC07B748DFF2B535117F74D8
945AD99BE47CFE0733596DF0D1A7CE8684137D59854F182B4BC38A0CFC0C59CB
5DD1D850A06FDC706A52892457B6F0EA299D0CFAA81A8BE845F00CF9C96E4C6D
C989429D19F939C8C597C39AF5E9C358F5300E46BEF252A80D32A6E6302E20A8
8B91EAC2D1F8961FBBD254ACD4932A5E64E2E417C6B64D84B19F7C2D7C143E28
7C1F6400FEC0A6D60143CC3D55F1DF6AAF7C9D25D99E45005890374D2051B800
629BE0847718ECA5DE4ACCF88FBA4AB7F085A9B20DB623915950B4C87D72F27B
03AF92D451034112F40E1BC647FC0AC8E9FE256471C02ECEED641FB6D443B175
021256F3966FF0E7573B5CB3278E3352724FF84E69C3C34778B9BF4871200746
A11B5A3A4998F239E2A4F63F6E664D8CB040CC57D8112E7C1752AC69AEA68077
A7F1E5B426F180F8F5C6CA15CF535359773F77B922D7C1E3D9136AF1D8BAAEC2
E5850B6135A2BBCAC42B085B350972EC605826EE8F634E87389F47DEDDA4A111
04034FBBDB7314C2533A20930848488F39A7932EB6CB67DC7FC302C4D2954881
A69297DC4F47A33897D7F2D51AC0D2F3D5F69C179E7D17B9C029EA570AFD6E15
23BC631ED2F2D2A3693D0930A70DE365D30F019BD67D1466FF69C94847749DEB
8E6D66B63101183F03014853A2A2FF64BD408A39D066EEE071D6016B44350246
1E3E9E25A75A8957F90517088C168DF95E032D007FE011040AE2627F6D44BA05
A077FF51879772355B91DFB36038C817BBD676E4A086E5289372A4DBA2210E3E
5F3A414A14A00EF18D659A0C8974D2D851783C25FD6DFFF40881713F9131D48A
D1CE9037403350D355ACEDE0A2962D99283EAA20FB4A863C819F274CE8E5CD35
CA16EF2F30143132DB689EA00B4A3D44F15703FB2980A86B0BB826A3F23AEBD5
484B4CF698C902E5CD6D224615D9B17CCA208651F341D72880716E925D1EA55B
8CB3995022389D20100A9657AD8F721F0988A997C16C2988EF7EAB08292CB781
A950C3EFF6E57F7AD3353600CC60483EA6DF57FBC274FE9AB80401408B5169A2
46987532314CCA36E7EE39A1352D28D19F7912404097F7540816473E34DCA74D
F9C1EE3E224AEBA10EE3FB6BBB93DD543697E4160A87614B7A9E5FE07D109A3B
9741ABD526A345567943C8EF5B630CADE3BB9B2978001CF9A2A28F2739E70AB1
FC0426F3DEED874FC86E5D71DE600682D1B85B025B3D00FE020BA9C147EB72A5
CEBFE83197768C205417C1FF14F425AA3C83BCCB32367DB3B3E207F4D1C6A933
542D4635568832EAE5B9B27F6629770B25A74382FDBF563F55A010C88BB7BF75
1BCB55D3632C9B82E70FF8127E4FC4FC92DAF6BA117568318A44067E5312B222
FCB83D29DD6A5035261AF689DF34115AAF3706CAB5BAF7E9FCED3E1F94BA68EE
B9C1DE2149724CABFAEB3DD0BA874A072D753C128EFF4811B59CD2305FA5BC7E
1D1F741A98C0FC115383BE16A92202F2EF9E9FE4156916463363B47416FB25E1
CB57A314129B362ACC9CBB346AA46EA480FC051A69C44576865DD5B89836946D
94AAA257F6CB30D39483A9A9A449C7A4CB22F23B313685D52A2FC0D4FDBC322D
5AD069CF87D1444D9FA1C752CF6D6FD34E65F2BAA2234C0CF290E33231997E58
7DAC4CD5885EC8AC2CF82B8CA41A227795BB5AF04C1D36768DCF104D9CDC1574
38533E2B7CDABE0285825A4C267F269755C45EBEE67F422312D2FDAF08C955BA
5AA7097D7111CF3234EF393C2FE0465153388DAA8D36F888EA4FB502EB412E97
D95F39D3D80FC5BCB596290351F9751FA331FE4A67F8F65D5730A3FD9711D3E4
6988E981263AF53DE75816AA70592019136157C6D83B339BFE33EDF9FFBE8473
BC3155C43506CD61EB80065534147A7DF573B91E5481F89267F5EA2C4A4A7B33
17BEB21C2B08EAD7DB8809F184BB126FFE6BE2391077313BD6152B990E3336AC
E4AAC4D62797B3228884CAC962D3E20A9F469D8BAB7057041EFDE4567830ECC8
0C3722375A42A3B7426F551784C2F1595321103B6D1A8324E4DBBFE41DA46BB5
068704F41CF665E034698555CBA9117D82D203D8546E693188E3359495D3C566
B2B4B8FE13C0353CD650DF97E3D84886D70AD2E61D3E68FBDFFFED97ED9E716A
E9342EE982C28428233AD0E63910456BA7411E44745E8B3A4936409E170F125C
F43BF1F0DE0F95864BC959A023C039B849AAF311F7958810CC568C0CDFB5C20D
C1603B8A613388EE748E124E5B3A28EF2F4BC597F73081DB5E3E47A0BBF26C8E
4C4D8A6D68B209931551228A107181B773F20667A82EB1697DCE77CE8F7D3B57
414E67EA5F64E9863A91D254F38B714F15CE9F5847975BD958A7B269CF729671
C10E2B8E5695BCC886E02F9F318ACAA9AF0143570E5FB22347F05ED3DC82367D
122DDC326F660C12414CD85DC8375D56CB02D864EC28C18AC27CAC7A03592DA8
9724D5E2E4659BFDCF24AAC710098105EEA2892A6F91EFDF88D8510CDA0AC3F2
FF3937BED53B0B5D0C9EEEA7FA3DEF87DFBC40F9D8BCA3374C6A73DFBAB540DA
CBCD7690F32AC02699130585E1D2F9384970C07492F5E9D49EC3FD561584C0B9
AC99495180B090BF4148F9C25FA2445E6764CF81FDE92B11DAD72696FB7967EE
86006EC8448755C6C2904672F6B5C18B9D88C53490119121DA3E9104A1AE1F6C
6D00AE5AFDE65AABF9FC00DF349750EE5162D913ED1C12256785A76F301E321B
1AB7E3DB65F16CE0D63A3F2A5BED8D53169F052640BFAD6F9B964E77C2452434
15D130A66F78D5B19E9AFE21D92A65537C9AE8E9D819D7FCBA33AA541256336D
DB128F970D047249B702CD76C649EA3C535326D0EB00023FF77A3B7DEE70A979
A1D4DCD5481B3ADCA973721C5CD1CC6BF02B2AB1B7A8547E3787E8E137E39766
702A14BA3291ACA9E19875AAE50728DDCEBC94807EB8FF29B73C159B0C16965F
32FD3B5B1466553D2FB49F30B18471D2E993F52957BB5D342BE4887CDC6D162D
A58525D853897ED90F3CB0C69BF798F3505987F3C772B27A24ADD94AE3DE4672
E06A3192A1E8A17ECC22C8C1CA9703EF94313BA9FDCEBF3C8EFCDDE56ADF4B5D
0DE74D7905DC288743FE913EA90B9ADCE5D11EAF164C501C851EB0878B964E05
87F66226BA5D63354583F4C899A133209521E5411F6DEADB936AFC89B659412C
F226CEEDBCAB41AAFECAB9E2FE1A8A7447895A77B6D741D3E78E6E09200E9017
A2DF8C76492FF7814F9B33442973985B7A939EC36C9BAB7CA90F706D571AE37C
CE6E95CFFA48AEA516C545572012E5BF4C728DAAED3B4971675E1F982B67A227
840B40F95E46E9D4967C47322BD73789B3CD654EB622777DDD6A86CB8529E16F
AA064565D2B3EB1B9478070BFA7E70FBC6C6D02B73EFAC10786522A9E61EF117
D17979E943D4731177019142F0C3BCC7211009A0261977109564838F99C59D11
414BFDE64355AE67410A2EF69A82F32530A8647BD64C650E2C342EB15B439851
2BB1F5EBD412080089E411E32413C4A9492A4A0CA629F6BA397337D3AEF3FF17
48E369CD66639F7C16D269D44E864FB2E885224E4451CF4ECAC9F4B05969E286
6E0FB2F7C72EB794A3960E0F9E4EAA8C03B137E7D2E3A604FD713803F6D1C4E1
78BCCA13CF4B058A205029F99FCC29B3BD03CD9929C0FF529473FCE45B7D5968
63EC37CC44DDBE1A04213CB4B3ACC97125C5A0D84A5F2B1CBB18E7F32F99C68A
DECAD1D7C019C30B7E725B1037501C67263293CCC1C104F26CF2951CBF8D0E6A
11FE70ADC149CD414017955FF49604BA5BE93B299EAB3498E93AF714267EB45D
727C47488D7EA3EBB612E1DFCA4E8050C99B5270F818DE2A67AE1B470DEAC34B
848288857B51C38E166FEE0FCBBB3B517CEB8E860BD9321035CB8E6C870D18BF
9015FC0B2835D6CBE6BA68844930D07B8D26A31E114B11AD245CA282337D64E5
3E5C3B185A4E99E12243119A2D51BC04C475B44AF584CD34B7FECE9069833AA3
359B1B7B9FAF197D95DB80834D8F53AF17E0C816AEA2F5A451D97D6030447EFC
5EBC9F1ECD103D22DE5E406584B5B6E3338637DFD8883FB5A3795505A0CC923E
4072AD1B12C61090058CB1726A1820188C5E68E127C26F25210B2693575F93A1
5E81737B86863D901E827A166C3CBEA7318B8EA10DB17D0756790851ECBD9096
D3000D8F3F24B902908B8944C5E3C81BF889FE77B26E075C06A42378805D3048
6EB850E52E44D31A948E810BC3B20216733B1B9BA1C6B73B5F2DFC55E26AD2BA
D8DBADA29B9F49B4B605A6BB0EC43DCB7FB670A81CFB88225EAB86241E0DA318
3FDA259DF1056A41B007AF08BF5A38EFB270614467DA1B9ED79BDE494E79984F
CFDAEC19E869D196B6D0B8B806D5B72932A6BFE4F72564DEED438894CF372826
AE581D990AECE9AB13EE83A25D2BE6C77CF671F0D7B712D7F460D49A80FBE5D3
AA7F3768B1F25C934F23B614922699BD40355C7B01330E1D9085BCDE14E1FCC4
2FFF10742938207E5B57F4A2ECE91443D09C697EBACA254A0F94D509A91A1732
265A68978D9603CAB9C8FE3D01BE73C7AE8E57A623099B0E2E9A3CBB2F9A6DD2
CA19F4A1CB273F61F89C86DE2F911B6CEEEB2020ACF0A0FCF09EAB0B9E93CD8E
0C07BFA3B2C0E56BA3356F66D1235AE34C7D7556D11CF53CD70AA8E60A2B13BC
194D21E476568482E389A32CD331B7B791DC07653325EC5B354DAF40A9C1AB4A
B65D5873627B104D40D551152117D43E4257A59A779978E38449B6144A89148D
024C6205ADC3944E1689B851EEBF357C368ACEF3017A96B587FA1AFC6D01B975
396C9912EBFD3B66B659304973E423F64C6E69589FDBA65DAE27987EAEBCDDAA
1AF0C103FCFF4C227EB1E2E8D69EB4AABFCC485FDC65DBADDB1FD23BED84FD86
3DB12C03E1C04FB36484A1F1FB33869A00CF9CA6B1DF2577C512BAF53607070E
50F4CE4EEDB2D419ED767924B935D56B44224D97936489B6AF5DA0CDDDDF0213
12F5E5C3D511F5DD05C7A3B78B7F423A4E31A49CAEC788072725647C4BF72948
5986A5C77C8756B25C0ACDF77868B60CCCEA6FB3169294519B9AE73EE4AA5AAE
2D48923982D962AE88FB0DF6BE37C5FC5D7276A94359CBE32D54534047D577B2
2E50FEF3F5C56140FE5B94CFD7C692E7BE71B0AC2B661B7F4D7E417C0494EF1B
0A1CE25DECA0791972F4F0C5978148DF3B6BB361F70BDBBB20434B7CCC54A7E5
392C15BCCDCC6D3029E87B0652A139D6ECF2626DA8FC7600F80451CF83190F67
D9E90D5E575DFEC7C9852D51FB0EF47D54D2451C0F9BC83ABBD9D5369FCFA0AB
D3729D82F67164E38A10F2C5C11A3A9A52E031334FF2AC388F8E0167CBFBCBED
6E566980FF20295D82D25EAD7F8BAB714D30A85487D76E09300686DE434E52BB
5960F2E9D013E80FEAF136C02E5FC6659D0B448CB9D35482720E81DA928563B7
A112839A694D399FC0CAD0C76FBF99BCC2A07EF07C79F67851FF11839D11E777
7D9E463AFBCC938D8D346C5B2BB1B6ACBC3AA67D84CD8EEAF583FC13CD116DBD
64F6FE86816D3E3C9EB0A26CD9BFCC8413C7EF0CB1D89A46B699A493C668A999
BF7DF973E6955C1B4A2F1F0D17B4A6A415F751D935245892AB7E9426AB4C094E
C1C1E268722E20EB8D63764D77B19B196F36B6023B2309BF61C873C46B6F8596
8CC6CD4A4192D4B5923F0417DD11F2DF9A218DD0496E1AF87929F8A610BA0250
A16F0485EED3277FC36B38D3D6D7C5311825F0B73AA85C481814F72AAE55D92C
A3C82857759DCB0A922DAAD5ECDD5A88383AF236FDEBCACDD65B5DAB0E52B43C
3C26389C40D21011CFC4D99EE2176F44475375C49819ED2DAE85040CC1B59A78
9F01F5DFD1101F267B8EE39BDEFEED7D4FA7FBA53DA50F7888575F9116BCC38C
E9E431575FB191EE15E37395F23A680606DDBCC23EF895499EA10FB918CB4B86
7567DFCA75D2DA6698D7E2E6E0E5722808C2B2AEAC8EB8D3AD1B635AA8F48AFD
B7100393FFA8C650DCEA12DA9A88A620220561D285E7833C0DC0C601E324785E
531365B0CE2B272A0150E3AD733C78EB6532CB685C2DA860CA9A63E087A1A955
87C9F39078D7CA545C3CAFED92407D1A9D07BC45DBD97FB39CE48C002502F33B
403FCE7E7830E0311E7050C42062C1C8BA3F3FB74F036EFF81436AC5F20F4AA2
4E7B4CE1480E6A33A6523047DCD2A0225D3102BECB57D1220230CE3CB3DE11F7
DFF7D47C3326B4FFB3D8FA7C8FD0CBA43CB204DE0C78DF7984E7B1D94EF010A0
D99FAC94F2DD4B573990725101EEC55F291462DE79E43AF17AC629B2E3A1A3F7
FCFC16BC7DDD9A4DDF8226B15F7071BFCADF55216EA2A1C741C44116DD56FCCB
B96BAC553DA53B48B00BB31EF362A3FB37AC4616FEE32C2134788A18F6780125
3859A1E0A140F3FF0FE89E27F3E9E1DC0CBCBF83266358D4AC31E8D1936EA2A8
EFD4C6D23F4684923497E8CC2746E928F6A7F445457900537A420987B2CE5B99
4D70FC6DD1554245FB56EA104EC4B8309E79BEA25A3C02ADE1E66D64153845C4
9527BEBB5855D79B5B9AA0B3306700778714A8D7003961ABB6B34264488199F0
F967F1E44DEE66241D3BA4E22403433D97EF14AAFC9550BFC2FC3ADC7B83AB60
784005480AAD726C02732BB70F31107967746D5BA0306C3DD11EF75250246A12
739621B584C34C4701C35D426CEBE4FBE79DB756CA25AAB903E8635D07130A65
A961330FD4C0007CC0A27A097B1E4F8B3833B071B052D586FF86D69B9424B905
EB299E33C28BD1920B56B04B1563E9A78033DEC436A3D51E9552CE5418CB51DF
178AF5C744393E43300ED869EBC6203FAC0902E47A684D7EB52CF0DA575D59C2
FCA8F1434FD7C0D31B3352CFAAED3C30CECE4F4D229E335F49B6980AEB3BA21D
2AA0C4B05387347CE37B2C936121304F19EF894C08248C342B8BD0437C24AB16
584524E5C52F69E7AD8A56820E6FF0E78CFE31492FE4141195118C6C8B4D184B
DB2F1800B695CEF57CFBA63A8F401CABFCCECD945A89B89C26034E865F2EC7B1
016CB1C2E316148F315F1B0FDF9BD89336E6CBC8201B78417F486CEA44B6D36A
5916E1C19FA838921E875F6E1F95ABE631B1E114C1E6A557B2510748FE86D879
8413C98552435FA036B81CB54739F25B22FEA87CF7D9888BCF8BFD11AC59DFF3
6CB115F9BA678EBCEAB8216B3E0D37CD10025CC9537C35CEBBEC2C3293AACE3C
900C79E65AE35D41921A8F7A62447395D75DD4BAA4B59D136D8C558A781F74C0
0BFCF744E5A4178451B63B02D509B395F4E44C4D96A477383CF842CAA690B8DE
894A9B24D41AA0D868BF5E5CCA358F15E0624D8BF39E00517D21ECE2ABB46B4B
80B4390BC3D0BFBEC5E32B6A855EEF3BE0DCCB5A9F37B1C3EB5F07C4684055AF
5C2D71336EF518EE514F269325BD5FEE5637B04024CDDDE94FB1196FF771DE56
C4A79EA9570103F1A9208916C644A7C8BA81F6A3F09D3030380F73EACE61F78B
AEA7E0CED22239C31D9AAC0C0C31DD0CF1C120E0377F59AB78E00E2B218BC3CC
71DB34A501CE0FA946B91F3F42C467E8593727CDE6748C1C9D0D0B397509AC9B
5161F60D44734CC146FF22E6AA2AFC1F680A987D5FEAA8AC2B914030E6ADEA03
EF1BF77B031ABB101CE519A4982F345C887B88FD0B39C57941B59108E6A1C515
54E8E033E89B291640FDA36F5401332452BD71C9CEB23FA9A049577012B2EC79
C6974EA114C806959D900FB6EEAA40E67C2C0EDF91E6709CF8107A0FAE94BE94
D38B6A0D731274EB58A8B0BCF51075C1FF7D81F694C1DCB49F96BA8A5BB0D428
8D58FDEA66523DB5C705D0946DEB563B2EA6D09101B2A934FADE597A32D61742
3D4D95C295C5E953EB598C79D75CD9BAA7C2DE0F49A12B261A6FE958954ED69D
C66521D205A2F303121034F8002E28A87E7EB0E77702153FABDCE3CBFA9345ED
84700435C693199B5621D374878E637948062036DC4101BD82C5A1270BEC297B
44E80FD4CFAF3FCE18E7DC63ADF6886A4D3B8368BD6CC5F35D91F85A9FE4C7E1
99B72396E810AA9902BB1955CAA2A9107A79CE636EDA22E0410933A150A980EB
6A5E05B6DA235723E131DB05FCAE191846B77D67D129EEA7DF08A43C3A273CF8
D743AF5759FBA1C1AF04372D213FDDB7138B0C161157C71D7C34127BFF38D853
95E87413D773681A61C7555F0D1D777462CE75FAA1C6CAF6C5439FEDE3E354D0
78ADBD52F4820F9B76D31D3AC3CF65597EC2ECB1B916B69F606F890F854E9831
D3B90A870536AD2910E90C416AD0798191C99BEBFBDF8932219B1A417A6F76AD
7C3A7A5299422F2D75CB0166EE5C51681E2F7C98CB8D4CCB3CC4EAA8005570A9
64ED0C0B6B54A0464FAF0D6C6FB145335881C81CB7935A3B772AC38311EA90E6
86E2BDB48205AC07BAE9A6342940CB20251D27C79738545F3DC3DD7F3D6E4E59
D415F6529CAA4D5546CF780E6D7A3A854BB31C8022C10B9C9DE30730DF98EFC2
392524447B87835A6D114F0BF6755E54C24D5D880ACD7DE9AB12C8324B8ABC6F
5C3DD6B1227ABA091C0DBF47426C5A467EAD2A0898AC06D3A02EDAB89B5EAEE8
9EE09CFD1009E2097390632A8FFC03F8A5342414AE5305A3F62DB1B4500D1CD8
9E61A3B1E8B74D6B9BBD448FDFA6E376B9789FAC35C7893043F5BFF804EEB924
868489205E2F5950308CA810E6587C83963A7B19F1E8135C98566C9765C0A312
B9C782AE6B222B5E227CEE904687BA7E68E17D1DDFD60495AF613098D9668D2C
8252EFE992721C1292FCDC8EEEA056D64F63C32F5A94883035D830DDC41C9AA3
5F4C5CCB9A2BA897C3827F45AA08899D347464E9E3465B693422142355BD8956
FF4F02F67AB3FAC9429E711FC7128048CE8F2202DF6630C45A23328420BA008C
7BEEE68FDEA216AE524EBECB3683556AEF56ECA652F8B2D70D3D9D1C6E4D7325
1A0056EEF59D933E9875D7549285AECCEF800A70785FF4967F17724935EE1646
71B4800BF7849C9AB7CB18ED3FAF97411F77CCE386E65C1157EDDB79247BD76E
EF5B6CC534ECC2F2B9191FC52327414DD440403A2C01AF3F7432BAD970A4185B
9013D9DAFED433FCB4C47C13E89549117C6E29743913E702D4D1EB2576241CB1
9819C2826389907A1B3B841AFA8D4FD018BD415090BB853F6E8EA3C553B910B1
8C6C67B256F431A476E01641985B47A3B8855180CBC3B9BA09F3C9CDE2C1515B
2F6338961EFCA5DFC032AFA7934D1B6FE70744D9194DF3C0F4FF0E821EEB6841
C6EB4EBCA6EBF02F30F83BFA3A1507F06D50DA84E506CAF7FA6EE1579C06AA1B
C202703DC8D18D0B4F4E8D23AB5B0BED19806B6302B1D58E2DAB0FADC342C42F
1652FD05C6E1CD683F191EBA6F385AD886142FC3C58027EFE46F02318C76386B
7916BD939A8077144AE22114AE8277423690C8B451214F5745D6B39E61267C2A
98C2025839F59A9ECD7FF224C42FE0D07B100352E16DF582CC5B171CD97EA751
E5885BFBAEE4DC8E8A446AA3724DD3EF8466CC00C87717402341CD9778766556
ACA88EDA037DD889CC655E1CB0C3F80ACE54583837C1C306C69DDE9D02B85F9A
BC69C860786EB56555CE5D8A2C8D8C385760573B91BB1F69F0429C7FD161CEA2
9BE3E2118997B8904A4751B5D14622414E194C540A698295CF83F3598B330E51
84B336E3ADBC737CDDA5B1501E1005DD072186C098CDBC1881CBF9C920A3A990
E0F35733DC4FCD55FA12841BC8706D99285351D89E68041F0917C407BAD0E314
CAF55B7D77E78B8861C213AF1C0393AABB0D3FF7DBCFEDA9BDA84F85D9E08E69
2A1291B75DDA1B7D6080FFA868D3E96327C100BA0E21CD5F68BE644E8FDCF371
485DA402DDFA2950C97A9DA5C1A310E6926FD32BDDA7C159FB6833682A73F345
CCB078FC4C08BA3A160E529B59ADCD840FC104336DC67C619503E88E2476BC4C
A1166CF9A3ED61308135CF40B62A4BDD1D84B638F15734F94A67F2A2BC78A10A
6417CFCFFC8619D9B48709CBCAECB3AC51B65D82280B9CC918934723559A82C3
DEC1F3F1DC0C0BD49DD4DD09A8F499CE1D260E59D3CC30B4B016DE188D06A834
068DA8A3F0636CBDF9C09C7088B21735523414066C4466D3AB37070AF196350B
6C1129B9618775C45D3C5FCD9993C2A44EAE6A982BFC5C4D8FC35C43DE0D5A4F
A7D2FB8BB2066B4F633B15DC45C5182A09744905A77B200392113BEB6768DF07
8AD2C3E1433B756363ADA74E7C9DB601168A11749F3D090C50B14F592AC2499B
21D8B4412B4B4402FF5ACE36755D0954BDFB1DC0100D20605A8D2B7E882A9452
3CBBC587EBADA236B3C1E9BA8CD8E263FBDD01D87E600BE1E3709ED513B8C8F8
F64A1C3F88BA341E4A08E48E05A5D9A4BDF83B8A99477F5B59C6E8B081DFFA83
CB5DE4626F06422EF2B91B6271EE089AED2A0FF3F340F6C8BB1910FE3C65826F
19F87758A37DCB717C62C8C8CEA88EDF7C74841817CA185C207C606ED892D52F
8B9A95A5EB30165EEBB701E5F7262DDE3BC85865B6353CAE4402BFC3092355D5
7FCA16B96A6EC06B5B240BABE10004E217B55F616A0DB9C34A61B893616A1650
6624BD50AF40ED39227C82303A55833685774CB5159F9CFABE22C701246494B3
83F6DE5A2BDF879CA804B8CA9CF0AB614A1DAC8C9F5F9702D91D702783506221
DF0FA20E946321EF2B6679AE5F800C4D686C917227D1B2D9497C6F713FA30F74
EAFB592961A6E994396CD003100007FDBE50ED4B2739D88AB22A1AF8D31EEF74
D68BA2AA58FA7571C6C592AA8B26441324A2280AA98413AA208FAE731F81FD39
8F49F46FF0731971EC8F6CD9772E21EB531F5BDC9698163481CDB906DC2CE8C6
86B9C1235C7D72B2FD36B4C262723275D5FD72CD14023EF22CA46A9B7F78126F
202204075E24E94D80C6874005AAC87D97601280566D935871940597531A87F6
933DD05C68312B3DC2C6486D2A6F2EB5F61AA91029C7F3A5B7FE6196CE88F565
EFA5ADFFA8413F08BEDE9E9BEF83AD27C94EBFF7822F93CF09357CBB2F189856
388CE6F53FBBFAF7BE31B390A0979163F3A316640ED1176CFBF6E0538CB0B53C
0C5BD9EBE743AB78AE44EBFFF0D53A25B78E89280311BAF0E8A484D4D688FF47
8A2D6E967B4472ED624357FBC9A10385352D76C29992BCF628F607CD857D1010
18C2A3A574DB0B0920BE47861E1A749084C0602FDFBD4B07A79E13A9E7375B55
3549B8897F92891522C6606E808FDDBE7F1D532C3240D072778BB911D9C30FEA
6E20C7FA0237A97B6E585257E86A3CB7FFCAA889453850301DCFF7A2E0DD6E82
A8204583BE54C1C2896C0BFBD9A1F247BCFFC4BFA4DF434C1161FEDCFB568DBD
1AD37A73A82FA7B8BCDCE9CA780C633F14A7345BF8DE371609341C2108595EB8
889B786EA9BA7E60DC85C25750A59571FFCA0E9DD98C49857F3BF0CBFFFA7B7E
FD994CD72855DC913E2E45B78561C51D38C939FA690605C2B63BDF8980FE2F98
DC25B0C3F031093A7B4A3F395D8B655218CB39B6A8BD4779278AEC248611E151
A09EB5C80A90851CC455BA7FD17ECF65BC84D7E40476DEAF82076CE347F822C9
C058960182EB146B85F356C0811644DB762FEB4AF25BE1028B42E46C31348BE3
4ECBA87D172BC9B3D4A83BCDE17F082E378FC3A57A58D3DA1C53E87C04FF0B1C
30C7C472EB76224760A87CCF10609D6FC25ABA42B1FDDE2419533DE4DD604CD1
A79C61B2456C566CD0131A56C83637A1913DED44131F12CD91B91B247150FBFC
719D7EF541A708F76DA6E3C1EDB7892D01E69131C43A649990180A2FFA33F75F
3B7FE66E343396BEC5E95D78A1F70A025846E35FDAFFAD4FE4E9063F6A0E565B
AF3F44E9CBFC1165F11DE88F299BC78047B5B3F36B5A1D6AE32B53DAE302F26F
71A55023F6D6E0CA3C5723F51F401F74CAEF6BE03A739D9354217BBACF331BF4
E387D4A0DCF27A5EC28743F3AF5C72A45C2B3CAF32249B27B806A291FA8F5B9A
516ACA5FB09C00FBFBB2936691AC74215A2D48AD048A2F1E7CC1EBC6C7E257E5
58DEB9F3FA40627073004B1AD621E6ACD7EFFB5156B51D5FF838D74F9479214A
67BF6AAA1140D6A577CC30FAAB9786E8C91E7F7F20894162B6B23AD657B30AD0
6F39157DF3C42A89183B75DEEFD98456C8EB0D2ABAB157B2A9BE48F6736EEBAA
C5B00E715C791B90E3F91E6AAA29866865BCDADF41882E513E9CEEAEA7B967FF
AD34DAA61ACBC78CC36CB35F4B58852BCE94ADD6ED2B5331FD5E8B0F489FC1B7
0E52DE8CBFABFD4A07B78DB091F662B88229985494A941BF36AAAE6853A0A9C8
D29288B55A29A2E7765FA80B910DBFE39CB57CB0CDE36650BC96DFABDB6A310D
A0792D5E14404261D6530671D575E4E5417856ED793B59FCD28787C4458E11CF
A282A817ECEF7826BC3C918AD1D21F7AE1E01B980FE488F8D49D3AFEF607B918
4157F75A36B878F3CB5A79CFC7AF8778255F99B8311040E057F1D41E2686E68B
5884E5806567EE58D7E8BF1B8DE29E611FBF8F0768F053355412D40633327021
FB71628982F4DCF6F42362BB31FA89FA01102458BE5C0E0BF3E334AE93FC96DA
85DE9FCCE6C23D544395C0ACB00EBF9F8597DAFA84E8BD713FBC8C7355BFF6E2
13E8B7077775B9DCC86E49A23AE2E4FDAF15C859C71455F2CC2FB9E9021F8FD1
0F09EF42294A7F16181DB3122153E139692FB39CD2467A6B16013DF1EAD89CB4
963EE693A3256B738B5601FFDC8FC13E72EF7300FD62C2EF2CA988DA5EF626D5
B5B628B1EE7533DBD1D19ABD0C4745
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278A7F0FA073A6AB3EEB512FA661DACF8693BEF31C59
4F7D0F9390F99FFDF77D85D430A5383B428FC35C43EC628F59BBB3BDE1E3266A
AACF6605C71D7F13530C884868B786877240EDBE8B6209CD78FACCD78AB90162
7FBE024354EE7C3106049D6C9FAA13FD406182B5F62D26C28668CA145597150B
847315C78C3871F7DF0D5B8BBD40BB58C84EEBB414C741759F68C2C9292B509F
C3F79A0124BF8CAE36821711979AB941B3ED69062C3BF7A07119CF1E5774AEC1
2CDA3F68A61B0DD5FF9CA582782EE80E2D289A653949F11C130F37E27A62B17E
62CF33D67D8CEB212797BBE778DCDB2D0F6726BCF115DA15343D86043F15602A
346C1667DC625491A42A8BF5D93FD72804610E4F730DAF2F2D5AB767C320C625
43E266E613D62496D758AEBFBD494623BB80B90C04471361C9C6C67A8FD6A0AD
39AE434D463A1F19FDC6DCA5DD36E1C5E6936F918FA4340BAA063C6C8B2D9596
B95E63CD7D1717AF26AF23F5BEEA4B6FEAD03CB42E9B8E0EE958725486FC8999
043BED6E64D0BD1E9C51FE0264A18B16E899EAB7F8DFD827883779644A3C942B
0D7D8D298EACD96F05A0CC4CCB63E376B4E43248794E4BEEC056EAE4B9F94300
336D866A6E4C83D0AD28B6B5BD224CF20C785A60A09A1E25B7EB40D4BA42B216
990ACA04231A20ED1C32F029A8F864EE7CCC23786B6CC7C0AF9CE66EDE54F996
78C3708042ABAE0FE77F1BB736F6CDBEC9DF77C87EC1357537A50D9811DEC733
B81B8961F03ACA5FDC7D9BE51EA4E8B3D46727F17FF5330C8E628F55659D7F09
1BE655E470D2748EF970AA53A4157DD01B07D0EA7F624CE1149EBF26B03BE93B
F15CF067F25DC0E555E0CADC1F548A46103A05FF729A71670117252E5DDFF571
0CDCCEA4383DC5122201535E7647EFC3C8A4D2EE6ED096B19FF814591D34812A
55D6C8A62B1B3D074D3049D9934196B3F50605FB6EE415D9433E7436532FF7C7
AB463D99D42D6748E9C085AB0EEA5EAD8CD97C523D957BFF3B0AACBC83FBF809
D56C8564DD29E93D4DA5B943F6A3AFECC8553F04991FF1698E8F1455CCD73B05
D2D55F99DC201A0ED5221B24F977B1916559D7FB32B0E4C92DAA7C44C8F43A22
0BC0F0696D0FB5454057ECC0EDF1A13802B56230D2DBD9E05B51AC7F1003E752
ADE6E0D62D73924324C0BB8AFE3836D2CA1CFBA3780535785D2C42A304860F74
F318DA26A8EEDD1C89DC62A6487DA4FBB371A2784C91295D66CCE6DF3A8FC1A0
24879E22FC838A7452E8DF35369C509F2F33363EA202C5850BD3B4A199AF7DB4
40F45F401B6AB7ED7AC8D1E44A65DB86327DE948FEBC1436CE7A2289A50674FB
B4AD28F6B844C375E88D7979DDB0CC8898C1C208E5A3E30BF6C8502BF55BD7CD
93B30B38952D225CF18B1F019F076FCAD2B4F46983A92991F0FC35A1FE125CE8
D4CE2B56D86237E6501C0AC3E8CFFF80F80CC832CEFCF4B2702B095183685A74
6B7B8EE476940046B896F651EE40A823738EB7D09DEF64039397706818BA27D5
F93DC89153E3DDB17E18D978FD9F4B3BA3EBCD15D775443379375947822DDE23
AC845DFA15EA3DBA6339353E738DD62BBBB0546E3E64DE2FEF4DF8BD02B4F68C
2589F5F835CF3D8B2AB32F5D16068C898C4D042C170789F0A523AAFCBC2944B5
EA053C2D9EA5416E99CF94D6C06B38908002622C2BACCF81333592F94D632942
9D79CE9D71E31EF999881244ACA015D700EAE77FA9DED5783DDCD822AAB78DE8
24AF0462B234418CAC42B13CDBEB7335D612CA7F9D5E4AC95D550B9314F6EF24
B2CA53948393F750E54563E517A29673DC4B086ED6CFB0B209AB0664CC1D7BDF
050809D2B11D2D3B406617F53C7A2704773DB5EF6AA31200971B57825AD2D4C3
5AEB05750AB1E51E4862E7F6099B3D3BB06C7ACBA6E668AD0A7669F6B1AB3897
6B08F68CD761E79655F23A39FB7EB1F7B52CB5866F437135795E475246288A86
B6447B1D58175CCE6822A455B737A2B2E1C486831A4873A70976F60B7EE09A75
ACB5C46006009C9E95849E59DF98DE8090649930D9138943FB79D7115110C6A2
5B5FB7E1298139D883EAD9FBDB682FB838BD09AA4D818273E2376A99A6AB02AC
1B7C6B91D97AB3F10FA38D9393E70506AF2E02A5931787C6759B8120072813DE
DACDBD2C5D9B598C95BF94DA6B7D43B05209AA00E3EFBBA5954AAF528438DAD1
7F8C0E1E572AC1E0871BE8A830BE0EF16B972645828431669169A7FD09CB2319
ED49708A0B4E19CC75DEF0FE8DD6D55604EBC9282617F28F07F3C8676E09A6E6
3B112E6F0A744FCA4BE223C060393B1E4373628264EE7E471BB817B3B149FC9C
60CA98CB503FF8C0AD6E61588C0BD884AFA82CC99F6E1CBCE372D16A110DC5E8
C7D87812C5B22DB4A435D6CE2AD8C17CC974D5122859CB0A8796415B177CAC8E
4AC65B1ADE6BAC4092A7FF460AAD41D8696634CB737EC60CD13DF44DAFF6B19B
AE289A13CFCF14356B7076CD8C7EC2D5B6177BF9E6CBC427842C8A510CDCAE59
975C84F61C92B02D530EBF3295A6577C1AF522AB67B11B8A08839B7F791C8514
5E2203172DE78430C8A598043E46A5041FCB8A776BF64E9F449DC474A69EC4CB
8DC75D6FDC374AA21112DC51DD8F7051FCF03CE08B19986A1FB5F6CF0E07076F
B79C39672F063099F5FFF2CF980657372916350C7A9AC175FE43A2EBBF3BF850
FEEBF53CF719CCB1B289E3DAB1D21BBE60A8D5D1842633C34C82EABAFE2381E2
DBCA701550D06E57D4D966D88DC6979797CF23C440725460EE38E43C552B52DF
C96CB71BD4BE50FFDA554BEF1BD67EE802E079A848F39440E3A486C89DEEF641
358280F72F042D53FE236A743EABDDF11C35A7A499FE97B0BB9E7C4E21999990
FFEB92D939C6C0524820DDC076B9A11BFA073B0C028387562F2109357FC7C761
CF9A06F4680DCBB5F4D1125F3FCACD6F28854C3D9680D71B71BEC2552D1850CE
486BE8DD7936C1D2EC030126B9E34649D4563D48CCEEDE7FB76709283622A2D5
769D8CA6CDD206FEA5B288C04994D4FD041680F5344DD92B5D2FC08DC37E7C01
E532902F65FA8D9E37722470E4A4ABB0C42EEC482BD834E75E6A7B5DF2D41CBF
E03D8790BF40B03F2052DCAFEFF974DFBFA284EFB474A9E7510985DBE634AADC
755B76A4598F4EDE86DCB1C48F68CC9DE14CFCF31A0F3DF46D157FDE11BDA0A0
BE4A680A28588F8D276721B4865C6A89A9CC54396967116CEA401004582A7693
B7F8C98B37EE194235215B70ABEE33AED1C62756DB38D64D3FC46D1CBCBD679B
9B1F3D7C8205EF2FD24A8139902E797CA37BF9782C8FD53B928F16600FEEA533
7983CD500044092DB2C4420507EDAEADED6A093BBE1529C6B3CEA9736F120D1A
45A2FEA8204E63A414EA5E2A2CE5425CE092098239A2D5F215B2B1C19BCAD0B9
D7D643A4BF1348FC8418A440D2AE55B3AADAE60AF10F4C11E984B7415F384A88
686B21DC7CF6AC9E483F4F27B57F24F5D01D761B1445069ABDFC2812A03134CF
30E6D31181262D90DA47F621FA62625B38C722C38C65B07AFD31683D2A20AE7E
BE056BC47721E6FF5103C047A301014AE7EA90E3084A4B112CD312CAD5FBADC7
8760482D4AC8589F9164800A3D19BD53666BDBB8D95584722B3E03AB84018678
A8471AC9E7518579D2ACB226FB74F73C8D0E4D53D1F6AEA0649E51D8B4A58171
E32FC9CD10E88EB092EEDB444420B187EA731FEC60204B8C533AF0D27201665F
143870296E71CFC6B6F924CE700A664F477FC261C3826D8838A915E985F39EC4
611181FD2113DBBF1C70955D622F00814EB0AD21F4029F9A9441262E826A5C16
73741BC0E5964EE50D5204D1AA202F2D81979CAF88B12DC59AFC8A044CBAFB61
2A25C6C682F3F7A8BA93DF0453873A2C599DEB1E673591624485DD6232E9329B
E39BE11DE0B543AE5DF411483C6159F0DC15A7B47FB9970A9606F7DEE1960E40
D78ABC0C2FBACD447B8A060BEE8EA2EF154A9E442C229609CEE04017EF285A51
9C6098049CE83A455DF3C8D23C529B80A947DCEB74BA623D02A1830D14EA91A4
F0D211D02A64561EBDAA38F7D71C7FCF183DD95449E8C5A7F4C8B090352B646D
FEF91D12F15C60E054AD03898EE3364ABC691A987AEFB1DA552E42D7A8E8C8AD
6215D6E7600E7D2853A616B025F6F6FC4106F85D0CB17B1DF48340FC989BCF19
072BD68AEA86F8F8A61E07AFF333B075E6926C92631D6A9DF518BF4BF4FB13BD
64148E42E05662E485773ABB6F546D36D5947417E61B8D64DC7B763D05FBFD07
F5E7FB686B758E23940AEA49B25BF44AB751CF8CF89176EBA4D7545EDC682A15
218F6DF501186AC347165E70BC27805D32D383E18FB6598A3DE303F3B811DB11
C0BB477FC77E6843B7F06799C2156FC40665C77AAF64FD759E1D5918D48F2215
72F507C6E1F0E6658992646C54ADF147EFAA9DE2C59A6F0E93487D2F51DD7B1B
BB5FFC39A3C736135143A6469624014F84376BAA5A49D1E236E4992EF1A7DA2F
546257FB99EC488CC04A0CC4F44BF47ECA94AD992182D6AF672FA2B46BF72C8D
B9FCF2CDDBC9F5E664DF0E1701266FC150AA440A8FA3312AB4A97A129BFA9E8D
80AF89C81580FDB125BE1D087CBCC66677ADC19EC99858A05A284EF2A81D7845
0135EAB30AFE76A6DAC8B3F39450501D56F6D0F0C09BEB7C228FA3AE0566B612
735641922E0F772A101141128930C64893A985CD30E846861BAD855FCB0A4C24
D186BA483D01113704D99D106B5E6067045F4B0A4E017F3E4150E1F88BA6DB17
6C28B06B1C78EEABD9BA91343BF0BE120C4AF0F18912A1DFBBB6ADC86812F485
5736D93DCC24681132F8A36F5D292CCF6A1B316CFCEDBE0E48489E4FE8B984AA
F5C2E197A123167870E900C7AB88DC606856B2EE6FD5B50EF180B0AB8E3A38A5
DB7E0B3C2FDBE636371AF8DEB7380B4E7406FC33114E0F3F2000A37184335085
ECB1777A52CBA6427D526D5480D0BEB6D0FDF963A4A76E148EBC34E22A9FC124
F2B272E7236D1AE032F62604C86192C1F17BFA5D4416B1EC644373F917B9D0FE
1DEB4FFB8C7EC6562A0FD1DFC921C333FC31C446CD9CBB40050EDDB3DE0416E3
948864475DCE5A8361E3AE7833149F74905A2D37C4963A5244B985AA4E1B9003
F356ECA8CC9C3E6651770886755F38FCD93A2104A1D50252B9625E8A0B38C8B8
624462132458291874F7D59D78E85B8407108333AD97D5D91EC421C9EE338E13
8F1F250A295AC4A461A66A835C548DD6646687BDF9DEF5768CF47E83A78FA17A
22A62183A712D164AA75D62CE1160C56C360788C981FF9228221B5D526A2495C
BAEFE8685903681EDC359F5F043759763F6BE105F73B7563EF5A87A31714FCFA
B7CBC8F115FE8E19FD38CAA86EBD7DDD364A0FF3CDADF33749C09CB5B7B981A3
79C069503A9C24A1AA842A4C52B6B0A84E722F4C4AF076A06820018223474448
21940F64B1F2298D7C99616933FEB342F114B5C24CDDC8AC777C7CE1FEF8BDF3
91805D2239DE7054DA033296B1C42A1F77D5A7F86B5283C73D37CCD47A0ADFBE
7CE10F7AB1636202D40CC4CBADA5ABCD2F5942C426B44F571F443D4739C9E350
1596ED17A71C5541E1C46CE949258B3B51C4A381F36597FFBF01605529F12612
B0209C70601FBE03D273B8BF3F5A07A5DF95A28570DFA7441D5CC90B4CFB4BF2
B2795A33471D74261B6D7728BEF6865ECBCF54E8A6C6B15FB27F60DE15825074
1022BECCCEFC5E0D90C2DEC645A7D68E14E4D49BC72F8654991A39719C6FA5F8
538CBFAC2A63EB64576FE001664EB79382A361F50FA5DF85CB5F08AEA2E671C1
A76886F36A5DBFE59E729C1B0244251D40B75A061C82A0D62E14D33E9ECE9722
9CE4262AFD801F25EA5F74359D98606543A0D120984737C9C235546B8B788100
C8504FEE1CA3550E304ADA04162AF2FB5947B419CFEC5B405E750B7C605CE6F7
06F2431573453026B09E7F62223F5E18234CF5196F330797BDCAF40E7A45F9C7
73D372B86E3E609D9DD4969EC219D943DA8DD5992869662C7E3DB14062C7DBF7
FAC597542491D58D378569473099E25C78B747BDC06C5AD7B890D9B64CDBA6AF
597585C52FB76B50D82D5F26DD7FEF47831BF1E02C53617C46EBBB34536A989A
7CB3431CF9F800279A4B58E9002F9609BBAF538072E2FDAF3BBEABF2B98CBCF9
0EBCFE0040EBB272700A16D5A965E54A487A9596B7F441B860BFCE9C3350ED4C
1678E9246441252D19DD28ECB18FD4707D6E8501AE080E80CACF7B942F8C2C69
22AA197EA3210994CCC4498E36321C078851B871AD291DF243BBD8A67DE49993
D7BF076038E9744B27AC132F77D2B3EB1B3413520F94420187E558D97070C35D
70A5E8EA1D48CEFD2D02BEE78C62FDF133ACD4F82758866D6BD823A194B3494B
5DB6505B3308810DF91565A8075ED5E2F8F3E9D2BA246DE8AFE54583E055A27C
D7A88D4E384ED3AEADE0B9D2BFAA7C5F36B40FA43016649B50CA353A646FA95D
A15DB0069F49D20ADDF2CE2544AB150E2500EB17E4F2F392B0DEE97EC971E2EC
2982E6E032801E9CEC4BF93CC3A8DBBCC487A25DB3399989BAF2D45C549FEBCD
2148CE9C1A1A5FA988398D39ECE136AEFE1223F4DC286931FC6C5D780E2C4AD5
E58E44D0A804FC6B5AA67EE4C727A66DBE37DDD66E34B5B07C8E20742700FD67
ED7CFF24A663FEA616FE9F202F06E6958DF600EB3BEBF9B36A959B89F70C177A
655A68787E44B06676CA4E4B0F037D7BF80F9A3070A071749F9065C0FF2BB4E5
710C157C399F207F83C39362C90AE21F2CE5FEB2E0841881405E65F3B77FBD74
F9B67564057E9DB1645AF5E9D42F583D677C4FC07E591EA75C5CABAC20C7357C
9F92983F88C59A177812AB8048B6BB5A32128CDD7222CD93FE9D038D9DF66F7A
07BE402921B22605FA24A8D611B9DDAAAE4BF12A22DF846DEBCC4209A5F83A4A
8A6553E0B20F41A612D5648EDD95E3B810372562BF7F66128BC5E7EBB44D39D0
15E7C67A68100895FC85EBED9D5E4C971BDEB0734A41C1B44D646FA444D0FF81
AF05DEA2789EA2857CF58E39B0B88446D977307D626588B8F9B4AED5DF1888D1
FDC6DDC9B59A5A6947AC0B5E9C9C11C21B913B6C4E85D96017BAB6985091CBAE
95C2E7B9DCA37C27843F8043B1A2403E946F3DFD26C87CB689525FC50E21B855
E652A09D25269AFF324FAFE7A3ED16A1E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C3284ADD469
2AC17DF0F50CE04DB21BB8B276691749E2E6F9BB3074DA40AFF782CB25E02AC3
566126F3605C5D91AC7F8E69FF15FE9F998D6BDCCF481FA69BB6B02740E8E674
BBF93E87F057BC472913D788E66AD436C8C5EB667A9E200B11C78F1226D5941E
BF08A7D237E81E39B47A6F25B2EC9290B2883555ED7DC703B3EB5C0F679227B6
E811F2C38700DC5D6EEC5223F0FDBF80711A377649E17BE3301FB1AB1AE47128
7800936B812CBED8EC4E0A114FF329C5D7372EF249FA82D2745ED89D47EB2E62
91A6066F1FE1971379E043F280BC4E314A0EDBBCCEB0029773C9574297BF4E64
D19DE34E73FE10D63BED7FDAF89910094CBED95E1E0B88C6A32A3A600D9D43A9
6B9D1102CB26CBE3E62D0410DA79BAB5DBE07B0A843F19B70A1E36D8E39CD804
3BF8DC51096B86BE18226D966A6798BF0B806FDBCCA4518DD1E541D722311B5E
A81935F8964877EA225920F3C7614CD6E9660D94B695125E153D94E058F3B1FB
5B8309A691332BDA82C4109E89E733A74374F9536FC268515F6F307E59C400AA
A9D4A555A2AF63A060B6DA36C22AFFDD2FF708C1A4AB6F0419F9F693D459C15D
45CB50480AAC4A6417ED2D6E041FA990D2800BD436149F76989E8C596CCC628D
7AE7A911A5ED5DA461D25775B0CDBBDD9BE156186BD5DB221798058E16CF0AA2
F0BC4976B60EC317964F2528CDDAB4D49A9742D6EE0D2972FEB9C6FF837BCD9D
437AACD7E833B9A997CA465E88B3C6BE6E884518E97D1F69F6EE5C0591618E92
3390209AB2550FF8CDCBC94847745E5D1AB1E9F77B0F4A5ADA6AAC4AF5B21906
B6E84D094588F9CD1349304B2F9EC45500526C7CAD819FDB734187EC45896AF2
EFEE471AEFBDCFA77B04FBE05790450C55CAC1E604231E3E61D172148F9EABF7
56E05F715A5315338FA6E73ACCB29E973639E69350045D6C39603153EB8CFD39
95AD4EF23AE4E0B652F5FC546CAFC8EFF16F8EF4DF58E7A22B440D8CF1205D53
76CE005F20A228CA0F77E108972FEE2BAB71FCB7AD4FBA4512A985649707D349
1BD07BC10DF8BC4346A3EE9254174512D9B0940FFA97F2BAAE7C7E464C29F2BF
B06CA814AD934BEE98A8F2B43C464F6FBE67ADFC4B48DD83A503AD5C787C37A4
419715688F7A7AB477C002C39ED8BF34725B8D3E16A88A2C6B8C17C2867E5AAB
B2FE17DFC2ADD8C2D299CBB710F342C01EE67D98A78BFC11246FE62B38E030FD
F1E26BEE26A7165BF37E239CFB5020DB68A15951AD8234EBA5D130DDAB639886
6D8EE9AA635D6245374A3C18CD6904A2E532942A19F0512A0B934DBC586BB073
5B06F5DB60789647311A16C78175C1418B5A5AF991DAF15F906541FB5D15E78F
0848BC6723AAB8C4BD004547C597FB78C6FCBDA374ABB613C3D6D68DA8449B10
2B4A3C4F4422A710B0E857532D2AE9C83DC2B15DB2DC33012FB2612D647CD2B6
F590A90F42F1C8C31ABF0B11A8D2B044BCBC85E9610C4F4E5810C493EEEC7F6C
89A96BA5AEB9DF4D871BFD5532A63424DFE24148CA10882167F1B26ED72EF7A9
407B98514E1B8B0446E922572FD38CD39014B907203059BB36A10B51E96077C9
CFDB6FF84F3C5238A6CC34B192F5FC6A3AF74D8148C9976E52BA3B7278495380
28437E68420A73984A0BAE50B73FE471AC2362882413CE09AC78B0C9E4BC6500
3CD13E3E4856939DCF8EDF9FDC59842E589B79E97862BFEE089AF2C6CC99FAD2
726E5180693C7DF6E18504BAC99377F4F84DEA4206B65064934A603EDF94425D
7246DFA10483B09CA310083CC6AF9DC188856922023C96AC0D7859734D3A377A
6AF8C5EF8D5806C64518DD66659FD7F848C2A7E0DC4D69B6793520439F2DEA94
BF041792494691B655CB9C88996A27E4435BDB2A47EE3C628F9A334F62DF98CE
C11E91273A1462E03B2CC65477008F94133D944C5672FBBDD96C88817992E7C5
8E2CDB6A03A7921BB98707668C49322FC21ED761F5694674FD1D0F45F2F597A0
F043F0882FB76596D3DD6ACF0F1F7F032789F779AC3E137CD668FB696818E5BF
E9981D7AE3C5292540E1B13F2EABB369292A66347F2DB8173923442A026D28A1
8315348221578E4D6568DEB7636DB06607265CB3B1DA3B6AB533194AD1FE2D52
B56414E4E2D0412F2640193FB4C11B628B429D2BC82BAAF343849F3F0A5FB8EB
6E8957BAE9A198D9B5451A86946F7F7FD5A44118D1C64E3A6BA529C4BE8B1AD1
4D60862AAB2F2AA9A9B7F03F530456D6A10177BE5E51E570BD135E3CD4C130FF
D5EBA5C714719FC64B04BAD22B19A6E4A9A45C22F467218A278C0BCC57F77F65
4EA4164E2B9BD986C480EEEE1DB28D42B03DE13EEBA9C102C40045692EE3B526
43A0DE3E62386E71104202FB3F677DC4F398E82228CEB92CE0B69910B7F695DD
49F678A39E12B39B2397D00BB653C09A33EB001C3B895E824DED43C96305B0D0
42E6D59B04955C1F1B0F125261DA0D2F7312CE5B3F3A1DF658E6018EF41C5D41
8651E3B1EDFE3F14ED7BA85AA036C084C675CB5F90993D09ADC292397919D94A
CA804FEA83B77229E55CC6DB71752DD0DEACAE196EB3927CD29B70EA8A21FF44
CF705F818D1295DF3CA75EFD6A5373A554034710B4A9DA4C7B3F15FECBC03663
4F66111753819D477857A53E17D0FFAB7C8A91B883DF2DD47FDD36B3D8D3959A
F1F3B2A47B78D0B46031C43A773C9609185747A755A5367DBEABD3400E018CA6
1E48EFCDA499B4BE0BA683553D8D81F1D292D28F227F7BB0E90C60786A2D881D
4A687FF8A528BC0BBC9FB35608B3ECED16F2C9747D6CE7110260D031AA1B44DB
897257C230BD99B28E26FA027770565CE44093B2BBE8CF86194A56E683667618
EE564F22C2D72A70F73C105348362C617D60BA3678C8215B9F542D8119678FEB
205E020B27F5307E54B6F4A4858CEF9F21F734CD35841D3591791B44B4BB9C9A
3E9F43D0E7FC29C26F6F97012F4FD7BE86ABD340C9D85B35D5952207E49D4320
438259A1AFAA427926F4D66802F03DBAF779347B5125E4C1B5EF7BFEF85C0645
225BD496F93E01565E7170864D80070BBE677BAA4410CEC9E60DA3CD129ECCCD
3CAF64DC7241C0E601130A5535038B5146C60F4C0541B1C293FC89FFB9D41A20
7FC185D02F9114BEA835610A0A34FB1B2D977B77C87B85660963027167B286D9
1725601D8AC94F2F2A777D6B1B40215984B0A41A1FD97FC46BB3CB958F630459
650661A7B4A0EB7BB718A73402A90D516109F565AE039A41DB1D1782C94FFA87
2978060E65DCF7E739D1913657FC9B269D1006FCA067BD5377B5734328533AF9
DC509D70FC085952ABD5D2C8BA51EC4C21A55CCB922488522C9046D74F177EA0
EBC1EADF96CDA6EE4C537037635054D62FBBC0D754AD58FBF92629DC8866A069
8E72EBEF0828C74CEC39EE946A6047F6F4ADA19A0BB09AAD30675F74816531EC
DD6CF5B5855512DF75CC42537349622DB8431FCDC66D5B4AFEA09D16237FF745
E42FFFB137D0EBAD684EA2927843B275CC979611A1938C4851C3B368BADF695F
79889C41181A1A489AAF6D96D7DFD513D6973D7D44BE45DA100AE914DEE5DC4E
C4C136D2892E1B1B3760EE57E291E813A10F30221CC58CBAACA6413523264D8B
DDEC5361FDB0B4088A7216C37FA27D341F37471FF2C5C11A3A9A52E06D8F85B0
D0BDE4B97D79468FDFD346AD699CF01A4F8F028EE96EDB955594BFC07C96C2C9
CD858A41448E51FA93EE1CC6F6C2398A819BDD4BA3BAB343520564D7CEF78D51
D42CD1E6C58DABAFE9416AA5E06C038170385874DF5E406846582FAB375C7226
8E0B3342404EE1EDA128457B52ACB5A7A66796AC5B92ABFB37B56F8C6858618D
B631B634AE4B31E66404FC230364CAD88422D62AEF54FFA73495E90279C876B8
0183949E8F5C0E95C0CC6726F5C6EC1AB532CC4F900F7E81EB268308C0EC5F43
DC92B39BC4B2CEB9827F51E088BC722D3EE3E5846EC08A76EA5C2013208D86D7
538A439C92E2B3FF083A22D936D631FA9081BBEAEB709BB571CBD6D5EFC59840
9D0454E1DA188969F6BE3E3B8BF2300DAB448856B987062BB5723748EB07F15D
EBD25406710AE128438AFFB7A17F6FF95EEBF7D280D4CEBA3B19AB900DA52E43
54BF7EB33500E93C3F5B15984720917FFFB011EEF7ADBE19BB40161AEB9C716D
3DACB2F87ACAD629104D5BAB69B5C106B75F5E819667C967AED169E4703EB173
794C620B2330FD5BC7B6A94BB5623BB3A3F71C1934F4CE930B479413F05F71D8
C40C2ED21271DFDB8D5BED21A826EC20ACC10746D0F8F4CA7B7F1B206AC3ADCF
1EAE7397048CA1885F4352C5A19C2768F0490F1970AA2D2AC23582AC20A63C12
8491EF1D34A11F44FE5F13DE60AC8DB8C70E463D0D2140856AB3F76D00733A70
42E8A3DE09F6B92ACB49C2C850A900ACF5D2D9CCA80BED4B6FA963067370FF7E
090C113A540312CDA7292A0F2FBB4A67484499435270B17B9AFE2E0C0729E5F1
0461A8DDBE0FFE42DE60777063CF5413960F46F7517CCFD8957FAF326840D964
237A5D8E44ADEA1B53ED5D12AFE3E959E13225EFBC684818AB259FFC39EF8EA3
50D3308C57734B39E02062C81642F7F09E2A9F0B3DD33EC96D544FC4AC8DF750
7A1F14D6555BA835AA8685667813F84974750D8D6023694DE7EA408F4AF0983E
99D27F9136DDC4886FA8B33E120BED34DB66E8A9BD83143E4F67AAA0F1A6242A
B76EC06FE3EA9012AD3D9EF3C4837015DD1AB0A24A449B1D1D0BB4CA074EA381
2FAFE2C6EBAD80EDAD5B75B9CC62D551B8EC544EF00ABFED779848E93770EB08
B06DB25FAC9B50CA675BFB2D70090257E18108206A64A0577ABD20656EE99E9F
F5470C355ED9665A6D7E438C0A638968AC06481BBB1161022A4A5AB0CC55B8ED
57EC0874E26BA43EEE451D698BDF3DE1588EFC8C054700D386CDF3420F37BCB6
A70B9A92E46CEBECB6283277DDF91BAAAEE61A2B30C71F43F4164D26BC061ACD
3D616143FFB85D78805A95B8CB191C775A2DDEB0E6C91C1F7EBE547F10F4F1FD
4C20B8E3F22CE2C0394A4C437B53759A53B327A58590CF7C5C68F35EBD38144A
B437D2EDCB3A0C69CD0FF8D30FDB5E9BBB0A870C3BC06C9A6D3D1E591AB22640
7E6C99CFB6F3DFC7D308B5A194661576117EACDA8787FF9BACD78AD923704449
6B37B30FBB23114B9CDF03235CC96E832A27D6D3F9F1E0D4B7C494D730AAE868
F185D541458067101B1F500FEBCE81972823DFD0AA1DF822BB91C547733B18DB
B01E4B38BA7E7163A723A9E71F504DA5D447AFE8CFDBD88089FA4BA53221535F
9925211A055311717C3A40790CE640672F1CF72AC4275FDDEA364B0E8DCEA6E5
D95B0C3B9E34A00C9FF7962131051DBED189110BBC284A3F8BA1AFF0AB27B21B
32C3D2C11C2E7C97C69A5EB84621F15C186C055237ACB3FA57E6936FB0AFC41E
052AC3C1FBCA78F1BDF2CF6B1CAA6F59DC727C208D7186E6E020939F4E5DB2E9
72AF91488B86B6A05134D14D0B4E7DDC42E3039E13DD9EB8984B325D42D1AC4C
7D1E0ADEFC6410F46890267A3D9C02F00B43F697D889D0339D2FFBA5F17EF15B
0744A8B77766998E83E5365136ACF7F9D099F66AA8A0584B107DC5C6E2C88FA9
336082C86E84310DF2E15C2A8EF19D92CF278E0A59282E4D69A45273B491FD52
EFC98B721716C3804560A696AE042E15B54072F2DDC6498E69F5AC7DB51B3B89
D7A218954721CABDD00A51A9D83D24A5D54164822C8973EB8766D839FDFE5808
5B97DF00EEC78F73458363E5A5504D88A31C2EE5CF4421803E88923DD4FDAC41
229306EA37B9DF6E8DEB1C6C2BDEC9E6EADDE88281A32BEE7006163F27C15300
0E975E7513D015683F5B976B3D2246EBC69353B083453AA83AB1657ABAD93B0F
A42CBE52B47D021A4F8313E43F6C2F11BCA28310F17030FEA535971EECC6EA4C
239D51CC54EEE1BA194906918BDD84149AFFDDCE09BF6427B2F8548CFFBE68A6
3514D755943368A9554B60AA09E892F91A4B3291F21F2501A3372CA1DAC1ECB8
3AEF8ACB06C7977F5BFC46D8F8D28B90F2ED9FFD88F15A1BAE76C6EEFC79C130
434E662F5BD5A48D9339CE85E9CFCA61ED0307BBBA715E89BA672C60300EDB43
62A300FADE7E599A9EF640B06297EC66B2F0DF866A9883DBD287F8A9468A02CF
8B2507FB48406F718B5988B1153ED1579574D5351815A959AC06FC46BA134861
D7909DD258C734E3438660B1212DC548122CE2721DF837E5B2B896878BC0757C
5F12A01DD1AF9F1364CC3955AE63F87A835B061FFAC738FBB1D8FD7997532D24
1DEBDB9226A718F5C91B254B64CE1B7E5DF78A6D47AA0B68726329A379A84733
FD838EE0A7D6EC734D9D7590D7EB45D97339E04262BBB08714E499C25FF66E62
5EE17448DDC7921D19EA7BAC5E8DC32C2C31D242AD27EB5B66DE28B493555DC9
C1EFB55B07A1FB09B3C83A841C114A889F2AB9E0B73E677346EC5A149B4C5419
74426E0A49959A2E536B4885217F13300DCABEEADCB29B456A37836280AFDD29
06A580EC1DA1728D0742EC26BFC0ECCB903E60990800CDD6E3C2DE8F6D74C20B
00FB93545E8653E95751A2F360C881C4F73679F1E97CF91B7533273C9927D0C6
558E574737248E896EA5D247A3A0375D0CDE2ED179BCB24E2C1BA08064F99D9D
D097A0D3DCF50799B2D7F3A67012298FFD77C86E408B440F3772DEB423173954
25956050D659B481B20E965700971760F2BB5BD4F22278751F19FB65C1A58102
6530A70FB7098DCDD32D50196DB59DB2EF658AFF7B6D6A36214F6AAA56B4CAB7
BECF84A72C1CD5A5823C275885BD2F1F8655CCB677B3E77BECA332D9487B19AF
F6684BD4BBC2CF0AF306E803E2AB0AF6A68D0DF4CF771AAF947AA4589022D619
822D08CF5A0886232C6D108E412BD4BE5CE97A0888D8E9DB769F45DA7EEB851D
BA2D31769B9FA61F4EFBF36532300276FC416936A9F84FAB95DB2E33307BE592
55E9FE41A6C634DC2458184AF86F54E4584DA84FC023FB08A06D1D7C76EC3DF7
61CD6EBA3B5FC5393EA92C7AD6187947519F176AF47AC6FAEAFDA694B9771FDC
BF878AAEA201D638417795778CF2DB1FCE16EAF7C7DB66F72E8859F5B9B3F72E
1D581AB4561F121E2B4FA1B159867B911B604B7DDFA3BB67D048395E9654E0F6
CF1BD454B7798E882C4CC6CEE9E1EB42B3090F6DDEA892BE5622E1DD28864867
E3153C7DDC7C7B62F70800B8E7CA12367E0B650D73C9ECAFD5EE420A730EE5D3
D11CAE01D4F675933DA6C6334F2D232C1FB3301369DFCFE170AB77D7666858A7
01942992FDDB9919DE1A1B5A47A032B4A61AA464C8BFAE9CB3B640B9ADA1BE77
ADC861EA69805F012C8406F0133DA80CE6C934DB903C987B30936FE2A3D4A018
465E92AE99854DBC40DC9383B1E9265F5A7391FDBDB2E17A4AF6C31DD6C7B70C
3202B10E7EF76412065EE5AFD600476F2D50B8490A9EDCA7267AD9DDD7D0C42A
26913DBA29E1B410E445513DA6F62E443311A9CBA44E58C9CEC6C722B8682FB9
88983CBEB8DD55EB07E2A21B8CC24E196E5F8F90A47C76FA86A558EF8D0E1F53
9FC21CFCF7648A0F5669CE95FD34C5BA722A55634A5F7FE714F5713E4496504B
4AD3028939DA405FB3BEF28208166DF6D2113CC49B808233C7CAF8369237ED3E
0CFBED87CE6CF697750210FD657E259B2FC6FCD031432F9D62009A3E48780419
EF910F42BD31CFE5EB8A4A5A915AA429DE78DDF5E3879446BF07A602184C5E8F
A42B6873C68516D947923E1388B420836FE52E18111F2DAD3F0D92D8F6152E72
224D6BC313EF63148E56D394077F3208C3AAE0F195D3971AF652168F4514A71B
DF937A421B2A1FDAFF4C4C2E3D7A33F7E3F4BE1B0E6C19D3C4DA2DBA977E052C
5AADCD46523B617B17731447D9422721EF76114FDB6F914E572576B2B4EB12D8
DBB080EB9B8C50D0A85D7764EBB3116667E7094D448BB48B3DE2E5E78B23BFD6
8B6E7004B0A6741CA3348BD1A8C1A9FE052D96CBA063F1A0F546350FAF89F6D3
9AC54AEC5FFCF8015320885C25E9CEEDAE600F0B19A53520BA4984D7D8A1F83D
15821C3434D8AB87535FF2EB0F5D600840A15E1E7C994D1D49ECEC4FAD018235
81663113C868C4B5908C43E987B2C11B416EAE9B98D9CA8982165DB637119FDB
4D09B8D636F2659B050293B772EEB72D9CEC2CBDBDC9CD4940718A7EC4216B26
332A4D907DD266B99A38E0280CA3408A3A1CE835F9A66C25C013953079392CE4
B899BA079E692CE060411F43EE75848DC913B4C8B554FA1F9FA81E1EB8A82C99
C006724C6CBE7D11924AAF00565EFE1C2ADC6FEE36365AB5488B6EE26E087DF0
F82247DA67606E45BC24E107B72C48E8B3D0D4D51AA5B621CC37BC0A79128D3A
13CDE1EA43EEDB9555B67246EE5FD27E0BC00F43088B33762F624CAA4277CD60
D33CF0386F6A52093D5FF7A09EE2FD9C549EFB83F19524364B65F7273E80BA61
89672ADFF8BE08C54A128B763B5783992699F8AB62169F7E03D9ADB1E695F8A9
643B613E58C36D0BA85F3B48983E5BBF848ECA345CC951EE1AEF7F10FD044792
36E6D43BE1E7A55DF0875055CE1F26593EFB88322ADBE4369FC38DD4B2E92181
3840BBB936661C8C89F5394082EE14DCED39005E037A9144F8225971756B7F24
8A2ACC69AA8790709D2E68345B485B974E10E26C506CF003828E7FC8B784F2A4
67C013F5FD9AC88081495CAD8008B3478C85FE945094FF2F32757692DAF85AFE
FA29B9569920B169BF85166DB953809914C7F5441231F18390CD8702F6EB5B77
B919D5BF0E6B0C5982FD14208894F581A8D57AA9BC542DDC33796DD754902F21
A7D1E098EF0543496C894EB60506D9D70E9DAA9DE6505103AB643B17839960EC
C8D9181CE590B797236FF574419DA86BAD7FF817F9E87FD146822A88183AAB12
2A8BFFBA874A713BF6E41EA6263F6AA81EA365D43204F66178A062EF83BDD70C
335EA4CB6A09B6D2BB99C69179791C48BCF71FEDFA19CF0F618B2EDB0F75E759
CC40FFFC1797583163E896A122902BE2DC199AE4EDCAEF092D1A1B5658468CD6
ECA30174E28F5FF7D70E3A414FAFE4A27C5AA88B852E61B5BED4B07559685480
18044311ECA066347C0E5545FEDC01DCB1FE931F5E87E5141676B89BD125C739
AE9B8D37AD4991CE426D1DBAC37A0EE23D4C748C1866CE9FBA3A88C8FFA9557A
BB2CCFF15B29B10852D26E323A26023523B61E577BE91147D85532E74AF3B4E9
5C1890BE14355A5B5E16BF71F4854CB279DE4FEECA04DDAF35F66368EE062D31
D12091AF98A361E226EBB395818254EC1FBB9C27A105F148842CF8D7FF22CB90
5972D30A3DA4E0466932852FB89C39C155B57B67D6AA840A337AF5E7A1A2F564
0B1ECE645F2446D1DD9F9951233B91E5D7CD56C3546D61EA624002296A1EFEC9
1D663C072DA4C6092C62F0C8B0ACE0100FE35A57969E3EA08065D15C3656F5D1
4DFDDDBC0BE15942DE8BF4F80B0FBE5BBB8BFD7625CACC62673B051A05EBA658
F8ACD284C70C88EA41532E15B7FDE653EE790CCF5D841DEE055DD9BC098A1099
6144BC1634C9E61C52F40C9774B8AC8FA60C4FD28FE29E46A3635D2A23253C09
66D58357C398429B7A6EB192A641402FB89E850DF20A138774E8BE78CA65F8C5
D864A0AD1E16D005A1B66901FCCB3A19C10878D4AD59D0E0388DF26CC37F83E6
45B8EA69531014D53916E21601765E2E0F5AA9B4B6B1D18CA748F021AEFF0C6F
B520253FE6088282CB006D9F5CDA8E929BBC74D26EEF96DDB651528F1DADF2C6
F1401D01F9CAE738DB58C6D3E6097892DC032B074178FA498753
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF8536EAFFE3
51E99FBFE366A8105105F3ABF883222A8596B5C71A798B4C25D89E1A97DF22AE
7F7C5F36F1025EB753B8EEFB121487E91658D1692E96B6A021CEA623CCF6C9BC
4ACF593CA80F3ED850D167CB091D6F95BE42F08C85CA35DA36AB230E3D91EDAF
A2B77B58F4D04FF628190034DCFE58B45A71579F9701691C2A5A57BC5C6B1992
738F39E279ADDF7FC21D76436C5E22167202C94B089B617755699EE01A4C7B87
E4F5D46FB80565D7EB65EFF9467A98BB2A1B06CD5A8AE30297EAD23237F1A1C5
F538FB22CAB1E57CBB9EF520D4E82FADAC6C3829A77B21282347CDE770EF4CDB
A6BB2FBF3648C5F5A0B3BE75E98F6E719AE4A222E708C468F8B757E3E4224BF1
5C2546FC3CD2F4C08EE304C75F8C275BA31E999ECE027C3F34F3A7994822DC58
7BAD51CF47D76895919973DF3F8DA82E7835A49860EAFCC0E659A9082991DC31
DF0B088BE04EDAD1872737624823085304CA2A9E9480BE92186290FC29C3C7B4
C27598C98A3DF3EB0CD389A52BEE29FC22398BB244AA98E0534CD3FD1A44C8A7
4DD5CF9B41D608FA42669681F72A3C3B7CEDF181D84B0776AAA08091644905B7
43C26A74C90C77B605EBAABF79818A68219E858B6E4B63F8E9BA65BF43438EF9
F52AF893BBDA215450E6174C5C555DAD5EEEB9110AE468D1CC587A732FFAE035
6382226C92B9537DF8C4F37383902B4E1665B01234AC83DF6D4E53F991531228
15AEF3FF77045FCD774A4F81A5577BD4B255CD6114AA6A305C8C2635D44EED34
55C90F1D36E21D52A210FECA5F50626F2156ABEC6BC7453597A1F20DDDC346E1
C4E776557BADF9158C88A253D74774970B11342D30A798FFA9B26E48E4728D19
5114A9B35634AC999453690C2945D12A5044CB0AE12FB168192AEE4AF696EDE5
4CDD8A7B08A1A0E70E5CE0FB43E820AACF407DB268F2760F36F91A050899D71B
F8873C2203C7003FE088725F37CD5EE2122D79E9E395F5CAB8B4637839E43022
2CC6CC2E73A8B7B88E1A128C703B117F616F6E9F716F0319307A660C06E76820
33B4376512D85F65AD30E430DCA35434BF21A4362A89E46F7DC96AAD0FDCD2B6
0FF9E8E2D038E6DDD5BEE6EA025BC7ED8AB2AD965E8A5A3ECEEB801B73F312A8
24384B68C1E63595042444FA75A02D07082A94D3B28BE10AE301CC183BA579E4
45175C7443E08C57B73429BB93964F504924FE9C00A60C733E43A02B47AFE712
90BB2D5AB03FCAF6FC56C26256B9B2FE8226C32B7662157E6D94CC34A4E8E3C9
2492497C65597085592B8B358D93E8BB74CB357380F47D21E1E8F4754E16647A
BD41B7870689AFA703C14C6CEC9C660F929FB67086BB7302290BD3B395000680
6571B9CD0D82FE7969C2356F9388609ACF2038E79BEBA97AE481ADCA68963746
22F1AFAE92E524E801943EAB41D345CBE471FFB288192C67913019CCB8D949E2
DE5E95217D9C89F8A76E6568C4CBCBCFF85CA680A7F1C5C5F2E5ECBE4D2F5511
9A0FC4A9CD662111AF6D1E46DBAEDAB0AEFFF07735D75C5FE9EE3134E9987FAE
BC8E47930AF89858EDE20D191FBC1B302043F06DD5C6C0B583AD1B76D458E958
3EACC692913D9C2B7E21DA0ADDCC8C72FEB0DD3D0308B396C6794D4108C4B009
0F25273486FC05C819423D837ECC696F1441068E565CD2EFE54417BC8C30E340
5ED62406FC0725BD88C5C0BA4822EC87DD6E2230044D201B03D979E13EC12C37
00562574F26A24E42EB7202E6565A0071252884B872D3A300F52896E507972E9
D2B907C6E8ECE6CCAC7684B9DE946532C896F4D548B6017EE32386CC7D782C4E
605642559C5D083BBA0ED606E1C404942AF2DB61C33ADE345C6AB919AD4C51ED
0C8D95A7A03D8ACAF3911F47390051A3A2055CD35D520B4061E6E8A158E92E8E
97722C3457AAFDABB03EDE901C372B3188E10E4599E767C15F2DCF09C7395917
DB3DB41CCBDF5DA816E2650FE1A8E7449093FDB99959E6E37BA455D5FA7F1B06
AC07D37AD0CE47D8A249F665B33CA0CEAA29B3472D3EDDF379166825D86D133D
B1E1BE7ED6FB2E9536E75E87C380B5033672AFF41409DC976169C2D18282098E
151B760C9CE324FF020B8AD5B274BEB892DD3EBEEB9BDAA6679FA80338D1D9C6
529AA171C31E8970A2703173036CE5374FBF3968519BAEFDD633A0E366529E01
74005C85080B2776B80280051611EE2741AA7E7136D4C8818B84C955D42EF905
37D9529079DF418C1143561158DBD1B88509896A745587FF34076398D5E137B6
E173391BC7FDC4C3EA48A011ED335CAEFD8C3B6AD1242A80146250DD77B44844
933E182CA7E70AFF5B14B02B75CBD0738E35DAD8E609265984BBDD588CDD10DE
AA79E7BAA7E7FFA6685B01B775FECE0C07E55FE09506EBAF30B9DDD8C16DBB69
1FDB28335BBB3DEFDB921C86FBEEB0F238F7A384087659245BD5AA1A57DC0E95
6ADC19E19CA5DF2F8CDE6EE8CB1C9DB76123040AAC7E51F8DEC31339FB6AB9B3
BBCAA7A523FFE27CCB448D3F583660F19CC85632BABFACACD94FEE021A55C270
0F2280C59FD727F4DCFBA61B0BC45808F61718E2F129A68BB29D582E350F7899
1994C11561D91FDDB0FA2EB580C3F5AF193318D53C19B096B80CF3518517E3CF
2BA389E8BEF8CFEF331E8C761B46A4095017CA749D9CC4CE43BE942101572DA4
2680FC0C160B1E725C2A1575632CC37D3ECAC2CA3543067174F0A1F623EF50C9
B12A3625983343269E8ACD6D71F59CD9EAB0A228BED6672331CA552AB2211E6D
BAD7D7931CE6C467F9CB65F032A435524B5C1B8CFA5229C6CA9C8BB7B082707B
2B03B472E896CC97E266BEA49D45C34F344120945336E5603DFEDDBFDE36956C
C1110693D296EDBB7F76DF9C9448278E3C8A08E91D957673B94ACC38F8758BF3
D4ECFB43D84299D33673E84D99B09F7FEFA3489030C1FE927740F29EB1D80F4D
60994B9841785A377745A5E3E9C8F6C0DA8B560BCE27310F7EC0CD58BF64D292
D55ACC9EFAC4478CB4D861DB28468ACC794D757BA73E91CC44A5A8C7B91AF40C
B50046C13112611AE01743CF9DADB804088B4ED3B243317B99A0585FAC94B2A8
6CB2CB1B3CD5FA6A7BC0ADC7226510EBF89944E20FD974CFA67F94EC19C3EC32
AA714E650AF2849269DD0975A2DD250FBD151440F4C5CD454FC67C6D401E76A4
F562BAE67A549B42F8CA5FFEE0F6BCBC22C8E91D6F1FA7D8CB954B8D0C0C2918
E56D9F2841845CB62FDFD4E5D713249420BA2CE02CB727B8B6F469C01647262F
BE15DEED450E01227BB1ECC5D6A8638F4C12EE82A6005B0EBEAFE7A8D4B829F1
79550D487D6F52B36CED26616B19C51800E0775AE8375ED2AAE351AA5C1A5E2B
A2CEAD05ED5CA62B30C1A82DCD698E087F90D4D6011002292DB89FA1B25960DB
9C9484C45FA411DCA214D99DBB3AC226FB8A83ED211A1236768AD832E2608F94
AF1049DAB984C813B903F1EA82D8F6A505080886ED3E482820E73F4C6292DFB3
73FFA2E368B1AE45940C9CF76161AC981E749AADBD12CFC797D97F7255E2C3BC
AD680E94E8B190B1C46F4187DE1734C9715479749E782943028A304E0EEA8EBF
928B644276D106E370C9F20A160173B95A0508349AD1A510801C278365895F88
C1AFB02F90D7C215D546EA9BF3885FC7D7ED27129CEE98E3AAD3BEA22E12E9C4
197D8FE1890F87AD225E55F646409D3C1E1A165DB4B6EE7E3ED3A26B7E8BAA8E
DBBBF1596C47EAD8E113696D16488EC2CA310B0C8F30A5B5D8F2978F16ECCEF7
F5F32B7B1DE10A4276559BD3CA968D68C21B261542210C610ED4326935A98645
9EFDD766D4C58CB3B07FC6046CE55630AD1433A3C2A2E963413DE188F64E83A7
F9F3D329699DBBE3B5766E976F7F353D8FAF3B42CC604588DF5B1D6C79930201
F04D334FA6322D4EE6014395DB36D2000D56451DC982EF086F87A8BC4D3758D9
5D644A025973FE875E46EADAA1D7CAA8FEF046F9CD1FDC2340C874D6E03F38F2
3C4927A5C78ACDEBA15AE3286A12FB7DDBA121A5144A7A74AFA674636FA3810C
AD5A4A8232E8168D42C9493201B3D7BA51638B64D9349C555058FC6EAE7BCBA2
D600A17E2BD2CBBBB92D42A7DD9BAD8B491B09A41E67FAEC8A14C3373674C1DB
3A6B32B70C9C3412BBE55489A380CF735368E55451A1F6736662354B6B120B98
696850D6E3E1E54137BF10D56A204936B95803DA1A4374E582E6B53537033F63
64743690FDF23FFCA19BF838C244DB292C82323CB58935F29AD627F8D7F112A1
885BC7360B18D5B8F984E3E452D196EEFFF2D9E6B8CE8CF9F32866ADCA85FAC8
0972531D77B30ED892FE8D79B29D080975D3906211AEE209AF7D0E95C59CDC17
29447877A644484A3869FCBBD7D8FFDFF1A11E6880CC855C78BADFAFCE410F30
4CF8B73656C4146182EFEB57EE45E70BB82136B3D10678241FC5206826DA580D
5289F2CAC7C0013DF66657D8EE72A404199E5468D48BCA1C22CA313EDA6845D0
ED2523A0088E898F30FB95883314F50CEA48BA45FBD6DA80788B39747E420BDD
64F4F2F4A57F7D00D4347DFBB8BDB4B2AC6D10354BDAECB0ADC75F19CDA3E19D
AE9674FE5C3FB4331BE4268D2ABD678D388FE71B8F9DE92107B5ED0533F50E17
5D11F5866255B7284A8C96E8EE35D37931A0D63305B3EA8B1E7AC7CDEF67599B
2BACB2A14615AF70E552F8587F1D8E8867D4C272C32C7F7BD64330E82B7ACEB9
610D85ADBD03E82B91F3B1F1735C0C3182070DD3DD7E51271D558F259A50D326
B19C2B80C3EEF0AABB7C9B2BC9C39A3B63131A6F66C8B22AD55CB56248A58E2E
FA2472903691CC7B2A8DF379E2B7854F1533E35472CE3A8949BE328E4DB60671
0CD111B6F14062B26A4D2BADD16DBE44DC303B49135E6E9D4DDD52A6549BA2A8
83FDF4C04A1EF9F3F00DA7F680A07649CB0BC7D9753A11E7A1855EFC863B6B0A
804FFCFF797E77DE5AEB3E7FD2AC4B1DCF83661FE8E8FD33161B27F81DAC7501
992FB43A95F68988FEB8E94D72500C4CA36EF88793B7DF119D06A78C4DF94E45
5C10528E2A14C57CAF1B967606085508DC26B5ADFBF489651EE160EABFF85873
108CEAF75F8A723F07903EBEA0BE37582FE1DBAEF61A6E0FB8844DBBE6931182
2F10C85E6762C4454AE40440AA00A6F3AB7A8D39A5680BD2F83C80BB7D7E09A1
2C7ECF0EEFAFFE02545495151ACC71A6E1B96BDF81D04C7843C58C48754B5E3D
4A3E24DC2DA10A7447C93D21796FEF28187AD330CA81538FD8D9D5B7478A9A9A
196455266EC749D0FB4EE3207884A853056D0EBA158B40FE0E15AD22D7CE518B
6E0207B37719E48FFB0D86EAC801CC61BF1F5952ACC0ECBA60B7EA8F7AF16942
A85014E2F2E3760BC537878353F59819954B5322276089683DBA32F9F311C111
185147866DAB8FDA3F00D9C6D31F8F890AC20CDB4CB785A9D5D5144A6F3837B8
B5465D305F31148132CD59EB047A611CA2B9AAE90E647FD0E81AAA87A50F7EF1
57AE0528CBC7E027FFB7349F60EDFF10A43F7F53DB8790493D8EB03A0E0C835D
B20A9585EFCEA916ACDADF6691E34EC130A2092285164BE38B96BF1008A17E56
A7C7676748C631F1C650CCD536651D137E205029A6FBFEC377E44D1A2D51AF19
C83543BB383747F4881BBB3A8F1221C8585229D27296A0B8438BAD1E0B51B249
66C6E40E6B8AB50E334955EDC711ACEA3FF692018A3BAB2CCFB748152BF8C6C1
EA11BD4349E192538D996DB75C4E149C84C99EC611CA949EA8370637E65F58DC
22155980DAAB0F1C19399072B08EA7FD325496990FE31E58128CEB7E51AB086F
73B47C98A95D9C33AC9AB81AF734CB3B0713913526FF8967B38478FD9A143A1D
7010531EC38684DF6EA78FC8FB38AB35BA2424E89E8047AD7D73B1629ED01A2D
221E3D64D048CE34560BBF01C461E2A4B459026D4C49D6F39100C86650A81C81
847C0A16ABB1EDBD1DDB3F3EDC5FA135479FC9FA2409826AABDB6C36E5A119E5
C6E328F787072CCC9A2FD87287C8720268747BFBDD92A1472065234C63F6B47A
88AAEF32FC49A5AB5B5B58046899C9C5993E7302C870678DEBE06D256E4AC6D8
19088D50C66063FFEC2811B93E04B00B649218FAF36BF07045D62BDAC3AB80DB
4844F2CC1088884D5B37EDC8DEF2EACD9C3985BA9ACAC69EED6232692DD1F7BC
B905A78FDFD2C31E91F4374CD9CD35F8E4CACD4206B6511C6118123D57440FD0
C45FFEE20B56F0D06661ECB6C626F298AD41CCBC9D7F3B1FA0519842D3C0A8DC
3082D35617129EAD7C8B3AF8FCAAE0D833787CABD0FB7DA4F518B81FADA81814
332B622EB793C323375E2920B002CD413F5FCC5F77EB71ACEE611A7605934456
6898041893C2F514470659666D3DEEB203D4F8E826BC5869B3C54F55BC02EDC1
7DE7F40DA87CD21C92489BC74B93B7D73DA64D1C3FB119EB6310046C1F5388F1
CF1508D3927FD338384130B53550EE1FDBF41EDA5E30D55851D0844A473B0DA4
29D02E2386B247139DC7B406D4D9A37C12DBE16948F41C8A2BFC379A48A2CC1B
21A36D64459327E48CF0D64E0C56FE13B0346A9AC09FBD26123BE0E6AFF7CFCF
4EB3A0124CCD07AD96CE35FC72833F183F26C8811CE18791F20482FD824A205C
424DB41FE65595B5AC241C9720EAF63EA77B97A86EDECAFAB4E04F7C4B0EE05B
08B1B485EB3064CF95EE0B828E5CE080CAFA2B0E0205260E509867F849F205CB
EE0FF08BD8E6DD8390DFF347D0DA483447151129BE0E974FFA7F61AFECF83642
0C791DD18F4DC43EF22AAC2E06CB34C9B9C95250E781489C902F8A6DF2C78552
6405AA7B42DEAE41EAA23BBBCCFBF3BEFF198B1E0985CE9E02B9AD84791EB036
C695376505672E71A0A5B53E6C40A69662948FA7D88916E879A2B19E79AAF527
56585B2D63457D018CA22A251ED1BD1A5A4AC19F1B156E50676ADB21D70D8556
50BCF842B47D636384820F993EEBC5CC2CC0211C06E5417E02C197B010E41CD8
37CAA572B53D9CE1EC89044F607714073B7AA530ADC514DCE22BF6E81719ACDE
43012A2ADB68292BD1FB53BA49859E82E31F2C507DF980D3D83243B72B40AB00
C6C757576EA0E4454B652D276FD60578FB9F01BA8D700A0F9732C23F80DC4314
0A50596C457F1780A11BD9C4954C1AF34711EC795954C8408722C9D2123690F0
5A926F31B2D4D7EB91834DFC2DBDB8C5CCD8773E7D7E45F82C07CE8100CCA599
C6E73B0E4F61D0454C9E5F54595F8C48EE0C5F7A659F4D23D0E4E120DC1EF9EC
50EFA3C508D71E0ED04D17E927023BAB490FA8AE17AF26FB131A73123FF5B30C
960C035FFBF050CDFF8BE8EBC87432D65C6CD96FD7706D4D916BDD6B0B0ACCF1
CA0A25AB10E00E4D5A8D0C3299FD3773425FAC94A5007B4F76265BC8875392B5
354BD38DDC17CA8F282B565E841B4098228FB6D6B41F8FE51016A41DF2EED4CE
B53AC09FCFDE40EC0A2F76154EFC8356EC94F0F534692B1E9877D715480B2CBC
1181E6A95B05E92A34813E3595088CEABFB137634D2AE8694C53BEEBDD1189B0
3C88BC5BC19777A3F38F7EBE31FE7F66E30BAD26E801074446B1B55348E1E2CE
B827C74133EF89CC4C0AE4E9C07AFE7DC3807891D039AECEAC3F500A09579E63
E0451F939D0F143540CA685A536CD1FF4DE4FB36D118349BE3AD4A510C567F65
35BDAEE470EF4CDBA6BB2FB7900DEC3581E275BC94ECEB7B517E88F6126B8A39
2F9F6F39375DB5675E54C76D7531F8D41028432E91C7ADB7F8ECBF98BE634FD1
7B2A2F4306AC9C0E2C687D1D9ACE6B50F23680C0DA9FF7E6BF4298E548FE405D
01D18D8EBF3C888E7CBAE692581563B7D42BA2E6E677B95C8A9572BE7CBD0AD5
633645F38705A9B01BC869FDBC4831E95BBB00BC1A7A9D57AEF1E1DCCEEBAAE8
7CF5DEBCE73DD8C195C99A614B1869F207E6BAFA869CB82B6DDD4DCAE07EF27F
9A18E0B8548BF1F4DB2CE7CE111FF1EBC256A7AB055E62D130801F34E16CC0C8
76B0D072EABAB7EA732E9830E9D547E93C0DEE8FECB674C8B04A15D873CE67D7
CFCA851396A6FD441EEB363911FD032BE7E56436F333CC590CE2C8F92D77C79A
19D5DAECF77E213A85CB3AD5A92B277C63B178F572B3365BD62B64D05ADE63BA
C36864FB57DFDDF43F33B46FCEB8B7145DD1829E37BD833FD298612B5548A26B
8C571EDA6509FB66F889D4D698EF2FB7A49389D34979DBA8806CA82DB1D3DA69
47DB24AB221D6911671E6CD6DFF9DB7EF69C93C159E00FB6960B144A008B3ED3
DE2EFAD93BC4967FF861E0FFDD170AFB7E2BC19AD4C97685981E2493E404604B
C4A0A97D38EAC388543E6F5CCBC5780936829A15DE3B4654B265A8B3B8F1AB66
53D30FAA959DAEE60A27AE7D7116F771F3F5BF23D67538C692108055EAC9EC9F
E6F3F1FF308EA4F0CDB966CF5F8132EAB7FE8FFA990C996F1A54AEEEBD4E5190
74341D829D2AB708A555EAA7841C2A619375335A5D51F97141125A74C1650664
CD1EA82B278A73BCD04427DE2C0E58760CF824E1C66CAD3F488652BEEC391243
3152786F4E0072FCB2A687150640C50A50298546B891FDC212AEF50E284BCE7C
D729E125B02D83BFD1BF545D032AD30263E512B9E52952EE3E248B3D53356D26
CB05F32CBBB7EAC706A5B6A3E3DADF069B160E9D1776C3DA96699DD7D75448F7
915155B7EAAAB36EF0FBB33F16E0D8069938531368A1E4E4B5BEC24049981999
542005BED731A0CE6EAA87F3F5E0321C8906E9D9411BF362B94DFF54EB530FD2
02CCB548C02970CF3C9FBC921A6922372638C46C3651F8589ECF08E26A3C6E3E
304CFEBA63DC7B34EF985B85CCF57D3BE00FEC3AE7D52C6BB592D2AE15722EF6
EB5C184A12A491D67216FAD861D8F015C6EB88B74F73D0ED60B984D7785AB96D
BAE901AF53076E3C2297E197FB8F15EDE8174A8495A573F01807A82D6A0C6346
58F1BCA8C938989D5448ECB4D1A1960284658D9650DCAD18D5CF90AB4152DFD5
BD5FA826ACE31ED2B891FEA856E64BDB0023136FFDC614E384971B8415E2EFAD
B632F23DC03366CF4FE3D65E3A89F5422A6EA15814C3A1D8933C7FA934CADAB8
4750F11C191B64CE4B6563DF89FFEDC48A8DC4D94B634DA3A193FBD0F59018A9
D5343D5D6ED2A450851A8B4F4E669CC12E6CF969C21892F64B675EC0E6239A37
332AA4BA88CFB43C6E715D9F1637C31B755EA31D26BEAEB70F45890464FF86F6
BFEC97AB3161CEF742295D3F21D2C74C84D773D84D44DDE0B3782956B87DDB26
D77984A9B72F66C5AC55E5E0A5E134067039732C8F04A8FD2514990425A68A29
16614EE5AC8B656C3B1DA3252162B0A68F355E0B07FF7D24B5CF48327FBA64AC
481050F8E55940255318EEE2A46C7B4334455D2CFC459CCF2C172190989A831B
C00908D89410B28EF6F1D077D4E414EE5259FF5474A3826AE6F610750C50D579
32710B449D14E7826F40A532E3415C00E1B269AB8EF09A09CC7FBB5BC0A95316
79D8B187DAC7AC1B136106A8629D48DBD428DB94FECFBBCFF3FD3BE93CFCDF54
0E9D66DC6A84DA2F7CCC2790236E5EA07B391722FB0FD46DA8A860F7BC0488E1
909B55C8342FB26258EFA890C09D723ADA44EF06D12851FC777D153B562E8AB0
BE4FAE750C492F58D21B2CED3E2C00D6BEF0937CC3EDD1B40994CBF48FE84E23
471546AF2B607859F2174196F0B8BC81AC63F92C9311F1DC9220C74D206D48B4
BA468E465D9D3F38879DDE12C2B2DA9559674E381D6024B733692DEFE536B7F6
CD958EE0C9211C6F22347F389F855690E8C057C8CC77D2A85A1779935D93D2AF
10FD7581BDDC24E146CF66C86D11E1B064A2B59B90EA972CB8CA3E598F357D42
F3BD4C077811073FB73D34FE110BBDAAE3FEA85D83E3718B9A9FAAF727F2D828
6177EE27BAD040C6658C9CB2CEC365FA2517348B3B44B83B658C190B8D6E089E
3A0074A4BCD8C424624B234D19990F0CAA21B527A604BF5C0F2ABC111FDC9262
8C10B277A86ABDBE6F742528251E6D6B44B1845E3F87992F083B4F4214246AC1
34AF287EA914FA92CCB358B529197F5B73048B8876354F4122CB072899913124
1B95BAF623D8264E60CC2552CFA578D5AC7800F63E73965C7C5A2ED903E7B547
69B3C48544F93AECCF14EE2FF0443B778E51811E96346891F66924CC9435BAE4
DE011652DD8AE18FFDAB0BC0438C5F9AB0EE1D7B621AC36599D53A0520601638
79C3125B0ACBBC32D381F680DE72DECF2DAAAD831000E2F3F234B930BD57B07E
09F8390B24616A7084723F04FA7D9CB3E50B3FC813D976E6E5CF01D4511796EF
AF60854DC29EE626CF8E3B6F7C02C8ED058822B7168E595C3BA182014CF26BCA
F1DA0CF326950EA25E6089D53597C4740A96A92789A62DB6BA8AFBD5E82F60EF
74D2DCDA67C9D23C0F8C4C21DDB7D25F7C30B93190CA5D5A7A78C644F5EFF526
2DA0497252AB69C0A89EDA27B1B54B9C459CEF701B6C2E21355B99B5F6AF5728
C0F69BDC02BD344846024A1271FD7742CFDAF6D4BE68E500C0151AC859EC271D
984689C391F8635C6478EC211AC9929898F6CA9C3716B258127C4B7358401481
4A2D1DBB4214662987B90C610E3FC196023BE8DC5E2BC2A82B7E3F2966C84C5F
1C3CF70B9C9046AD40F7B6C32D23ED8F2C284AEE2519B09B49B3AEA710504AF1
CE52FCBD642AFA511BF6C18F893A62E9AE16110C9FB6A8EBE1C2744C84C93984
589C0067AB412F43EF897224867AD1B3B71151680018A1346E4F400FA9BF66C3
6BAB9AF74ABD7692A0CA4B230D5B79E24577BC9433DFD683E1E9B483F0133128
DFBB041A4B3A11B54B253EDE6068C67A6F2E649751592A143E8D5A159DE5F977
420C20FAB4B03389E7873DBB40270A199BF4E164BA835ED8A878735DE4379B78
3CD45901300ABA223AF9FEEF462BB34E6CF76F73DE369DD530F9E6D4462EF7D0
492F26631BE6C967D6FACD5CD1C2BDE0E2B32DD24476F5AF07EAC72A7668ADC7
78ADCEAD3194C971445D731DF9B87444FDEE5C6EDFD2433BEFFC87317D7849FA
E143B4953055E286ED18E65F5F3349A855153F565B22031B7779E09F73391390
6D5E6AF508E0AE965FC8E6BE974AE541672EF6710D3483080DF8A6E9B6CB62F3
942280FF4B47C3A8F7E47EAE3C57ABA3CF9EFA32DAA8D8CC5237EB053A859902
A990D44D61AC1D14587495CE2090624BB22393DDC8B67022D52D2C83819F4808
CC5013746F813A15583AABB327718A9A30D5066CEC3C313244CA009A64D39C50
5FED63BE2B65963E49149FF61271B415D11183C61BEAA28B411ACB9F739F3401
88721248B24D90E786682D3BE20578E2C131C881553770B6E2CF18135F93254A
05E18B60253D583AE462C000ADA79D34D36BDB6DB678A9184A1EC84D7312AF98
BA7DFD613802C1AADC97A23BECCE71AB67639EBC8E9AE584A91278748915864D
3532E04040E6E7E797E18A84ADB6DDB7F9ADFA37B68DCA401224AE37A85ACAD4
59A3646AF2B835903A2DB81A20FEFAF5F65CF605D13378FABE125842FAE47BEB
9137E10B07360E5347A35612A955E3DC938DB504BC0C68CE2DE9CB360FAAE598
1A853C3E4DA7BDA30C2904537C504AE9B52F58BC0CDCCF3C1CDBEE459B73A91E
4DE6F07A36C4EC88C5DB5628F49EBE84502A658554458088EA8A1E4A51760842
271C2178103D8CC0CBE445C9127E262149921DC11F80036EAB8161FBFC966D03
BF5EC2AB26DDAAC17361E68D79B52B6C9A1592D699337AC50B614AA2EBF78464
37CA3ED1C62901341A77F5F142B3951A7617E323AC4D7CEF6E1820881E928DF3
24CB35DFBD0A943827E3A5FBB324D61DAD6065A36614A6834FD3CBF490BF9055
5BE6A705C385E8802BC5D1E685FD4B54244C0484448F0FFF9CD0DC52D7996BA9
FFABDD4E8996EB8EF56254835F979B37BB3ED2FE8D5496E1DAA72606A13607A2
17AD4880BA18ACCFB598CE400720AEAEF65869DE6267994A65690C6A1B917BCB
41445FCE60B409E2DE7EDC816D2CB094F712E26B5DC5D3BC70615BC0CB7264FD
5CAF9691942711F4E7E4DCF826B9D5246E8298AF3AED7D7575CF614A9D803BD6
35C05D6FBE69A63432B5718352E4CE45764AA7F0118333ECC6FA929A8F9CE53F
A33635052C3468D83C7E98803D291EA39CEF160557A2D7CCB2F5A641EFA141C0
E39DE2F88D1A37BB8D82EB1040B53042D8BBB746A91F11622B37FF78E04AB56B
41B13D4183520D3AEE832192772517D4449F03834164A45EB80D5ED1B6052D21
C358456D2FCCB977EB2A227D25871AB4A854FB3DE454038B3F39752C7DABE00D
9C6E6E9CAC2B8F880C61F6CA704E6C72ABF3E23717DC34E5AAD1A08A92D4CE82
658B8E533CDCA7E4549DDDE033E35DB499AA42EA63A8CD56AFC62B6A88BD1F3A
8AB3FC059CFB08D27D2924985A7C9DE03ADF4E6D0B6ADE3A305FC549F4D79F4B
DE53501E2ED5A81D91A820D2FDBDF8ECB1549205B5EC848FBFC3D80ABCB00635
333FEE67ED42146154259263EE8ABE3AE785499CDD7B12DAA5E520FB83F50F64
7650E90E3AB137912FB38808FCE1BE291539CDACF5628E10A111744394D277D3
F324C06FFCA01AC70A16BBAA35E3BCAEF764E4ACD0E38BE513B16B932525E99F
C1F54E1B80A37AA355916D941C0125FE7E215453D4875CDAD81214C5BC63B930
7D654BB36956558CCA905C1808F9751343E337284BA78EAF84C411DEA815E4E6
0B37187D4A15068779E55036F39BB8563B0C6CA15B7334BDF2724792AE2041FC
B529EAB4CACC4D176F2C4C62E36900845495D463A759BB643B3E2C5902A1AE92
B4658C561C20739DD0CD59C28E408A9068B1F28F60952D93E3AB87C6E8624038
186B76DBFE90666F58348859690E918B1F43F4B7B7AD9AB673C87D62174ED4EF
013FA41C3213DB9E576B7AE9AD4F5B979C9F709882927DF994271B1F39BB2957
5F0D72916AF4B384427B8BF61AB70AD1C6615B51881FB83E438FA71159258374
756A5A66EF30FB955E04347E34C0950E250511B8984557A9BB6583196A09DF79
3000B9D6936078F7F9248A91E7C272FB9E9857356C4ECEDFCAAE74590B3DD20D
A8BF984AB1D1CE0BB1799BF7417AFD407564C80EB1E331840240FF07008ABC73
E686EE3F7D163DAFD8FF078AF98EA74905203AF49DF867DF6C6D21236C0E25F3
6C86C523FDA08D2A0093B1C31C3D4091DF565B6006CDC04A1EE52C075E8EB4D9
A966668E27F1AF649B97E2EFF1546532AF71DBDA671CCA3D782B56728DF1CF3B
F09323AA77D6F8DB534992FADC74484791223B73E64CD932A30ECD347E1717AA
5DCF0E87643A3C880EBB41EE10D85A0C8DB14384A7B969685B58774F0C96046C
56F9C9D4DB5C342277749E85C7BE53D7191ED683999BF0DFAEACC9A2496A025E
F93B8906094ABB1A7C1327711D546F74364A8EAC427B2E82FB786FE870949922
CFADB10832F3AD8162E7EDE66B6192DD7E927872AE0CDB044EB815F7B96061C2
E7376F12D9085EEF406420D45D3A4ACE8C94E272D6B1183F03EF02AECC87C090
20EE3600BC5A557C6E32F2D3EB07FE5C491EDD336CEFD31312454DD56BF16B60
723B5B0254162EED97428052B788E8D3DD9B34A60A1DF7EBB8887D3B363A6031
9547A690F155775A7F95CB3167573E5F212D9122ACB418C4E57903B8C5CC9928
83B0D4C66BF0D62D55A423F434601AB6A2B5D3DBA52AC25EE375D3FD2B0A21E7
19D5E73CB62AC772D781AA5FB6382349F27FD72C7ECECEFC03D6E8735809A9EB
C923391237EE1E106036672B37494FA09262425C9A40295699FB64EB76FE6EB0
B3A2CF8C2CFBB910B9CCC8ADCFA0E8F70B9B102A5D36DD56EEF77CEB583697BC
DA951D3AAD05E9141AA93D75A40A7D7EC93C692BAD7D1D060322B226745B9502
F994AF52D0FD3F3539048583514FF461C89836C0E0F2235049BD3E3CE7013189
E7CE35C58A28CD0FCA766E4D0AFA797369815532BA3590AA072F4BEAA2610B69
17A518B3037FE312A5EEDC4034AAD7C72820A0D55D5337619DB002BA878986EA
5A8846CA102A71F279887A4F86F992FC12A1D28C4408210D92AF8F2412E78CA8
2BB21FE8A89D7DFA2EEA9B7EE86FFCECDEC9A0A1595377A7F8A65504EE8B096D
ED024D6F0F00ECAB179E92D6BAD7E3D516D09D38540251362B7F145E574568ED
392A37B14D7743D975E8757318F7B697A616F07AA95F413E91A80B286A6BB2BB
CF2073B429660921E8C64AB27ECA06AEA1C21596BD7DCF925FDC49F75C0ECE57
431C79BC40199736A68FB478685AE53DA2805ABC3BDD397FBEE17E8723300617
8B9A6BC241B85943DC1C8E833686E1243E5B48AB249B2FCF932EDFDB2A1060D7
25A191239DE0D266356CF6F5D9EC6C1DB1EE8C2848745C4BAC70EE2398E0AB44
3A4F47906A09156C93994992C526DBFBB3C4A2D4DD9AD8A3E4F85B69429085C4
53279987D4F9F8FF4724A8BBE1392FDD6F261EE615054441DEAF6F9524FC0900
215EC34D0BDA6BDD5326FE66ECCCCC22E972AC7E5F142C781072CFAF2D337163
2319B253DBB32944E0D9E60528611520249698A92CF23C5E8F45272A015D3D9F
33E30EA714B955D213A1E7DFE51ABED171CB2BDDB41895AF53F405D6C050F0BA
F05732C17FFB56DB5C1DB48413DF7821859BB191D53398A26D610D53AE6A1B00
9534CC34EF0D0885ABA3C73F1D78F811430E0A4B5ADB61C0FD4F6B67255DF8BE
27D7D83589632EEF618E6AB2876B05FFC68D8337EA8295F7A6A319ED7849584D
EA9ECBB3D4837D5C61442D7AE3543F3EC5C349D20D4CB3384FAFA983416C0A07
D23B82AA4EED7C1E74E5D54E5B3C406453DE7C661ED5D3477A95C24980073E63
DD9C90CC7DA33FA4EB480072AA303D33D5478995B53381864AF90C0BE851291C
B10E58A558D6440E61F72C3299698BD155B39BD9EF06ECBCD35F10C42EA9DAF3
65763EC4B50BA2B96604D73F003E662859D8C0F692A22381ABB95F13716AAC50
116B04C25A4E5B8E0B0972AC8458B9DF856E618FEAEC6E72A40B22AB733DF071
D6B92B62F1651FC7985DABEE0776B1A98FC2D040C14DD87114A9B084D06B0681
38EB66FB67C22587FC14898051C4FDE207F01B8EB788D2CF0120F4830EFED869
97B480408C3969BE44EBFBCFD5E0D9154FD2BB8D13E8F27EFD2DF420A24B253F
197A2B6DC5A92A524BACD43AAF7ED45EA332D2963055947E124F6CE31F4B7194
5D3F004386871039C97C7B76E46798789DFE5258B99FB0039DA5F622FFEB3C01
2CC8D15F41F7AA0AEDC164C4E42C3E85854B7DA44369CB3D983B49B04B94CE40
7500FFD1FC8E3FC4F897456B81544DA929F5EBF752C0271A7ED1FDEBA6FA0480
AF5C7497A50516F5CB3FB7672785DA1A5752877E2F61BEEE558C376E78C5E6F1
6C8B1F5607B4AD15A1AB38D25BD3598C85DD9AC8628B6809C79D5836A9F47825
4CE3CF8764FDEFC96E5B671A89A54CB2A6BCA253E7D0F24010CBD73D1E1B9865
CC7764673321937F6C11622F3443D3804EFB5C269B5D08286581DFC7E5685138
A0638CE24F3D1BE2DD8DD35AE3EAC0BE1DDC2277D89C62E711B055F4EC7DE0D0
36C7D21AAFA482B4ADF7F6641D0B3DE8582E22D22114AF7A6F4C50A931819FE1
E5293CABD514FF8ECA2D8EA93F03186A29C6856538229726DD7C61478DFF4D61
6CDCEAEC1AD70D9CEC4EF12ACD9238E5897256EF93E5DEE732ADBE53DDE38855
907F81C34100BBE10033FFA39DB14BFD9D26DBF39DD64F922526C35276DFE24F
D4E52A227A9F5FCC59653C048725FC1AECBA92325205A29F5FEAE90691FF42EF
52D058EC3C78C0E9CF4C78589F0FD0A36B7E9FFC9DD93705D8D0351C31A82428
BA7759D0923B060EA6EEA5343DEDAE54A15443A1863D1F00FBA2C94217E45C38
482909B802BC013275D0CC62FDEA43428C6FF9B64AEACB87B0F908C180DB4076
6B44E8106C8AC88C292CD50ED4F58D111E80AAA5FC3B713F6E510B34C5D132E0
710EF3336BADEC27BBB8FCBB55E058BD13A927892557DA1DCF9E0CEBB7DA0D48
A6C44156FDE92A8D6021DAE14A7D1A86380E46C02877AECBBC3B32F5D9FB4456
D02CC030BE48813EA39725C4644F49244F84627D1E1E94B6F78271ED4545B07C
51382EE3D97319A0009DA311F4899F65E76D6828EC84D4C4F9D073E5CD3EFE66
6EFBA5B908D599DBE8BF9DF212DE17C23E3F6BA6E1C44B5135397B9529EF8743
BE88BBB9B8E81DDFE9B58ECB933965934C5CA2043B9B0E515862AC704A6F7424
9E9F5EB7CA37809EEFC33FCDBF9A5466D9CEB29539BDA71BBA7E79A8A11520BE
2B47FA59ECF77334D4FF67A04277EE7E0EB69D76392B84CF41109FCD5EF9B623
0D3123380AADC1DCD8BD9144CC9C39D927E29656DE2F08C9BD32C9A4C3A60188
E6ACBF73F6928C9C349CF23D26B47B9CB5B4647CAD084A51EDF2A7B68B0D559E
0B05E76D1C9A6F549FB0112435D63CC0706549B6F95D064734F8E130512DF610
0016BDFA4A73702F44C475797678988274CE2AE002639D314CFFE080800A88F6
03737388C01B84BAC1F8C5D2AA3A3E6BCD63BDDAE447AC99E70422024A7111D9
A6816E165DFB4DC616FEBD4384F9DBA8157C09BEFA9E0EB256DB79B9D0401441
CA4EA8C5B997A491F8A791216C6FA9A62D337FCD128DAC851E71F5A2332D9A7C
14479025FBC64489304F694C2DDC7CC2A3C34064F90B5E8A643C8CA2B2F12BBD
ECD1E4282E07884EE0A5128AE2D8D5A8649CDEFA8D0F98E63FFD024E4521C755
D34B49654CA7AC01EC0550084F40AA5F88EEF54D2F40E408D52ABC831EDE8F5F
1DDDA319C9560268148135A883BF18DFB558ED898A4B67731DC05848E31E9152
0E8F904FF4D138518DD564140AAB4C97840C3D38D4586DC64865CB52F7D44777
057F8C57C69453071CAC34C9E9D272BED502E97A66EB8A13012C6B89A4C8211B
C9A7E353E233A79C4895DFF884D14BFED989FEC74E0432141A22A82D5D319CFD
5357DDA5167E3C0C1D945F1428FB9F870174F4D1BF5155BA07651D0B13CEE356
E526DFF66FB8CA0A60DAAC49C4DE54A05AFB1A25AC0EB6B2F5EC0DF232A9F3A9
FE3660ABC6EAC76A1F8F9BE2D660F139C78DA987493DA97CDBCED27E972F028E
73F3E78150CAB2D4D1EE29CD494FCA74E3A9FF88B69E0DAB2F3202AFB0123931
44D56BE02577E7B93BC0FF5C49D1AD996A16B1C07AF421F93850D8FB5B3CBB73
4D2D090457DF84C725D790097015E0C4F622C4C4CB0DB4CD2AF0C97FF9D33E76
AAD52E4279CEDF3F77E952087D51148B2CF46FC1B772F5D83AEE6E6894DBC9D6
103231E07E38492FE80A7FD059D1774E270C1FC963770CF801741DDE492F7401
205048F3D18748E3E3BB225CD0F89F7481F52E02583527ACA8974338FA693076
36946CC835CE2E6F9795F563700415758D2D8AC999A87176360534D47BD4B86E
90EDBEFA0B622C9859803AE8BEC84EC6BF584224CD65C636102C380B96F16646
9FF5546146E5B507A841FB9E9D931155B780C53E15011111DA5CE521494D6B56
53E97B454055B2BF4F613C972921DA803DB369F2A24E9708B0879368D864B8BE
03A94719AF35C4AB138EAAE3DA2BA8908B0505DF3892578E9E39048EAEE736C0
99CFDC3F7A428DBF660BD4BF8194B68D9971DA7E9B942FBB850122539AD2BA9C
3C9CBD48DD9DC0D84EADD5CC2BC94BAF9E76895860380677871BF61D82AE268C
65BD8A1080B3B408BFD25D9FF5E913DC476916F32ED593EECB909CC9F1BB96CB
33FBE47616CFB59F48BAF4F863D0F2B72D7FE5E0FD1FFADA36AD59E272A14326
A0A7D04F6C624B52513FACC8DD876D4310F095760395DDD00E76839FA5D28C58
9042A928622084B4C8802CCF5E4F76C67038DEB52833F9F3689D9F8CA2066539
B2B0DC17AB2630D6B830A9283331883C9739EC84696B56762B938F9981AFE8D8
532F8D4275053C804B7581F55877BBF77F43EF5C7609B7B8A5E1D2BBAE2023F3
5A211C28725EEF3A6F5DA59D66961B5A721824B0D28D05BB0DEB9868CCECBC79
E670526FF494545792796F7940559C40B618C8A7BD7BD6F7426E89F92E8CFEAB
104E06F58EEC3393A94ABE6C08C9B561A8F39C9FCD3FC1F50B238C09EB9F3C08
75DBEFF1D39E8B747C13940450A774ADB12D717E620E9B1A3BCF3CE739C83234
9568CC5CBE5DD2C00A66D040FE68A7772A5AA828AE679ED38CE3C2A5E8AB5154
A287C936B83605BD511C0187794688BD9CF523C73C98D2CE10734569C4F18204
C791F9B52AB894DF588D8FC043983CFD589E7F3BD7607B5F6DF54D7F01A28F9F
ECB7B7D1CC0E2B0336CC939F774E35B3150B1755786E3DB93F31D82A2DFBB0DF
3C09E601D1B9EA2093FF78F0243B6D568A2A78F1181D774D8A4C645AE9058E61
C4329645503528D09788E1E71680377F68911F6BABF3E498232C9AD220D1123E
5CA85970747A575C92AC3A57465D1567F2DF1CA821C6592C2C021A8B7E182D79
0766CEA7A3EFA1A42E926F7F215D8D50D30E8EE99A4AC86A142FF5E4085AA07D
7B0836672AB6C231362328D1B333F8A86293945E6E16BCBDAD197F5287D576C1
4486A62B9317C43B2646E365D210D3313CC33A5B0319821482EC19072DAFC8F4
9243924D1D1C316C7BA06CBB2F940A1CF8E8E6D8F2549BED35B6B70EBBC46CEC
1972B677375B2EAB2E4738297336539C21D5CF74693102F588BD64C96E4C7026
F54EDAB545EDFCEFD2832665051E0FE6A3C0C6F8FEFB1E93BCA9970E5E946E8C
B57BF5C3671223BAEBA68AD8AD131CCFB0B73659AEE8E9AAED2A13E65582404C
EAD8C52EE8D753153CFE8474DE7E6F8558FC2C8563C21D9CF77F44EF4F1EA200
CCA69D15F5D33510425F2EDE1416A79847293C45B19C6E3DCFC03E7BCB5D867D
CF6D7E42162A19BCFEFE6851356E9FB1274316855BB05775D6E3FF3A4D6A4432
A71186020D42D0185E7FAF039F3FE18EF38F33727665E18D8271E85A30380463
D9A2ABC52E9DB146BAA31965D4CD9ADA6650F320F10911E223A43636C4187F65
B98720C1A7936015023DA2CB49C8D30C3C2CD504261CDF7F641E95D171E9D6A3
F1C91AB196B5FDD2D611BC78536EF6CB8F669517DC3FB4918101AFA35F08A59D
B58E86949220B00DA30AB5B737BB8801C654CDA1AA4ABA18F7A8B4AD971612AD
1EE8F67EEFB517F78CF25070C2B2ECC1C8A333C37BA4FDCC0AFF68D80BDD9E5C
30681994173517CE528925844A4FA12038DD459F4D747D9E079EAE2A9678660F
1D3B28D9ECA817C31755FCE219119A938D6AFDCA0FBAAA6593DF7880EDC5E532
0EC0135BE36103506796B98D2A2445F70ACB5A4383F380C770ADAF1B7A9D4718
E23D53C5E297F6CF0C9206F57BDBA108261DBFA3A011C0C6D2E1709CB8CD4BFF
24D93DECD8B75981E95616014E98662DC8CCB954BE26D0F4202C4036DD9CFBE0
9B07D42212106A6F70DC292974DF63E431A8136F2CB7B6738D28F963AAF7849D
520F78612A50A893232966017614B06D41B9C3B24A7B43BD4F1A108EA6CF3423
0ACF7035B80E1D60EE1C7CE4453DDE48B0DCE9878F5B5CB7312E9EE48421B06E
F6E722006ED9AA4E8E784203893EDE5A0B02C24F9BDB3D7660BD7F5DFCD36B29
D8D17CA2F5FEBD36ECFA0E28D82411EEFF9389856C377032194CC48ADF972A42
E7008B68A35058695F9B7FB298A96DA2A9D437F642FFF644286A37E62353C8F4
FFDE6CE4896FC297B0D86FF2BC399B7D0BD27516C7A6DB10727C592578766F3A
C927C56649A04E04279AAA541D886494417E9EB6D4EC94C178549F0E56A357AD
A370E7C00A55DC4DB309601CD66D8DFBC9A491E74E9B801FD38B5D67D1FF11F8
476115058E6C21A4FF5B95D7C038B31F1ECA26B08E10673C3F96914DB5384E2B
835E3156FBE63F42382A0E0E17A4607B8F2B7E367BEBDA03D3907A8630226998
ABAF561874F0CE40CA40C28E21CDB49F7C7886B14E7E37084883BB1479536AF9
BE3B3BF115E8D8B520097DCBF8335C8EED1E65D17BCBE0BC4A3C34EC05094A23
62EC69940D668A3659D48BF25FB6103F5B2F2997AB404E6DC35C3D440E5E71F7
3714E24C1145FA7CD6833BD917F79E1FE96119AFF9B19374CBE9C983505F525C
E255EAFAA549F4832B592CBC9809C658AC2C2291D11156B4E58482B8DA565685
D47BCEF971AD5FAD694AE889A778CF9C84EBBDE5CF8286B6DA9DFB3D9C129D23
BDE5B66D25294757A565047280B8FBEA52147D98BF5764770D41D230D78EFED6
4DFE7FDAD29AF758909E4F39218F51C5CF203305EB894D06C546705C8BF01F79
EE25D6272049993033A52A3264FE66FE4FFF849E8D2B578CE2CA0ED30053D04D
DF81ACF51926204C1C490A5E1A0B4BE15D1CEB77C7057BAED5E32EB84AEDEEA3
42EFE6CF103794C29AEF42CE50338EB7E0BBA4C36E08891A0BD87F9A10809C80
487F53823CC67E36721EF4426572B298D64BBE820ECEE91B2D71EF2FBFDED0C8
B036BDBFBE6E9F1000EA5FACE6EAF59FE1F3DCE3BAF7BB821B8437DF48C8B236
3955BBBAAF33687E25BAF7E0050AE9348BDC6A9BDAC2AADA19E3B81E1228D8D9
B23389F6FCAFC95B5A2A76649E50FEE2F1C320E34EA979C622D30FF464D3FF11
017DC32315B00E6381BEB4965AFE59E875B2DE504C4011C587ED0FBB9AC5E367
074493F37D5CEF0802E917D6632771AE0639A9CD1025C0751C2F4781A628E706
69AD30ED18B6F832E4EC66DB123B6A3B595F0CE1AF181B0007A0FC495E72F08A
AFE52753EE917C1B8922326729F4EDDBB41D7152130670D5CCEFB3DF34A4927F
DCC6B8612064088FCCF503FF5FE16F5486BDF89FBCE15D320FEFCE3A79E8B11A
501208B05E8F31B235AC024AEE2D71482B3697221F62B9A131D0103D7442C352
6E886408030B1780695F0AF14448012EAF1A2D37326E0A8AB73BDDF06E4934F2
2B136744CF205FA0E73F320F8C9B645E496ABE548F143EACF9C9D5C223F8FFB5
8E395B3CA1BEBA663F97C5AD7747BA8CD7D18BAE9FBEB5CB83770E31F7993F0C
51D2D0E2C4AE5A519B9C6E1EFD49D649FF825A3BECDB5D59C8C698BF1154A93B
8527AA521CEEAF38C86B63E1628996A5A414BD823DD7EE654F4834E9835B27D5
80DFDF477821A93FC8756ADF89E24E063B1586670D9A40436C7162A25753E002
C341D125DA3A11FFFBF5D8993DB91D498C86BA4A5604B371FCE1BA4FFC0E6943
776705825166CFF795174A18BE9ADE16DDF53E22272200CF2431554443D81F9A
3E864C35D2C1DD9381995A33C2205A98A06BA2B2567B0DA3C96757773913A204
BAC5BD3FFC63498FD71DCE6F6749F80CFBC92587701D3D43A517FD2B343E4F5B
F6063BA837421B558B7DCCF14B432A08C8BBE963455BFB538BC95D25AA0221E2
0DE4907540AF70EA7875BE5CAE7A6A0B73652D9F90A9C217947FC8D2359D4D77
2D1497184F0DA2C9B3738AFB13789C887D87FCCC55DF28F5447BA7DB01372652
ACD808E32B7D40B7966F07B00F76E50FD8D77398314BF8A050B25F99E99647C6
D983478368FB0AD03B52D23D47A4115722BD001B17CC32979B4A54BD5A441FDE
BCCCB29B25FB6E44BD2F07AB9352AFE5E096D9B4EC4F6287ACBA351B824BAF6D
DC2340E47E1087580A0382EBCDE542E43B6551C7428866CE758E1A276E7170D9
C904A82523420D5FB1598B153341BC606532644CF862EB9487EC7805F112565A
C1A7299B4D4DDB01EECAF142BD63C7D3CF3C833DFB36C4ECAAEE8F5B8B1FEB1C
BA7B3AD5A2C4BDFEAD128984193F72B5357E8BDCB1316F71BBBF157F88B41BF1
C9382AA43EFE0715596778F1B33B19E7F9CB1AD4767233768E903ED6024683D9
BCA85FFC30FEB491A788A5F7B5717A908BAD57B41C828481055EFF34E93C1E2A
F476D115679026462E6686194EFE31146FEBC8C4D7FDA323C3D90FCBD87EEC49
79151EF9960FBF0C92B22FA96F2B7534B89D1E06B63E4CAFE25FFEEC656D34D9
D3165E0AF52BB3B1415B5A06985CDEE755BB393C1D78C4C76B2EFB0011646127
CC7D002B81DDCAC9CB996A865E2A08A35C3898FE2638CFEEE7ED4C78EE93D5D8
9BEC8E74C6B93BC15F153E6065339FF11C2028C11AB454C98E38F04C1B23F6DC
B52D4B5A0F88D155E77E69D9952A06F45ECA74C0FEA41E58600BACEEE8B0202F
1B2FF2BCD30097BE63FA0DF7994650E31949A60EC68072976CE61795DC200325
1B51323C3AF3D4A30E73C8888AD4F4710CEB54911FD216FD2B3E04E3E18AD4A5
B2C3A994BD5616FA32317445B8B172FBC753D3D95BA0EBB4935DEBA8A1FFA68F
D11E188AA76F5DC81D22DF994A213800AAAAAD09BDB37E0CBDC79955FAEBC028
A2537C94EF85998E51E8A07410CBDCD6E3FA522351426E88F693EC112F8C2DD3
BB56199F68806BF76CA48D7E423AA4B85A963460BEB2DC36EA0CAB5A691AC868
35FC9E51785276DE154956F99C96E7279D4B685FB6B46E384A5E6773343EBEA3
D19D4F1C38B1CF5CC094BDD7A40E86CAF20F776ED178751E8A883462228A3AEF
2A9BB1380A333A7184B0305E8A10D259C57B2798B38AE7F549A97F439393AC4B
0B6C5751164F09CD17C7D98B23426FA97BB53099EC639FE13DBFFB0C6D14EE78
45D682D5E850E2EE6AB33F498466F9CBCA8CD5B74743E4CB0191B24E20E69945
EF1FAA0D76990B3F023AE4C2020B8B626635C497A22FE3F70A777E892F5B7B7C
44436AB7FFE8B24D2ECDA35FD966E55F00B662922334619AF57EA283EE09BB4B
93193658AECF41720DC96E63F4B6DED971144B73BE63A0FF9806756A38E99A7C
BD3E6957F1C02DE244EC5319F8E4E1FF65D95306E80C1524C24AE69AD524B40A
029057CA725B30675A3C688AC2D48359C1FC365496C3B348C5C7BC09A49E8548
1CCC36E3C7F661FEA51BA14AEFF442A13F2B6032605838A1DE8DB76CEFEC3675
F517E8A2167DD250065F3ECA5CD66E41D682E5AD445B963EBB8F0CA1468406EB
2C90BB7463C6A6D8B44C49416A8C9AB99147A923BEDF363897215249635EF604
5911FB22CCDB1D52C7BA6DBFD1FD30BA6E19201B15B4DEE94D7908B555765902
BA1B1B96FD6AE37B05D34A26A6557042A4BE28804548DD58C1E251EF1C65BC92
4C7DAC7FA3220F2A11F8AC0BE793B203A79033D9FE6092D298729C114AC7A6F6
4280D9CBAAB2CBCF53D0623344020D181BE8F047B66D1471ED948EB3748BC5CD
5CC96FFF9A1D28F56A15C5A3E6C725B90255441E91555D5AE69D1276E823E07C
5621823A1CA23C16FB9ED2ABD191B74A03A7EF3CAD09AD5ADEC0D002E169C3A5
23337C0D33B7F21645B8CBC229D65FA31A3847A77F9F6737B4E72947D2D856AC
2EFC9D75EF1894513023527ABC1426099987A368B8ED4E3971691567D713FBBE
A616611D33D169398BB44DAB5DA799F3C8BB4C1E0A10564FF1DCD4FF56C36DEB
87167A398E9BB111A062BAA38C5C7AB74B2241815DE428316E463CC4CAF13AFB
E6A1197A4B25657369F8E141C941D59CFA44DE8166AD00FFCD37F00949781D47
DB545314AC5128ACDF655D8BC1B07360CE1368FBD45BFF4D4CF61C3FE4FFFE85
4FECAFCF9CC1F45D1AA45046E57E7C73D6320B1E6CB29E2283AC45C1E7A84CC8
88D4933336DFA5F11CACA48B22DD837FDD590236D3465BA56560AD53BD35E5B1
C1F99ADC46535B04B5E38A1E297F608B9F93CC2B7AA768E0B6FBFE81B7D2AB62
BB4C006E141302BB603A348CF24BC357553CF646A1FD32A6B4DE360733AB6478
F23387E0CF30E16A08BA3082E872547DD994BFD2FCCB549ACBE31C551E191595
F7E888BA3C8EE63BD07F3213784C3B304733B301F4B91C299B6616FC474CBCD2
4CFE338C6ED51AB0C9290BC7A6A9B3464AF158BFCB93570138BF9D489F0C747C
D35A17B1CB80C2B299E7BACF388E97D9CF2ABD9FE13A5AAA1F01365749CEBDA0
B98C9B12FE56C6EC5E97AA80F30D1A701BBF77E16D1B038784A061CCFDFDE83B
9978254270E4E58E4FD4A253A146B6C040442FD01EEE3A255F8AAEFF41B636AC
BEFF6C57B0E540C66D0FFA32704782B4DA48C45AC89C7AB26CC8518903EEC490
153EA9E0362E4148BFB288C7EE00F5864FCA46875FD7FB0AE18D51152AC2E1F4
C896E766C649EEC07002C0D37E6E902B23AE98FA7BE8DDFE40BC860378C4EC2E
A3547996F7D909542E37E1801574A6583CAC710F6BD4BD236E55F7F2BA237EC7
EC32F8AFA87D940C8C0B4730708668C042285162043549D78ED7D9044D1558C7
C19A3CD814939E037DECD3714B111672F62FDF4B07FBE09F0BEE715569411ECC
C576421B78EAB6FB274234C8F4D66E2E0AE0EB81486D5EA323F2F0B89EB1803A
698F137D515DB9A8FFE2CB400A37FA7E7675C18C20D8BFD1539AAF4616CE4DB7
68B4A657CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D5051181
315AEF884EABB76C5B134E7E0185E7D59A2DA456CEDC82C054F197229990E895
ABB45C025940C558D4C98C6764B00D6917766CABAAEE890025CF7C0B1A6BD5BF
1F8E62D380C7849CDF06492BEC78C972A98026CDDF2A30625A96D549BC5441D7
447FA16D4EE9D8C8E841269B1D361F0D9EA02154A8F563979FA89334075CB13E
CAFA59D893763EBCE2B810B880C9135064B104573E9606ABA81A5F36CC8C1A96
A16F057568420A735A17630589E37624FBE48F378107E6EA880A578654ACA1F7
80307168F5F61A1BE8D00DA9D4DC314723B7A2960FE961F23AAB485260F1FAB5
D7EB7B5BC72B8D783E03E76AF474F73A6ADA241621C368BA9CCFE1E68464873A
5914E66617D23AF3A4A972B07B5E6DA345F29CD2561EEF398658783FAA758D30
BB16F55AABDC8377A9F37112DCFE34DC3BC7889625773C7E53224FFFCEE27D32
9A62F6D03DEB59AEFE38551259A8CB31CF7C554C013617581ED034C304360FCB
2040E7C672920455151F81E76A0A95A558E056DFF187989EA1554A4608FE9446
5849B7FA0B5CE164777E439F98CB68C43D7561C8C3974A27AEBB8E50DD091B91
7FFB06EF9CA11F2B83B1A01E3FBAA321D869F1CCD34F56387A78B42685D9AE18
4801CC10F5A1E58E8097DE61046499135FAF474A25E2CA705906A6E15CB57F34
1B05C9D8A5E002854FD16417A7461A508B17DACB587D2C489DDF4EA5F644DBD7
ED1CD223F5F35BA3609BEF46966F9D76990019363CF8E32F286D48D6166E317E
F1297C3BA5E075FCB5F05A12EA2E30F1BE91DCBE42C0D814EAFBE88F1F99445B
49849681DDEC62792828FFF60407BC2A0D2B07C9EED014D89AB4CB82245B574C
006312B0F8FC10B66615CC18BFA5486EDE7284B2871960D316A48AC87E1F9887
01ADD7AA3ED43BF28647D31AAAC8455E617FEB0602B482C0B2BACAFBCC1DDEA0
E7B467FC1D8606ED27EBA786A6267DD8A194A076D5414BFD725E486BBE696AA6
732DBA9D7180CFEA2E4A4C69E45EA1BFEDFBEE2A8C2BF11950654B8BCD2CEE8F
016B5F91CD7BD3C3FDDF87640C0EF718D0F9456E8A6C60FDEF6AE1F8495374FC
EE1BA5EF594812C2DC4989142C4E619B7CE1F7A9D8E6C397E843568DE2D3773E
64735340D3996E2575753A3E6BA8C6DE599CF34DF5F7BE45920B49F1C42E9E3C
626644D7C6872F7E709AE4DF8A3DC3287F090AB0255C527828DCE16125010D4D
D20558D3E3DB37440B74DC67858A7241652ED53C97F78DDDDC6EA34E1FB83908
ACA4BD5018755653916717CD340FD833CEA5A148102AAE64C494FCB0DA2BC236
E1BDF365735D192E99AE2C5C34D0649F574C7C5C0368EB0BD85B09C200460D8C
2DC2B1C4B0B5ADA26BD99895A31F899D7B01DFD3CCD89BE459561681905AA1F5
C1C69CDF50AEB93F853DF347F14DFEE3D1F9F1E427DE2F22A80B627E469D6655
B967F27EDDC7381461164C25A89F9F659E01136DB7623124596B009D0554861A
47359E2958A960B09EB9D3D7F2CC1397DD22EE957DC763237D840E2FE0346A0E
DA4F0DF9EDF4CF3FFE9ADB645FCF942F3967F88080F035ABC4B48C2504FFB117
551CA60F5E4DCE43F03135C91B3E1BD73176EFDDEA2EA1ED57CBA24BE7D0B0A0
6DDB9C870F3DD6EE461035A3CD15C15E80489FF552AB9116545C4919558D4604
FD9F6D18AE1BEC3891DFF676210BE4B8ECAD0B37DAC6FBA5C9EDF5D42DC53E71
38C58698C76AF17384450BA6A0F93A4BD44523DACD066E036A4E7EA424896281
4B9885B8B7E4BEAE45450B685AFAA9015A286FC277096368AE06E5AF099B1686
978CA936037567D9CA0F2BA7E030928709F6D26964D23309AD296997B04377AF
1FD92BEA4941A83FF66F78865A2E2C416616BF65D23BBA07E7C928CB96CF8DAC
DBE0EABA8807002689401DE8130FD9071799BAFBC32CBCDF783CAA99DA778162
E5F4E517E8B2F8A0EC3BA772AB2030334A413B01F940E3558CCD89A59C601C5B
E88A52A4C925369C8071A86379D7471A27E54CC0874894C1AE4D90086CDD8C8F
EEDD7F43B1B62617E529547E61332253E86CBBEC62665D175CEA325EF75050F8
9B4A5E843798B765A9F46EA485C6C1D43EE16C214CFC718820F678B57F748511
C1D2F322E444327655C5AD56DAA085CD7E1E9ED2256762FD3E9EA841E9586865
B9098978BF0CFCC2EEA29FAC1F8B7A0B209CD35017CD8D73AEC49015CB38844A
AC09ECFB6D4BC280EA8C8D3BF6C14F9C258E25A8090B98B156FD727BA57C5207
263B1FFE3C01C709899E4D21EDB0824401E56DCCB4A5A3B55F3A5AB93AE17817
0D63913C81B5260E39024170008EE169320688AF315026934A00016AEDA1D840
B00755D3BDCDFAAFDA94C01D588888546BFC5FB737E39EE08EAE7D31A877A1EE
A85A88DCB7288E6E2F03EF53257E8AA0A3B370CCF036B31ADBBE95145B36E40C
DBE0D22CF5C089DECB9E1874F3BDCC6D254AF124A604E3019B99A0CBB07DD2A5
D0AB664219255C6A2BB8222056862DD3859F91CB21D47D230F074CF6FE74FB6D
11E650BB36FE282EAC9112BDCDD7F14267BB02B5DA24CA22638C5D0D2464EEEA
3C89733FD90C7353B795BBF536ABD90B429C6CB696811BE7BA6A1B7D891B55A8
0C9973B5A719CD8A4430E664E63256F6B8BB94480890ED742B115F2B6BF6BF74
5EC856939DF1768406B397AA6F6F4766A29710055011F6E0A9215E58DC09C9D0
54DD13E3643C66C746ADDDC16D38F2007DE7FC7C43A1EF539BB68199CE981357
AED00D89AB7757738F80860B6D84336A558FE3434AC6472DC892389065BD7AF3
D5C73A7BA67FC4BB465E52B6EB0BCFFB5C5860E3B1F1E2C6132A658E9338F2C7
841F444C8B324FE6FEBAF0ABEDA95E95D2E8D6ADD162BFE72C235BB879A9292F
8D1CB4D4E4765D16BE4ACF6BFCF340E9CE0D760AEAB62B8EA8A4966EB5850B90
F99ACA4DBF75663AF82E2DCC38ACEB75AC52AE2CC9E054FB599E13CAD47EAE56
B810CEC7345E6EFC7264A73FFD8D517A5B94DD923F72728E72324AC78053CFCB
B74F024A63F68D567C232EB5C728F6C88B1A90C330F81B072CC13F71B8C7DC80
B60E03A5FC8F83AB50FD66B1C2A09D8BD7674563B51A6EBAE3AF4F17515C691B
BA01A867E122FC65C18678884DF1784A1C75A34B1EAADA09FD8A561C4EF51E5F
4A6DB637BFEE138D09CD9EB4A0FBFB8548EF5AAB1D1C2534D1BBE65F0BD2E1F4
D920CF3AA1045FD5B90B81BE1C2BEB1F60C7374B38214E5A2C85A25861C27F86
E71B5DC8F57C56AE3E15238216D31D0B32D2A3BFA7EE0BC26C4CAE5B7FA54A66
17F42F4E4D0A07747A57D01D38C8D0D75C5AD4B2195576BAC28BAA46410A50FC
745CFAE30CBA79D7373907E77B33EC8B102C5C4BEE522FBC4122FD1804CA6AC0
3A789C74FDEA096A7B65B9BEC42946FCB8C4C9C81F9E275796E4123F5682DFDB
E4A8794683360BF57DE5BBB3B9DA06BA9E8BDE13CDB6F15E9A97B82272A904DB
D15D4142E9EFC8BCA2E5372D4B0CEB50DE56F7CC42E26B85C9B879B65F3D0BC0
DFF6C65EC06F62109745C820ADD79C815410577B3CB761DB492ACF1496AF9EAB
2004F0ACECB439B993C39E50D0EA898302689294EC1C5005776C6A77BDECB20D
945E2E516F7538C83E93E823C17FB637F1908CAB7648758FE02CEFE652A7CD43
3C952C01D2B7B7FB5E1333FB0A063380F6150FE493D5DB3223AF895682CE436C
CDBEA5046946BD69188D603F7BFC6DBC2E5912FD0A661AD008094641CCEE9978
C8FE89C4B8EFAA8E6084C7DA27B514B445F7BBAFE983A280E435B7103F8F72DB
C4539DF6B6262C787ACF30F31D7CF71EA7A2EEBB82CC1C2300390708183B9CEC
AC4053ADC1C1E99964BA29AC0376FD75750CC778466331F5B111191608F39171
B18AC1349543D60CA59E679A3C99B02DAE9F8F6466F4C786FC993D555A26A37F
996CE9154CD157F36CD61D540ED53840A11503D556E38F730FFF156D595602CD
BD3923AFAAFB65D8FAE6389B65B35171E7BD835F309CF79579D812BFF4736024
447C920E241CFC7845BAF05D0C1EF4E91203859CE0623ABA0BF8C7C649487893
3792F3B99F73A88441A1F8D228EA1CD4D3006DA8A358DFD8082EC7BD310D5FDE
8539030CFD1DCFCA7F63FB776B1EAD26619E1E83196B5606EF52C619C8EEF7E6
2614A222B2ED3DC924F326312C5C09911EADB7EBA2B3B5DB0BC3C82F5E2E674D
8F7D8A6920FBDDF1C0186729E5C453833B08D7A90E2C0457AD55260C3E4418F6
78404EA386DCDE1E928BF22F63CEE944AE2E4C8C7F66C387A2758CA3B5DC71F2
60D77D66510CA6D65602A2513FB7645858A744DB34D4C5E74F7DD9C351FDF09A
8FF8AE47F5F81449147BCD6FD9567FE6CB190FAFF8ED102FF8F22B4E57305CCF
1B8D7C72F6E3A7296A2B7F3235CD962F73ECA9A51F0FF9EA1DE92FD3EE7BA2B2
606E9072EC3E9672A1BFAAC7683AA961A48F1AB05C229A7C628760F45EBA76E7
3072C747C27E3FB9B88E412B028829B73208E0A99B84C049A02ADFAB0BD01A2D
3EFFDAABC251091D6B1CE875A62B9AD31E8911608F171E5859ACEECFEF6C5F77
73EE486FAAF42B814862DCC8BB935C86DEA0E3B52B3F7F2E81DC6BC46406A7F1
F9309E6DC72379F5C5F95A1E086BCF328756F29E75C9A4665E3EF78E4BCB51D1
85782A83430DE44F6CA121219EA56202F7476565440FD353D8EE72A404755753
939335CD95F7168988632C0E16F0744A91F3CC02256F17985406B84D1A354913
6837D8E77DECDFC3DE6B2A372BD76B5194535B05927F88A440BD0F97DFF0120A
E0EC4719E18341B929E0A38BA7CE5B13817015F2D0B0423AA0FE897CA2C5A8EF
71FE0316FD1A64C1567B47219A707AE645DCE8F09E97C1F37A91D18E885D1F68
1DD76127965FAFEFD98A99FD220AEBB9C4F7295121F9AA2C391A12B26338A6B5
1EF16668878E08A1BF1F7A5A39F33146EEBC09E176428367CCC3E09959341108
577DE3EBA1C0BDAB5D3D29F722BF788057BEF21BD313635CA85EF7F5AEC960EE
A8DF068368EF5D765CC946165EE794A062CC0D425042F8FA7EEB5645E1AAAC58
7F434F2633E90B845592590F9B25AF2A24BE80E11C31C87457D5A308D06695B7
52C599EA039E6F6209DB2A807229F7DA6E95A1C30DBC2E2A0163AF6E4409F1FA
E966D9A8928B6E5C61E02E04687B211419EE28FEC3B82D3763E42EA68E6173EE
E4D02357A00F83FE7A43B1AD8116A3921AFD4D0E4078CB7DB5F9B8579EE5EB5D
ABC893B50926D7DFCE9D81DAD75355FF4DCA17A85BD268CEE888D934E570E34A
CD8A58FE1824FF48660B7F5DE81561984DDD17B1221EB44186B1DF282B6B7DA5
9A4D58D86C5B42182AE5313D1F41563482E5F330A437B5230CC2DE1983AA8CDC
3FB9D27D74607D60C9DE0A739AFFD4D54F5983D415295D64C05F6C4DC3B5C31B
E45797A97FD497A808F203518CCA08C588F4BA1D4EB1BF950D755E49FD85F0B7
C642644D85D15C26887C70D3F7E64A11C644E149287A9107E1DA0A68E286A5EC
77FD3E3BF7B35DBEF832E35961E8314AD71CB06AB995031E40634516E70B8EB3
830B8FACE02935F86B434A004503EAE6BCA642599870C628107C92C2B22ECF45
AEA0DBD34E4B89D9F1CECF92789D8016F7566D11818876B1FC86678F7DEEB2D4
48DA993FF6EBBB460560E2E8CDE8696F443A206EA5B0D7EA9718525DCA350214
2E17C766BB1E000560605D7A0725F25152C91DDBF06703F9D79F9539B6FAE233
23BCFF222AAC48A8BC278B56909B8BFF981EDD87EE1E64918523E1D40F81EC74
1B07036012257D001AAF2D3343AD393B3D4C7538EF041936FA92722CCFD7E56F
016B553212C087E08D14DD387826065EA60F2E0F1DF51BA710D3F3030C7F744E
1CFB1868C2D4FE6BE4407FF66A7F1858B00D9C4921F0693BC6E3E01832DA3DBB
65A5B9AB43E499E9EB159C0E119E2862DE541EBBE3AFFDFEB2E111610DBDB2D2
C49F7E430CB142EF9553D094E463D1C6051024210E0D5CD1B5F63BF084A0A693
5857770746B74ACA8612C6B2C24E10CD75A4ABD0F3FA4488F13FF49F51751884
B7D17CDCB2BEAB452008421639D7685C8C524FAE2D35023203A0644C3E23D841
29AEE30ADDEA8FEA79BDBA9DA8F79DF989377808EFB916A0681B6B37DA3B5363
F9F54E3E3CF3EDD43167C6E1347DE766566E8A2AFBA4725AA26A475C99687D9A
47070C8F348BAC48751FE9FCCE6A87194EE8C27433A7A5B9EBD1A59C3A036547
30004D5F66656657FB21BA9A627C45A849BC1F356C870F2C7317377F7FE65C82
AA50CDE96904BE9E98631F09AF401C92328B3ADF38F2F862BD3FA099A7736FF8
34E1EB66C3146614C356FA9E7C2817057458FC40C5768DF51FFD8A579E657B4F
EAC4F836076D69E2FAA0E7E8C45D074865F6EBC6C5F9AB209C027F4E01C41E6D
0404A00A8CDF479F0CAA197F4DC7B942537E288D20D9D9708A48C88F628C10BE
BCB9676A53943CD34F4D2C73FB69F6A49F85676BB6CF61F4B9C6D33B1E94DE85
2867C687BCE5087D45304055587FA76A58789C293B2FB5974030434CE7E3938E
98D5A0BE563E24F3EA8F9BFC636722DB6D39F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (technology_review.dvi)
@start /Fa 107[33 33 24[33 37 34 56 38 40 22 28 26 37
40 36 39 59 19 37 16 19 39 37 22 32 41 30 37 33 3[22
1[22 3[67 1[52 41 35 45 2[52 55 63 41 48 2[55 51 37 1[52
47 41 52 6[17 33 33 33 33 33 33 33 33 33 33 40 17 22
17 2[22 22 1[52 35[40 2[{ TeXBase1Encoding ReEncodeFont }66
66.6667 /URWPalladioL-Roma rf /Fb 134[40 40 57 40 44
22 40 26 1[44 44 44 1[18 40 1[18 44 1[22 44 44 40 44
44 8[53 75 1[57 48 53 1[62 53 1[57 66 44 2[22 57 62 3[57
1[53 12[44 44 44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }41
79.1666 /NimbusSanL-ReguItal rf /Fc 136[62 44 48 26 44
31 2[48 48 1[22 1[22 22 48 1[26 44 1[44 1[44 14[57 1[53
62 10[57 57 13[44 44 44 44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }
27 79.1666 /NimbusSanL-Bold rf /Fd 133[40 44 41 66 45
48 26 34 31 44 48 43 46 70 23 44 19 23 46 44 26 38 48
35 44 40 3[26 1[26 2[53 79 57 62 49 42 53 62 48 62 66
75 48 2[27 66 60 44 48 61 56 48 62 7[40 40 40 40 40 40
40 40 40 40 1[20 26 20 48 3[22 2[40 33[48 2[{
 TeXBase1Encoding ReEncodeFont }67 79.1666 /URWPalladioL-Roma
rf /Fe 134[44 1[66 44 48 26 35 31 1[48 44 48 70 26 48
1[26 48 44 31 40 48 35 48 40 8[53 79 1[62 53 48 57 66
48 66 66 79 48 2[31 66 66 2[66 57 1[62 12[40 40 40 40
49[{ TeXBase1Encoding ReEncodeFont }44 79.1666 /URWPalladioL-Bold
rf /Ff 168[87 3[61 66 2[71 5[25 4[66 66 14[51 51 51 51
49[{ TeXBase1Encoding ReEncodeFont }11 91.6666 /NimbusSanL-Bold
rf /Fg 166[49 1[69 49 53 45 49 53 1[49 57 53 61 3[20
1[57 45 49 53 53 53 53 65[{ TeXBase1Encoding ReEncodeFont }19
73.3333 /NimbusSanL-Bold rf /Fh 200[32 32 32 32 32 32
32 49[{ TeXBase1Encoding ReEncodeFont }7 58.3333 /NimbusSanL-Regu
rf /Fi 133[33 33 33 48 33 37 19 33 22 1[37 37 37 56 15
33 15 15 37 37 19 37 37 33 37 37 12[41 11[48 1[41 2[48
44 19[19 1[19 44[{ TeXBase1Encoding ReEncodeFont }32
66.6667 /NimbusSanL-Regu rf /Fj 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fk 183[97 1[65 71 90 83 20[29 46[{
 TeXBase1Encoding ReEncodeFont }6 116.667 /URWPalladioL-Roma
rf /Fl 166[62 1[93 1[73 1[49 62 2[73 78 1[57 68 1[31
78 2[57 69[{ TeXBase1Encoding ReEncodeFont }12 93.3332
/URWPalladioL-Roma rf /Fm 170[156 123 105 3[157 1[189
3[67 1[153 1[122 155 142 122 8[100 5[100 51[{
 TeXBase1Encoding ReEncodeFont }13 200 /URWPalladioL-Roma
rf /Fn 169[116 124 98 84 107 1[97 126 133 151 98 116
5[98 1[113 1[124 65[{ TeXBase1Encoding ReEncodeFont }14
160 /URWPalladioL-Roma rf /Fo 188[144 133 66[{
 TeXBase1Encoding ReEncodeFont }2 200 /URWPalladioL-Bold
rf /Fp 171[107 98 3[133 133 2[124 5[98 1[116 1[124 65[{
 TeXBase1Encoding ReEncodeFont }8 160 /URWPalladioL-Bold
rf /Fq 175[60 1[83 22[50 4[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }7 100 /URWPalladioL-Roma
rf /Fr 166[53 2[58 3[53 1[48 63 1[76 6[44 49 62 1[49
62 65[{ TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Fs 171[102 87 111 14[118 67[{ TeXBase1Encoding ReEncodeFont }4
166.667 /URWPalladioL-Roma rf /Ft 166[89 1[133 96 1[82
70 2[81 105 111 1[81 2[45 111 102 1[81 1[95 1[104 65[{
 TeXBase1Encoding ReEncodeFont }15 133.333 /URWPalladioL-Roma
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -31 705 a @beginspecial 0 @llx
0 @lly 345 @urx 435 @ury 1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 521 1025 a Fs(C)8 b(S)51 b(C)8 b Ft(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Fs(T)8 b Ft(E)g(C)g(H)g(N)g(O)g(L)g(O)g(G)g(Y)52
b Fs(R)8 b Ft(E)g(V)g(I)g(E)g(W)1488 1225 y Fq(N)t Fr(O)t(V)t(E)t(M)t
(B)t(E)t(R)35 b Fq(2)t(1)t(,)d(2)t(0)t(1)t(7)1141 1725
y Fo(C)10 b Fp(O)g(N)g(N)g(E)g(C)g(T)g Fo(B)g Fp(A)g(S)g(K)g(E)g(T)1617
3375 y Fq(P)t Fr(R)t(E)t(P)m(A)t(R)5 b(E)g(D)36 b(F)t(O)t(R)1402
3608 y Fm(O)10 b(S)g(U)60 b(M)10 b(I)g(M)g(E)1292 3791
y Fk(D)c Fl(R)g Fk(.)36 b(C)6 b Fl(H)g(I)g(N)g(W)g(E)g(I)g(K)g(E)33
b Fk(E)6 b Fl(S)g(E)g(O)g(N)g(U)1649 4025 y Fq(P)t Fr(R)t(E)t(P)m(A)t
(R)f(E)g(D)35 b(B)t(Y)1492 4258 y Fm(G)10 b Fn(R)g(O)g(U)g(P)59
b Fm(3)10 b(9)143 4491 y(C)g Fn(O)g(N)g(N)g(E)g(C)g(T)g
Fm(B)g Fn(A)g(S)g(K)g(E)g(T)59 b Fm(D)10 b Fn(E)g(V)g(E)g(L)g(O)g(P)g
(M)g(E)g(N)g(T)57 b Fm(T)10 b Fn(E)g(A)g(M)1526 4675
y Fk(H)c Fl(E)g(N)g(R)s(Y)34 b Fk(F)6 b Fl(O)g(W)g(L)g(E)g(R)1815
4908 y Fj(Abstract)127 5038 y Fi(This)30 b(document)g(descr)q(ibes)h
(the)f(three)f(main)h(par)s(ts)g(of)f(the)h(ConnectBask)o(et)h(project)
f(that)f(Henr)r(y)i(F)n(o)o(wler)f(will)f(be)h(responsib)o(le)h(f)n(or)
e(and)8 5124 y(compares)f(and)f(contr)o(asts)h(diff)n(erent)e
(technologies)h(that)f(can)i(be)f(used)g(to)g(implement)e(those)i(par)s
(ts)g(of)g(the)f(project.)h(The)g(three)g(components)8
5210 y(of)18 b(the)f(project)g(co)o(v)n(ered)i(b)o(y)f(this)f(document)
h(are)g(the)f(ser)r(v)n(er)i(oper)o(ating)f(system,)f(w)o(eb)h(ser)r(v)
n(er)h(softw)o(are)o(,)e(and)h(the)f(database)o(.)h(Three)f
(technologies)8 5297 y(will)h(be)g(compared)h(and)f(analyz)o(ed)h
(based)f(on)h(cr)q(iter)q(ia)f(f)n(or)f(each)i(of)f(the)f(diff)n(erent)
g(categor)q(ies)i(and)f(an)g(e)n(xplanation)g(will)g(be)g(giv)n(en)h(f)
n(or)f(which)g(one)h(is)8 5383 y(the)g(best)f(choice)h(f)n(or)g(this)f
(project.)p eop end
%%Page: 1 2
TeXDict begin 1 1 bop 4018 -296 a Fh(1)-148 -144 y Ff(C)t
Fg(O)t(N)t(T)t(E)t(N)t(T)t(S)-150 80 y Fe(1)178 b(Introduction)3487
b Fd(2)68 224 y(1.1)197 b(Reason)21 b(for)i(Pr)o(oject)33
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(2)68 368 y(1.2)197 b(Overview)22 b(of)g(Pr)o(oject)32
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)-150
591 y Fe(2)178 b(Server)23 b(Operating)i(System)3028
b Fd(2)68 736 y(2.1)197 b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 880 y(2.2)197
b(Criteria)35 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(2)68 1024 y(2.3)197 b(Potential)21
b(Choices)61 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(2)365 1168 y(2.3.1)196 b(Linux)22 b(Ubuntu)f(Server)57
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(2)365 1313 y(2.3.2)196 b(W)l(indows)22
b(Server)39 b(.)i(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)365 1457
y(2.3.3)196 b(Solaris)78 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)135 b(3)68 1601 y(2.4)197 b(Discussion)44 b(.)e(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)68
1745 y(2.5)197 b(Conclusion)28 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)-150 1969 y Fe(3)178
b(W)-6 b(eb)24 b(Server)f(Software)3174 b Fd(4)68 2113
y(3.1)197 b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)135 b(4)68 2257 y(3.2)197 b(Criteria)35
b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)135 b(4)68 2402 y(3.3)197 b(Potential)21 b(Choices)61
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 2546 y(3.3.1)196 b(Apache)21 b(HTTP)58 b(.)41
b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(4)365 2690 y(3.3.2)196
b(Cher)o(okee)43 b(.)e(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 2834 y(3.3.3)196 b(NGINX)42 b(.)g(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)135 b(4)68 2979 y(3.4)197 b(Discussion)44
b(.)e(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(5)68 3123 y(3.5)197 b(Conclusion)28 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)-150 3346
y Fe(4)178 b(Database)3607 b Fd(5)68 3491 y(4.1)197 b(Overview)77
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(5)68 3635 y(4.2)197 b(Criteria)35 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68 3779
y(4.3)197 b(Potential)21 b(Choices)61 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(5)365 3923 y(4.3.1)196 b(MySQL)43
b(.)f(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)365
4068 y(4.3.2)196 b(SQLite)75 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)135 b(6)365 4212 y(4.3.3)196 b(Micr)o(osoft)22
b(SQL)g(Server)49 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(6)68 4356 y(4.4)197
b(Discussion)44 b(.)e(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)135 b(6)68 4500 y(4.5)197 b(Conclusion)28
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(6)-150 4724 y Fe(References)3763 b Fd(7)p eop end
%%Page: 2 3
TeXDict begin 2 2 bop 4018 -296 a Fh(2)-148 -144 y Ff(1)96
b(I)t Fg(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)-150
26 y Fc(1.1)79 b(Reason)23 b(f)n(or)g(Pr)n(oject)-150
195 y Fd(The)f(curr)o(ent)h(softwar)o(e)f(system)f(used)i(by)f(the)h
(Or)o(egon)g(State)e(University)h(V)-9 b(eterinary)23
b(Hospital)e(for)j(communication)e(is)h(out)f(of)h(date)-150
340 y(and)32 b(inef)o(\002cient.)g(Their)g(curr)o(ent)g(pr)o(ocess)f
(is)h(very)g(slow)g(and)h(manual,)e(with)h(lots)g(of)h(movement)e(ar)o
(ound)h(a)g(lar)o(ge)g(hospital)f(and)-150 484 y(unnecessary)e
(printing)g(of)h(papers.)e(For)j(instance,)d(if)i(an)g(owner)g(calls)f
(the)g(hospital)g(with)g(a)h(medical)f(question,)h(the)f(r)o
(eceptionist)-150 628 y(would)g(log)h(the)f(message)e(into)i(the)g
(computer)-6 b(,)29 b(print)g(it)g(out,)f(and)h(physically)g(walk)f
(the)h(paper)f(acr)o(oss)g(the)h(hospital)f(to)h(put)f(in)h(a)-150
772 y(spinning)20 b(queue.)g(When)g(a)g(doctor)h(or)g(other)g(staf)o(f)
e(member)h(looks)h(at)e(it,)h(they)g(would)h(write)g(an)e(answer)h(or)h
(necessary)e(action)i(on)f(the)-150 917 y(paper)-6 b(,)21
b(and)h(physically)f(carry)h(the)g(paper)f(to)h(the)g(next)g(location.)
g(Eventually)-9 b(,)21 b(after)h(it)g(r)o(eaches)f(all)h(the)g
(necessary)f(staf)o(f,)g(it)h(would)g(be)-150 1061 y(r)o(eturned)g(to)h
(the)f(r)o(eceptionist,)f(who)h(would)h(then)f(call)g(the)g(owner)h
(back)f(to)g(pr)o(ovide)g(them)g(with)h(the)f(information)h(they)f(r)o
(equested,)-150 1205 y(whether)g(that)g(is)f(an)h(answer)g(to)g(a)g
(question)g(or)g(to)h(schedule)f(an)f(appointment.)-150
1469 y Fc(1.2)79 b(Over)q(vie)o(w)21 b(of)i(Pr)n(oject)-150
1639 y Fd(This)h(pr)o(oject)f(aims)h(to)g(cr)o(eate)g(a)g(new)h
(stand-alone)f(solution,)g(ConnectBasket,)g(that)g(will)g(str)o
(eamline)f(the)i(communication)f(pr)o(ocess)-150 1783
y(in)31 b(the)f(hospital.)g(In)g(this)g(document,)h(thr)o(ee)f(main)g
(components)g(of)i(the)e(pr)o(oject)g(will)h(be)f(examined,)g(looking)h
(at)f(thr)o(ee)h(dif)o(fer)o(ent)-150 1927 y(technologies)22
b(for)g(each)g(that)f(could)h(be)g(used)f(to)h(implement)f(that)g
(component.)g(ConnectBasket)h(will)g(be)f(a)g(web-based)h(application,)
-150 2072 y(so)h(it)g(will)h(be)f(important)g(to)g(set)g(up)g(a)g
(server)g(with)g(the)g(best)g(operating)g(system)f(for)i(this)f(pr)o
(oject.)f(Ther)o(e)h(will)g(also)g(need)h(to)f(be)g(web)-150
2216 y(server)28 b(softwar)o(e)f(that)h(is)f(compatable)g(with)h(the)g
(server)g(operating)f(system)g(and)h(meets)f(all)h(of)h(the)f(r)o
(equir)o(ements)f(of)h(the)g(pr)o(oject.)-150 2360 y(Lastly)-9
b(,)26 b(the)f(information)i(collected)g(by)f(the)g(application)f(will)
h(need)g(to)g(be)g(stor)o(ed)g(in)g(a)g(database,)e(so)i(it)g(is)g
(important)f(for)i(the)f(best)-150 2504 y(option)c(to)g(be)g(used.)-148
2793 y Ff(2)96 b(S)t Fg(E)t(RV)t(E)t(R)33 b Ff(O)t Fg(P)t(E)t(R)t(A)m
(T)t(I)t(N)t(G)i Ff(S)t Fg(Y)t(S)t(T)t(E)t(M)-150 2963
y Fc(2.1)79 b(Over)q(vie)o(w)-150 3132 y Fd(For)28 b(this)e(pr)o
(oject,)g(ther)o(e)h(will)h(need)f(to)g(be)g(a)g(server)g(to)g(host)g
(the)g(web)g(based)f(services)h(involved)g(in)g(the)g(pr)o(oject.)f
(Because)h(servers)-150 3276 y(ar)o(e)i(mainly)h(used)g(to)g(r)o(un)g
(applications)e(and)i(do)h(not)f(need)g(to)g(be)g(interacted)g(with)g
(fr)o(equently)g(by)g(non-technical)g(users,)f(server)-150
3421 y(operating)22 b(systems)f(focus)h(on)h(the)f(ability)f(to)i
(manage)e(r)o(esour)o(ces)g(with)i(little)f(attention)f(being)i(paid)f
(to)g(a)g(user)g(interface.)g(Ther)o(e)g(ar)o(e)-150
3565 y(many)e(dif)o(fer)o(ent)g(choices)g(of)g(operating)g(systems)e
(that)h(can)h(r)o(un)g(on)h(a)e(server)h(and)g(this)f(section)h(will)g
(analyze)f(thr)o(ee)g(dif)o(fer)o(ent)h(options)-150
3709 y(and)i(show)g(that)g(one)g(will)g(be)g(the)g(best)f(\002t)h(for)h
(the)f(pr)o(oject.)-150 3973 y Fc(2.2)79 b(Criteria)-150
4143 y Fd(The)33 b(criteria)g(that)g(will)h(be)f(used)g(to)g(choose)h
(the)f(best)f(server)i(operating)e(system)h(for)h(this)f(pr)o(oject)f
(will)i(be)f(the)g(cost,)g(dif)o(\002culty)-150 4287
y(of)28 b(setup,)e(available)g(support,)g(necessary)g(downtime,)i(and)f
(amount)g(of)h(maintenance)e(needed.)i(For)g(this)f(pr)o(oject)g(using)
g(low)g(cost)-150 4431 y(or)34 b(fr)o(ee)f(technologies)h(will)f
(contribute)g(to)h(keeping)e(the)i(overall)f(budget)g(low)-7
b(.)33 b(Ther)o(e)f(is)h(a)g(r)o(elatively)g(small)f(time)h(window)h
(for)-150 4576 y(development)23 b(of)h(the)f(pr)o(oject,)f(so)i(a)f
(fast)g(and)g(easy)f(installation)h(is)g(very)g(important.)g(It)g(will)
g(also)g(be)g(important)g(to)g(have)g(to)h(have)e(a)-150
4720 y(low)g(maintenance)g(system)f(that)g(will)h(continue)h(to)f(work)
h(after)f(the)g(development)f(team)h(is)f(gone.)-150
4984 y Fc(2.3)79 b(P)m(otential)23 b(Choices)-150 5154
y Fb(2.3.1)79 b(Lin)o(ux)22 b(Ub)n(untu)g(Ser)r(v)n(er)-150
5316 y Fd(Ubuntu)32 b(is)g(a)h(distribution)g(of)h(Linux)f(that)f(is)h
(very)g(popular)f(on)h(desktop)g(computers,)f(but)g(also)h(has)f(a)g
(server)h(version)g(that)f(is)-150 5460 y(gr)o(owing)25
b(in)g(popularity)-9 b(.)24 b(Unlike)h(the)g(very)f(popular)g(Red)i
(Hat)e(Linux)h(distribution,)f(Ubuntu)g(is)h(fr)o(ee.)f(Updates)g(and)h
(maintenance)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 4018 -296 a Fh(3)-150 -144 y Fd(of)28
b(the)f(code)h(and)f(security)g(of)h(Ubuntu)e(ar)o(e)g(made)h(by)g(the)
g(global)g(community)g(as)g(well)g(as)f(a)h(paid)g(development)g(team.)
f(Ther)o(e)g(is)-150 0 y(twenty)e(four)g(seven)f(support)g(available)f
(that)h(can)h(be)f(very)h(important)f(if)i(a)e(quick)h(r)o(esponse)f
(is)g(needed)i(to)f(critical)g(err)o(ors.)f(Ubuntu)-150
145 y(is)h(an)h(easy)e(system)h(to)h(setup)e(with)h(an)h(installation)e
(that)h(can)h(be)f(completed)h(in)f(as)g(little)h(as)e(\002fteen)i
(minutes.)f(Like)h(other)g(versions)-150 289 y(of)30
b(Linux,)e(Ubuntu)g(Server)h(is)f(very)h(easy)f(to)h(maintain)f(and)h
(rar)o(ely)f(r)o(equir)o(es)h(r)o(eboots,)f(making)g(it)h(ideal)g(for)h
(an)e(application)g(that)-150 433 y(r)o(equir)o(es)21
b(very)h(little)g(downtime)h([1].)-150 647 y Fb(2.3.2)79
b(Windo)o(ws)21 b(Ser)r(v)n(er)-150 807 y Fd(The)k(W)l(indows)g(Server)
g(operating)f(systems)g(have)g(been)h(very)g(popular)f(with)h
(businesses)e(since)i(they)g(\002rst)f(came)h(out.)f(Many)h(tools)-150
952 y(ar)o(e)f(pr)o(ovided)g(that)g(will)g(work)h(very)f(well)g(with)h
(W)l(indows)f(Server)-6 b(,)24 b(including)h(Micr)o(osoft)f(SQL)h
(Server)f(and)g(Internet)g(Information)-150 1096 y(Services.)g(A)h(lar)
o(ge)g(number)g(of)h(successful)e(businesses)f(use)h(W)l(indows)i
(Server)-6 b(,)25 b(which)g(means)g(that)f(ther)o(e)h(ar)o(e)g(many)g
(examples)e(of)-150 1240 y(how)29 b(to)g(use)f(it)h(as)f(a)g(part)g(of)
h(a)g(business.)e(W)l(indows)i(Server)f(is)g(consider)o(ed)i(by)e(many)
h(to)f(be)h(the)g(best)e(server)i(operating)f(system)-150
1384 y(for)22 b(mission-critical)e(systems,)f(meaning)i(that)f(ther)o
(e)g(is)h(very)g(little)f(downtime)h(r)o(equir)o(ed)g(when)g(using)f(W)
l(indows)h(Server)-6 b(.)21 b(W)l(indows)-150 1529 y(Server)30
b(has)g(built)g(in)g(tools)g(to)h(help)f(impr)o(ove)g(power)g(ef)o
(\002ciency)h(of)g(the)f(server)g(that)g(can)g(help)g(lower)h(power)f
(consumption)g(for)-150 1673 y(a)d(company)-9 b(.)28
b(A)f(virtualization)f(platform)i(is)f(also)g(included)h(with)g(W)l
(indows)g(server)f(which)h(can)g(allow)f(for)i(easily)e(migrating)g
(the)-150 1817 y(system)22 b(fr)o(om)i(one)f(physical)g(machine)g(to)g
(another)h(or)f(allowing)h(users)e(to)i(r)o(emotely)f(access)f
(applications)g(and)h(r)o(un)h(them)f(like)g(they)-150
1961 y(wer)o(e)f(locally)g(installed)g([2].)-150 2175
y Fb(2.3.3)79 b(Solar)q(is)-150 2336 y Fd(Solaris)23
b(is)h(a)f(version)h(of)h(Unix)e(that)h(has)f(been)h(developed)g(as)f
(a)g(server)h(operating)f(system.)g(Solaris)g(was)g(cr)o(eated)h(by)g
(Sun)f(and)h(they)-150 2480 y(ar)o(e)d(also)g(r)o(esponsible)f(for)i
(supporting)f(it.)g(This)g(makes)f(Solaris)h(a)g(good)h(operating)f
(system)g(for)h(a)f(user)g(who)h(will)g(need)g(a)f(lot)g(of)h(help)-150
2624 y(in)j(setting)f(up)g(their)i(system.)d(Solaris)h(is)h(based)f(of)
o(f)h(of)h(Unix,)e(which)h(is)g(an)g(operating)f(system)g(that)g(has)g
(been)h(ar)o(ound)g(a)f(long)h(time)-150 2768 y(and)g(is)g(tr)o(usted)g
(by)h(many)e(businesses.)f(A)i(pr)o(oblem)g(with)g(Solaris)g(is)g(that)
f(it)h(will)h(not)f(r)o(un)h(on)g(many)e(dif)o(fer)o(ent)i(har)o(dwar)o
(e)f(systems)-150 2913 y(including)k(most)f(HP)g(and)g(IBM)g(systems.)f
(Solaris)g(is)h(not)h(fr)o(ee,)f(although)g(ther)o(e)g(is)g(a)g
(version)g(of)h(Solaris)e(that)h(is)g(mor)o(e)g(similar)g(to)-150
3057 y(Linux)22 b(and)g(can)g(be)g(optained)g(for)h(fr)o(ee)f(with)g
(optional)g(paid)g(support)f([3].)-150 3297 y Fc(2.4)79
b(Discussion)-150 3465 y Fd(Unix,)19 b(which)h(Solaris)e(is)h(based)g
(of)o(f)h(of,)g(has)f(been)g(ar)o(ound)g(a)g(long)h(time)f(compar)o(ed)
g(to)h(W)l(indows)f(Server)g(and)h(Linux)f(Ubuntu)f(Server)-6
b(,)-150 3609 y(but)21 b(is)g(not)h(curr)o(ently)g(as)f(popular)f(as)h
(either)h(of)g(the)g(other)g(two.)f(Linux)h(Ubuntu)f(Server)g(is)g
(completely)h(fr)o(ee)f(with)h(optional)f(support)-150
3754 y(packages)f(that)h(can)h(be)g(pur)o(chased,)e(in)i(contrast)f(to)
h(W)l(indows)g(Server)g(and)f(Solaris)g(which)i(both)e(cost)h(money)-9
b(.)22 b(All)f(of)i(the)e(operating)-150 3898 y(systems)29
b(pr)o(ovide)i(key)g(featur)o(es)e(that)i(make)f(any)h(server)f
(operating)h(system)e(useful)i(such)f(as)g(security)-9
b(,)31 b(support,)e(easy)h(setup.)g(It)-150 4042 y(might)c(be)h
(slightly)f(har)o(der)g(to)h(get)f(support)g(when)g(using)g(a)g(Linux)h
(system)e(than)h(the)h(other)g(two)f(because)f(Linux)i(isn't)f(owned)h
(by)-150 4186 y(anyone.)-150 4426 y Fc(2.5)79 b(Conc)n(lusion)-150
4595 y Fd(The)28 b(best)g(server)h(operating)f(system)f(to)i(use)f(for)
i(this)e(pr)o(oject)g(is)g(Ubuntu)g(Server)-6 b(.)28
b(Solaris)g(is)g(not)h(fr)o(ee)g(and)g(does)g(not)f(pr)o(ovide)h(as)
-150 4739 y(many)f(featur)o(es)f(as)h(W)l(indows)h(Server)f(or)h
(Ubuntu,)e(so)i(it)f(is)g(de\002nitely)h(not)f(the)h(right)g(choice)g
(for)g(this)f(pr)o(oject.)g(W)l(indows)g(Server)-150
4883 y(might)20 b(pr)o(ovide)f(slightly)h(mor)o(e)g(featur)o(es)f(than)
g(Ubuntu,)g(but)g(all)h(the)f(server)h(will)g(be)g(used)f(for)i(is)f
(to)g(host)f(a)h(simple)f(web)h(application,)-150 5027
y(so)33 b(things)f(like)h(allowing)g(users)f(to)h(r)o(un)h(desktop)e
(applications)f(r)o(emotely)i(ar)o(e)f(not)h(important)g(for)g(this)g
(pr)o(oject.)f(For)h(all)g(of)g(the)-150 5172 y(important)20
b(featur)o(es)f(to)h(this)g(pr)o(oject)g(like)g(setup,)f(support,)g
(downtime,)h(and)h(maintenance,)e(W)l(indows)i(Server)f(and)g(Ubuntu)f
(ar)o(e)h(not)-150 5316 y(that)27 b(dif)o(fer)o(ent)h(and)f(both)h
(would)g(be)f(good)h(choices.)g(The)f(main)g(dif)o(fer)o(ence)h(is)f
(that)g(Ubuntu)f(is)h(fr)o(ee,)h(and)f(for)i(that)d(r)o(eason,)h(it)g
(is)g(a)-150 5460 y(better)22 b(choice)g(than)g(W)l(indows)g(Server)g
(for)h(this)f(pr)o(oject.)p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 4018 -296 a Fh(4)p 20 -237 3861
4 v 18 -141 4 97 v 70 -169 a Fe(Criteria)p 859 -141 V
564 w(Ubuntu)25 b(Server)p 1798 -141 V 399 w(W)m(indows)h(Server)p
2838 -141 V 438 w(Solaris)p 3879 -141 V 20 -137 3861
4 v 18 -41 4 97 v 70 -70 a Fd(Cost)p 859 -41 V 682 w(Fr)o(ee)p
1798 -41 V 788 w($100+)p 2838 -41 V 833 w(Fr)o(ee)c(version)g
(available)p 3879 -41 V 20 -38 3861 4 v 18 58 4 97 v
70 30 a(Dif)o(\002culty)g(of)g(setup)p 859 58 V 201 w(V)-9
b(ery)22 b(easy)p 1798 58 V 599 w(Slightly)g(dif)o(\002cult)p
2838 58 V 472 w(Easy)p 3879 58 V 20 62 3861 4 v 18 158
4 97 v 70 129 a(A)-7 b(vailable)20 b(support)p 859 158
V 212 w(24)h(x)h(7)g(support)f(available)p 1798 158 V
97 w(Some)h(support)f(available)p 2838 158 V 211 w(Sun)g(pr)o(ovides)h
(support)p 3879 158 V 20 161 3861 4 v 18 257 4 97 v 70
229 a(Necessary)f(downtime)p 859 257 V 100 w(V)-9 b(ery)22
b(little)p 1798 257 V 596 w(V)-9 b(ery)23 b(little)p
2838 257 V 698 w(V)-9 b(ery)22 b(little)p 3879 257 V
20 261 3861 4 v 18 357 4 97 v 70 328 a(Maintenance)f(needed)p
859 357 V 111 w(Almost)g(none)p 1798 357 V 486 w(Some)h(maintenance)g
(needed)p 2838 357 V 100 w(Some)g(maintenance)f(needed)p
3879 357 V 20 360 3861 4 v -148 678 a Ff(3)96 b(W)t Fg(E)t(B)31
b Ff(S)t Fg(E)t(RV)t(E)t(R)i Ff(S)t Fg(O)t(F)t(T)t(WA)t(R)t(E)-150
848 y Fc(3.1)79 b(Over)q(vie)o(w)-150 1019 y Fd(W)-7
b(eb)24 b(server)g(softwar)o(e)g(is)g(essential)f(to)h(r)o(unning)i(a)e
(website,)f(and)h(allows)g(the)h(content)f(cr)o(eated)g(by)g
(developers)g(to)h(be)f(displayed)g(to)-150 1163 y(the)d(end)g(users)f
(thr)o(ough)g(a)h(web)f(br)o(owser)-6 b(.)20 b(Ther)o(e)h(ar)o(e)f
(many)g(dif)o(fer)o(ent)h(options)f(to)h(use)f(and)h(it)g(will)g(be)f
(important)g(for)i(this)e(pr)o(oject)g(to)-150 1307 y(have)h(one)i
(that)e(meets)h(all)f(of)i(the)f(needs)g(of)h(the)f(pr)o(oject.)-150
1579 y Fc(3.2)79 b(Criteria)-150 1750 y Fd(The)22 b(most)h(important)f
(factors)g(for)i(this)e(pr)o(oject)g(ar)o(e)g(a)h(web)f(server)h
(softwar)o(e)f(that)g(is)g(well)h(documented)g(and)g(fast)f(to)h
(setup,)e(as)h(well)-150 1894 y(as)j(cheap)g(and)g(able)g(to)h(r)o(un)g
(at)e(fast)h(speeds)g(with)g(r)o(elatively)g(little)g(downtime.)h(W)l
(ith)f(the)g(short)h(time)f(period)h(for)g(development,)f(it)-150
2038 y(will)e(be)g(critical)g(to)g(have)g(a)f(web)h(server)g(that)f(is)
h(up)g(and)g(r)o(unning)g(quickly)-9 b(.)24 b(In)f(addition,)g(a)g(low)
g(cost)g(is)g(another)g(factor)g(to)g(consider)-150 2182
y(for)f(this)f(pr)o(oject.)e(The)i(web)g(application)f(will)h(be)g
(very)g(important)f(to)h(daily)g(operations)g(of)h(the)e(hospital)g
(making)h(small)f(amounts)g(of)-150 2327 y(downtime)j(another)f(factor)
g(in)g(evaluation.)-150 2599 y Fc(3.3)79 b(P)m(otential)23
b(Choices)-150 2769 y Fb(3.3.1)79 b(Apache)22 b(HTTP)-150
2932 y Fd(The)h(Apache)g(W)-7 b(eb)23 b(Server)g(is)g(very)h(powerful)g
(and)f(pr)o(ovides)g(many)g(useful)g(featur)o(es)g(to)g(its)g(users.)g
(It)g(is)g(an)g(open)h(sour)o(ce)f(softwar)o(e,)-150
3076 y(making)30 b(it)g(fr)o(ee)g(to)g(use)g(and)g(also)g(gives)f
(users)g(of)i(this)f(softwar)o(e)f(the)h(ability)g(to)g(modify)h(its)f
(sour)o(ce)f(code)i(to)f(meet)g(their)g(needs.)-150 3220
y(Featur)o(es)24 b(include)h(a)g(contr)o(ol)g(panel,)f(customizable)g
(err)o(or)i(messages,)d(authentication)h(schemes,)g(Domain)h(Name)f
(Service,)h(Simple)-150 3365 y(Mail)c(T)-7 b(ransfer)20
b(Pr)o(otocol,)i(and)f(File)g(T)-7 b(ransfer)20 b(Pr)o(otocol.)i
(Apache)e(can)h(r)o(un)g(on)h(almost)e(any)h(operating)f(system)g
(including)i(W)l(indows,)-150 3509 y(MacOS,)e(Linux,)h(and)g(Unix.)f
(Ther)o(e)g(is)g(also)g(support)g(for)i(many)e(dif)o(fer)o(ent)h(pr)o
(ogramming)g(languages,)e(including)i(PHP)f(and)h(Python,)-150
3653 y(and)h(the)g(ability)g(to)g(have)f(SSL)h(and)g(TSL)g(encryption)g
(for)h(websites)e([4].)-150 3889 y Fb(3.3.2)79 b(Cherok)n(ee)-150
4052 y Fd(Cher)o(okee)23 b(is)f(a)h(high)g(performing)g(web)g(server)g
(that)f(r)o(uns)h(quickly)g(and)g(is)f(easy)g(to)h(set)f(up.)g(It)g
(supports)g(many)g(other)h(technologies,)-150 4196 y(such)33
b(as)g(PHP)g(and)g(SSL)g(encryption,)g(and)h(can)f(be)g(r)o(un)h(of)g
(many)f(dif)o(fer)o(ent)h(operating)f(systems)f(including)i(Linux,)f
(Unix,)g(and)-150 4340 y(W)l(indows.)26 b(Cher)o(okee)g(also)f(pr)o
(ovides)g(updates)f(that)h(do)i(not)f(r)o(equir)o(e)f(any)h(downtime.)g
(Another)f(important)h(featur)o(e)f(of)h(Cher)o(okee)-150
4484 y(is)21 b(that)h(it)f(pr)o(ovides)g(an)h(easy)f(to)h(use)f
(con\002guration)h(interface)g(called)g(cher)o(okee-admin.)g(Cher)o
(okee)g(is)f(also)g(fr)o(ee)h(and)g(has)f(a)h(an)f(open)-150
4629 y(sour)o(ce)i(code)h(base)f(that)f(can)i(be)f(modi\002ed)h(by)g
(anyone)f(who)h(wants)f(to)g(make)g(changes)g(to)h(adjust)e(the)h
(system)g(to)g(meet)g(their)h(needs)-150 4773 y([5].)-150
5009 y Fb(3.3.3)79 b(NGINX)-150 5172 y Fd(NGINX)21 b(is)h(a)f(system)g
(that)g(has)g(been)g(optimized)h(to)f(handle)h(a)g(lar)o(ge)f(number)h
(of)g(simultaneous)e(connections.)i(It)f(pr)o(ovides)g(support)-150
5316 y(for)31 b(PHP)e(and)g(Python)h(as)f(well)g(as)g(email)g(pr)o
(otocols)h(like)f(SMTP)-10 b(,)28 b(POP3,)h(and)h(IMAP)-10
b(.)28 b(It)h(is)g(a)h(very)f(fast)g(system)g(that)g(maximizes)-150
5460 y(har)o(dwar)o(e)35 b(ef)o(\002ciency)-9 b(.)36
b(NGINX)g(mainly)f(only)i(supports)d(Linux)i(and)g(Unix)f(based)h
(systems,)e(and)i(has)f(very)h(little)f(support)g(for)p
eop end
%%Page: 5 6
TeXDict begin 5 5 bop 4018 -296 a Fh(5)-150 -144 y Fd(W)l(indows)27
b(and)g(other)g(operating)f(systems.)f(Ther)o(e)h(is)g(plenty)g(of)i
(documentation)e(explaining)g(how)h(to)g(use)f(NGINX)g(and)h(training)
-150 0 y(to)g(learn)g(mor)o(e)g(about)g(the)g(system.)e(This)i(softwar)
o(e)f(is)h(open)g(sour)o(ce)f(and)i(fr)o(ee)f(to)g(use)f(with)i(an)e
(optional)h(pur)o(chase)f(that)g(includes)-150 145 y(support)21
b([6].)-150 414 y Fc(3.4)79 b(Discussion)-150 584 y Fd(Apache)18
b(HTTP)g(and)h(NGINX)g(ar)o(e)f(both)h(widely)h(used)e(web)h(servers)g
(compar)o(ed)f(to)i(Cher)o(okee,)f(which)g(is)g(a)g(much)g(less)f(used)
g(pr)o(oduct.)-150 728 y(All)f(thr)o(ee)h(ar)o(e)f(open)g(sour)o(ce,)g
(available)f(for)i(fr)o(ee,)g(and)f(pr)o(ovide)h(many)f(of)h(the)g
(same)e(featur)o(es)h(and)g(support.)g(NGINX)g(doesn't)g(support)-150
873 y(very)22 b(many)g(operating)g(systems)e(compar)o(ed)i(to)g(both)g
(Apache)f(and)h(Cher)o(okee,)g(which)h(support)e(almost)g(any)h
(operating)g(system.)-150 1142 y Fc(3.5)79 b(Conc)n(lusion)-150
1312 y Fd(For)27 b(this)f(pr)o(oject,)f(the)h(best)g(choice)h(of)g(web)
f(server)g(softwar)o(e)f(is)h(Apache.)f(It)h(pr)o(ovides)g(all)g(of)h
(the)f(featur)o(es)f(that)h(ar)o(e)g(necessary)f(for)-150
1456 y(the)e(pr)o(oject,)f(and)i(can)f(r)o(un)g(on)h(almost)e(any)h
(operating)g(system,)f(wher)o(e)h(NGINX)g(can)g(not.)g(Cher)o(okee)h
(is)e(also)h(a)g(good)h(choice,)g(but)e(is)-150 1601
y(not)g(as)g(widely)g(used)g(and)g(does)g(not)h(have)e(as)g(much)h
(support)f(or)i(documentation)f(as)f(Apache.)p 299 1747
3302 4 v 298 1843 4 97 v 349 1814 a Fe(Criteria)p 1139
1843 V 564 w(Apache)j(HTTP)p 2035 1843 V 379 w(Cherokee)p
2881 1843 V 498 w(NGINX)p 3599 1843 V 299 1846 3302 4
v 298 1942 4 97 v 349 1913 a Fd(Cost)p 1139 1942 V 682
w(Fr)o(ee)p 2035 1942 V 746 w(Fr)o(ee)p 2881 1942 V 696
w(Fr)o(ee)p 3599 1942 V 299 1945 3302 4 v 298 2042 4
97 v 349 2013 a(Documentation)p 1139 2042 V 296 w(V)-9
b(ery)23 b(well)f(documented)p 2035 2042 V 100 w(Some)g(documentation)p
2881 2042 V 99 w(W)-7 b(ell)22 b(documented)p 3599 2042
V 299 2045 3302 4 v 298 2141 4 97 v 349 2112 a(Setup)f(time)p
1139 2141 V 461 w(Fast)p 2035 2141 V 752 w(V)-9 b(ery)23
b(fast)p 2881 2141 V 536 w(Fast)p 3599 2141 V 299 2144
3302 4 v 298 2241 4 97 v 349 2212 a(Necessary)e(downtime)p
1139 2241 V 100 w(V)-9 b(ery)23 b(little)p 2035 2241
V 553 w(V)-9 b(ery)23 b(little)p 2881 2241 V 503 w(V)-9
b(ery)23 b(little)p 3599 2241 V 299 2244 3302 4 v -148
2636 a Ff(4)96 b(D)q Fg(A)m(T)m(A)t(B)r(A)t(S)t(E)-150
2806 y Fc(4.1)79 b(Over)q(vie)o(w)-150 2976 y Fd(A)29
b(database)e(will)i(be)g(a)g(very)g(important)f(part)g(of)i(this)f(pr)o
(oject.)f(User)g(information)i(as)e(well)h(as)f(information)i(about)e
(patients)g(will)-150 3120 y(need)23 b(to)g(be)f(stor)o(ed)g(in)h(the)f
(database.)f(The)h(web)g(application)g(will)g(r)o(ely)h(heavily)f(on)h
(interaction)f(with)h(the)f(database)f(to)i(pr)o(ovide)f(the)-150
3265 y(featur)o(es)f(users)g(will)h(need.)-150 3534 y
Fc(4.2)79 b(Criteria)-150 3704 y Fd(Important)25 b(factors)g(to)h
(consider)g(when)g(selecting)g(a)f(database)f(for)i(this)g(pr)o(oject)e
(ar)o(e)h(the)h(cost,)f(speed,)g(compatability)f(with)i(chosen)-150
3848 y(operating)c(systems)e(and)i(web)g(servers,)f(and)h(ability)g(to)
g(pr)o(ovide)g(easy)f(ways)g(to)h(r)o(eport)g(on)g(the)g(data)g(it)g
(holds.)g(As)f(always)g(it)h(will)g(be)-150 3993 y(important)g(to)h
(keep)g(the)g(cost)f(of)i(the)f(pr)o(oject)f(low)-7 b(.)23
b(Users)f(will)h(need)g(to)g(enter)g(information)h(while)f(on)g(phone)g
(calls)f(with)h(owners)g(of)-150 4137 y(the)g(patients,)e(so)j(speed)e
(will)i(be)e(important)h(as)f(they)h(don't)h(want)f(to)g(waste)f(the)h
(time)g(of)h(the)f(person)g(on)h(the)f(phone.)g(Reporting)g(on)-150
4281 y(the)f(data)f(collected)i(will)g(be)e(very)i(important)e(for)i
(administrators)e(to)h(evaluate)f(the)h(success)f(of)h(the)g(hospital)g
(and)g(the)g(new)g(system.)-150 4551 y Fc(4.3)79 b(P)m(otential)23
b(Choices)-150 4720 y Fb(4.3.1)79 b(MySQL)-150 4883 y
Fd(MySQL)32 b(is)g(an)g(open)g(sour)o(ce)f(database)g(management)g
(tool)h(that)f(pr)o(ovides)h(many)g(important)f(featur)o(es.)g(MySQL)h
(is)g(known)g(for)-150 5027 y(its)f(excellent)h(data)g(security)f(and)h
(is)g(used)f(by)h(many)g(popular)f(websites,)f(including)j(Facebook)f
(and)g(T)-7 b(witter)h(.)31 b(It)h(pr)o(ovides)f(high)-150
5172 y(performance)20 b(and)g(excellent)f(scalability)f(that)h(gives)g
(it)g(gr)o(eat)g(speeds)g(for)h(any)f(size)g(system)g(and)g(allows)g
(it)h(to)f(only)h(take)f(up)g(as)g(much)-150 5316 y(space)i(as)f
(needed.)j(MySQL)e(comes)h(with)g(a)f(guarantee)g(of)h(no)g(downtime)g
(and)g(can)g(work)g(with)g(almost)f(any)g(operating)g(system)g(and)-150
5460 y(web)h(server)g([7].)p eop end
%%Page: 6 7
TeXDict begin 6 6 bop 4018 -296 a Fh(6)-150 -144 y Fb(4.3.2)79
b(SQLite)-150 19 y Fd(SQLite)27 b(is)f(a)g(r)o(elational)g(database)f
(management)h(system)f(that)i(is)f(imbedded)h(into)g(the)g(system)e
(that)i(is)f(using)g(it.)h(It)f(is)g(a)h(\002le-based)-150
163 y(database)c(that)g(interacts)h(dir)o(ectly)h(with)f(the)g(system)f
(making)h(it)h(very)f(fast)g(and)g(ef)o(\002cient.)g(The)g(system)f(is)
h(easily)g(portable)f(because)-150 307 y(it)g(is)f(contained)h(in)g(a)g
(single)f(\002le)h(on)g(the)g(system.)e(SQLite)i(uses)e(a)i(slightly)f
(modi\002ed)i(SQL)f(that)f(has)g(only)h(a)g(few)g(featur)o(es)e(r)o
(emoved.)-150 452 y(It)26 b(does)h(not)f(pr)o(ovide)h(any)f(ability)g
(to)g(manage)g(dif)o(fer)o(ent)h(users)e(access)h(to)h(the)f(database)f
(like)h(some)g(other)h(management)f(systems)-150 596
y(might)c([8].)-150 833 y Fb(4.3.3)79 b(Microsoft)21
b(SQL)h(Ser)r(v)n(er)-150 996 y Fd(Micr)o(osoft)29 b(SQL)h(Server)f(is)
f(a)h(very)g(easy)g(to)g(use)f(and)h(powerful)h(database)d(management)h
(system.)g(It)h(pr)o(ovides)f(integration)h(with)-150
1140 y(tools)g(like)g(SQL)g(Server)g(Management)e(Studio)i(and)g(SQL)g
(Server)g(Pr)o(o\002ler)g(that)f(help)h(users)f(manage)g(their)h
(database.)e(Ther)o(e)h(is)g(a)-150 1284 y(lot)23 b(of)i(support)d(and)
h(documentation)g(pr)o(ovided)h(for)g(SQL)g(Server)f(and)g(it)h(is)f
(much)g(easier)g(to)g(learn)g(and)h(get)f(help)g(with)g(than)g(many)
-150 1429 y(other)f(SQL)h(based)e(pr)o(oducts.)g(SQL)i(server)f(is)f(a)
h(paid)g(pr)o(oduct)g(and)g(pur)o(chasing)f(comes)h(with)g(support)f
(fr)o(om)h(Micr)o(osoft)g([9].)-150 1703 y Fc(4.4)79
b(Discussion)-150 1873 y Fd(SQLite)27 b(is)f(a)g(slightly)g(less)g
(featur)o(e)g(rich)h(pr)o(oduct)f(compar)o(ed)h(to)f(MySQL)h(and)g
(Micr)o(osoft)g(SQL)f(Server)-6 b(.)27 b(All)f(of)h(these)f(systems)f
(can)-150 2017 y(work)j(with)g(many)g(dif)o(fer)o(ent)g(operating)g
(systems)e(and)i(web)g(servers.)f(Micr)o(osoft)h(SQL)g(Server)f(is)h(a)
f(paid)h(pr)o(oduct,)f(in)i(contrast)e(to)-150 2162 y(MySQL)22
b(and)g(SQLite,)g(which)h(can)f(both)g(be)g(used)f(for)j(fr)o(ee.)-150
2436 y Fc(4.5)79 b(Conc)n(lusion)-150 2606 y Fd(The)23
b(best)g(database)f(management)g(system)g(for)j(this)e(pr)o(oject)g(is)
g(MySQL.)g(The)h(speed)f(of)h(SQLite)f(is)h(better)f(than)g(the)g
(other)h(two,)g(but)-150 2750 y(is)e(not)g(worth)h(the)f(tradeof)o(f)h
(of)g(lost)f(functionality)g(for)h(this)f(application.)f(Micr)o(osoft)h
(SQL)h(Server)f(pr)o(ovides)f(slightly)h(mor)o(e)g(featur)o(es,)-150
2894 y(documentation,)32 b(and)g(support)f(than)h(MySQL,)g(but)f(they)h
(ar)o(e)f(not)i(important)e(enough)h(to)h(the)e(pr)o(oject)h(to)g(of)o
(fset)g(the)g(lar)o(ge)f(cost)-150 3039 y(dif)o(fer)o(ence)23
b(between)e(the)h(two.)p -150 3166 4447 4 v -152 3262
4 97 v -100 3233 a Fe(Criteria)p 667 3262 V 541 w(MySQL)p
1592 3262 V 641 w(SQLite)p 2728 3262 V 881 w(Microsoft)j(SQL)g(Server)p
4295 3262 V -150 3265 4447 4 v -152 3362 4 97 v -100
3333 a Fd(Cost)p 667 3362 V 659 w(Fr)o(ee)p 1592 3362
V 776 w(Fr)o(ee)p 2728 3362 V 985 w(Ar)o(ound)d($1000)p
4295 3362 V -150 3365 4447 4 v -152 3461 4 97 v -100
3432 a(Speed)p 667 3461 V 604 w(Fast)p 1592 3461 V 782
w(Extr)o(emely)f(fast)p 2728 3461 V 630 w(Fast)p 4295
3461 V -150 3464 4447 4 v -152 3561 4 97 v -100 3532
a(Reporting)h(capability)p 667 3561 V 98 w(Good)p 1592
3561 V 732 w(A)-7 b(verage)p 2728 3561 V 844 w(Excellent)p
4295 3561 V -150 3564 4447 4 v -152 3660 4 97 v -100
3631 a(Compatability)p 667 3660 V 312 w(W)g(orks)22 b(with)g(any)g
(system)p 1592 3660 V 99 w(Designed)g(for)h(smaller)e(systems)p
2728 3660 V 98 w(W)-7 b(orks)22 b(best)g(with)g(other)g(Micr)o(osoft)h
(pr)o(oducts)p 4295 3660 V -150 3663 4447 4 v eop end
%%Page: 7 8
TeXDict begin 7 7 bop 4018 -296 a Fh(7)-148 -144 y Ff(R)t
Fg(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t(S)-150 28 y Fa([1])40
b(K.)23 b(Hess,)h(\223Ubuntu)f(server:)g(The)g(linux)h(server)f
(operating)h(systems)g(dark)f(horse.\224)h(https://www)-6
b(.serverwatch.com/tr)o(ends/article.php/3870141/)-33
141 y(Ubuntu-)t(Server)o(-)t(The-)t(Linux-)t(Server)o(-)t(Operating-)t
(Systems-)t(Dark-)t(Horse.htm,)23 b(3)c(2010.)-150 253
y([2])40 b(O.)18 b(Rist,)g(\223W)l(indows)g(server)g(top)g(5)g
(bene\002ts)g(for)g(todays)h(workfor)o(ce.\224)f
(https://blogs.technet.micr)o(osoft.com/windowsserver)o
(experts/2010/02/08/)-33 366 y(windows-)t(server)o(-)t(top-)t(5-)t
(bene\002ts-)t(for)o(-)t(todays-)t(workfor)o(ce/,)24
b(2)19 b(2010.)-150 478 y([3])40 b(K.)67 b(Milber)o(g,)f(\223When)g(to)
g(use)h(solaris)h(vs.)e(linux:)h(Operating)g(system)g(comparison.\224)g
(http://sear)o(chdatacenter)-5 b(.techtar)o(get.com/tip/)-33
591 y(When-)t(to-)t(use-)t(Solaris-)t(vs-)t(Linux-)t(Operating-)t(sys)q
(tem-)t(compari)q(son,)24 b(12)c(2008.)-150 703 y([4])40
b(D.)18 b(Sullivan,)i(\223Advantages)f(of)g(apache)g(web)f(server)-5
b(.\224)19 b(https://www)-6 b(.techwalla.com/articles/advantages-)t
(of-)t(apache-)t(web-)t(server.)-150 816 y([5])40 b(A.)19
b(L.)f(Ortega,)h(\223Cher)o(okee)g(basics.\224)h(http://cher)o(okee-)t
(pr)o(oject.com/doc/basics)p 2160 825 34 5 v 33 w(why)p
2325 825 V 33 w(cher)o(okee.html.)-150 928 y([6])40 b(A.)23
b(Leslie,)g(\223Nginx)h(vs.)e(apache)h(\(pr)o(o/con)h(r)o(eview)-6
b(,)22 b(uses,)h(&)f(hosting)i(for)f(each\).\224)g(http://www)-6
b(.hostingadvice.com/how-)t(to/nginx-)t(vs-)t(apache/,)23
b(7)-33 1041 y(2017.)-150 1153 y([7])40 b(T)-5 b(.)26
b(Branson,)g(\2238)g(major)g(advantages)g(of)g(using)h(mysql.\224)f
(https://www)-6 b(.datamation.com/storage/8-)t(major)o(-)t(advantages-)
t(of-)t(using-)t(mysql.html,)30 b(11)-33 1266 y(2016.)-150
1378 y([8])40 b(O.)27 b(T)-6 b(ezer)h(,)27 b(\223Sqlite)h(vs)f(mysql)h
(vs)f(postgr)o(esql:)h(A)f(comparison)h(of)f(r)o(elational)i(database)f
(management)e(systems.\224)i(https://www)-6 b(.digitalocean.com/)-33
1491 y(community/tutorials/sqlite-)t(vs-)t(mysql-)t(vs-)t(po)q(stgr)o
(esql)q(-)t(a-)5 b(compari)q(son-)g(of-)t(relatio)q(nal-)g(database-)g
(management-)t(systems,)24 b(2)19 b(2014.)-150 1603 y([9])40
b(G.)35 b(Farrar)-5 b(,)37 b(\223Micr)o(osoft)f(sql)g(server:)g
(Advantages)f(and)g(challenges)g(fr)o(om)h(the)f(virtualization)i
(admins)f(view)-6 b(.\224)34 b(https://turbonomic.com/blog/)-33
1716 y(micr)o(osoft-)t(sql-)t(server)o(-)t(advantages-)t(challenges-)t
(virtuali)q(zatio)q(n-)t(admins-)5 b(view/,)24 b(8)19
b(2016.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
