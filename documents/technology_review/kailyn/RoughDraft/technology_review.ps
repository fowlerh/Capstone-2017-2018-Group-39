%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: technology_review.dvi
%%CreationDate: Tue Nov 14 07:49:47 2017
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold NimbusSanL-Bold
%%+ NimbusSanL-Regu NimbusSanL-ReguItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter technology_review.dvi -o
%+ technology_review.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.11.14:0749
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4ACEDECD8D9ADD713BCB89E89FD5FE649B1803E3C1EF42D93DBB6
D27B0E21B6043AC73B6FF214AF5B072166583BBA69C7965DC0D8F838ACEF3534
083DFC32E5B188AC9145D33F891966459629C28959651D899B9DF267A46260AB
1ACE2D780F5624CF53DE6A33988A6DFAF89F48E9ED6D9BC00E54DABD29CE1992
FD55E0F38B8C3202D3D4F36FEFB4AE1EDCCA00299CF085F2E5A1F36DA5C25076
2E98297F6D6FB6A04374984B8A4A9609F11C71B3BA30B22414DDD6C97819E29C
1B183955048D80899581AFD736FDA1C65DE434A689340D0346E0F7873BA3F38E
A4E51A1A1F2E93F2F5DEBFFE420C7368C5E73A0E5D59097418C1033DD0209362
8A1379F54E5D7551EC62CB89BB4C9DE430C659868C979C475CF59579787EA053
B62FC8F4C33339E05BD7E50DBD13CB8F058C9AC51A7A1B288841E63778246280
FF82DABC96B0C8D6B05DC04530E33958CB72DA28DAA11A07D9D7257CCE2A6747
A62E88B4F3ED2665FE6EDEDD0B1B2F0ACFB39A66686AE14C09D217D1C3ECF64C
1C95F866AD6FCBFB38535AD385F3FBEE31DD19A86BF97195C267454702C59351
0BBB7AE0A5F4125C282676CFB38E41D0055A8BA28C5262CBEAE15984ED81596E
B2039CC1A9D5271DD673D1241DDDA5FDA97AD809021D1EA243019B299765A6EE
F8A12E6263CE2C7A75806C41BD8CCC4FBFB9C8CA5FBA4E4E99A88103935A91A9
10B6AC680A8D872CE89A2FA7CAE9AC02990882F3E81B9090CF23C4F1B87D58F4
F7247675B2391F4610A58C8A18DB8D5AB923D1CAAABD63C49E665E9E9B22418B
330B24A0523396463F528D5160C7E9F656D93EB214E1FA04F01B6E219421EB70
55EABD746EC148159823E67B18643BB656BCDEB0F3292A8AD108AA64FFEB0CC4
106C9881083F76F9FE0B6D85C50D9B2C4875701BA03B7B042C7A371164CD8376
433E9D2556C8FD15B110E435A6C93FC42E6678C5048808436A6975645A8D0668
BD40279D4E233E77C42CDE50214DA86F8414A3EC521002999ECB6794E6DD3AD9
BC73D8EE27894A1B19B5E41617DE991A6278646600CBAA57E8617241F4ED7522
69316451D65011788297EEBD7853A935A1AD00FC93B780A5A1A40F8803D89AA4
F15A63CEF1A332DDF10639F3F84E2CF9D650B3DD5D8A4131AB3EFDCDAC63301D
F6B0A0CF28E918F844C7A8E197207BC79A05951D15AE650609334CFE595E725A
02DBFFDBFF5B71E1041E49B45D34173EC3157374B94FEF8E77173E5FBD8530DC
9C5E81F1BD231E6DED7E8241C27D2C9F792B3269F8ADB1EE82359D114C1015DE
4E16D1305DB36392AA8C477BBC994389D806B3E19297E8F9A3B5D1D841A976A9
CC1A125C8A2A10CAEDCBD4D30ABBF774C856F4FDA49C67C57A135C1E62C497A8
C5C173F10B3A681026367F07665902B7963DE71D8CD53D42D84AD041E64EEA67
9F78F37398409E62E48D1F6853A21DEFB1FE0913EFB087B698901CCA4C0C949C
DB0FA884CDF665D0494FDFF49A4E4B541F92B0940ABC31B5F8111BA5D8F1D816
4CDF3AC045BA1227ABF00FD186B16B5AF15074E4829FDCE10EF651C222D461B7
3B65B6B23C17E54BA57792883B53D9B5F479B25795674572F3135F410D9D11EE
39E338B20C864D769C0B2F3F2E2B5EA81D6BD12314AC2752BE793A852ED6B140
D35539FE4541F95279F17F7CBA93C154A19957D4C843F94F52077235E68A65BB
D8144B53E69A0BF9E2643FBB340CBC2CB2B78D188BFBB83C6AF09FB64DAE767F
60068B127F512CD94B4A6DDFD89B501F212C04DDCF14013B39F641946EB21E62
34BC1B1166547B306FD0FE5114372015A8CDA28AED5EB78B4FA50064D7A01485
B458622B220631188F989103E4F6F8A2D93136D52CF079EE5EB741A76FF8EEB7
E309A7071152823274A655F43C10C9E8824F3038D43DEE9C4106E3E37A9AF8E6
E8FEB1113E9690AFB2B82FF75CAD9FBAF64491CE33E250F75311BEC3A1316865
EE7DEBE396116230FE81972C05F20858A2E1071C14C88C1762DB09ED57A323C0
49F7785143575804E64D10C387410271209DB80713C7D5C2AC2560D82B1302A6
DCCDF9D948506716B3A5040DD93391098692D53E870A5DC504B51EA132515B35
5A1CE24C24EB30F877FF5EF944F62575FCDDF3093BF5CF3E702C215A47AD18BD
54362ACF2D523FDE5A4AD93B648F6F54E5F7E7C38086DA57C75298A4E43A77DB
572F71818CF7D78139BD1A407F16749653D1E0C589E143BF5B6F014DD28E2B60
F06B987E0323E8B487E76B765DE428609D27A7F793FDE80E5EF0194DFF8C3545
853B60E754898ED8F08E232E3E708809142812FF64F26466D5119135FB8F1700
4376676A200917075663076A9730FD7543E777F380CC1E735AB8FAC2717F99F5
80CF25C3A64982634C8ECE94395C28EEA275244DC7B1CEE17957997FFB4B64B2
B3B6619FDC7541557E4BE3EDAB572B816C02CE2700205D7E1D43BE82C5490942
52A18ADD5626450A2914B9892E0147A245EE0D48B81B39046A34DCDBD02621AC
20ACFAB65C54852B96D04EEE82E743B8A3543FA64CCCE4A69B97E460E885B647
A86F4B7869C2FAEFF9B4FB477B82D5114CEFFBEDB202555CD5D0555A0327B9EC
EC192422FBC08EA3CD5F95D6E1CD48096446FDAE1016A3406165856699FD89FD
2DE3E86F3B1913294E8ADC0DBE33FBE372F50A7CC7638FB49DBE05E51DC524F5
65424C0630E8DE401BCB188DD4CD8FB97522500949EFD99EAB7D438B00C8D066
06B4BA702EC2EC570D8B87849225736F62C1D165C0F12B02AB5CF27C06B49CDF
D6370C6DFCCA03D657353EB568DEDA08162D9718D28BF9E906D9591370733139
78F2D4383FEA6A7AC505A4349861F3FE8BCDB2B447A5343ED19561DB907B2A19
150135B71FCE0D460334287825C94892E2DF9B35F469ADB45309B0B2CFD7E622
EC22119C95B6669F9EF86193FA77BF6B4ED189091E37E91D93114E59B3A02BE1
264A48F3D0E610E04D616815B0529375B9B37E332C596821BA108F2D43EBBE77
01CBAA603CAA3FE1D3A28E390BD7BCC6BC0DB893291A0936CF3C80AA8F204229
9DAACCDFB1253018B968083511C9CD65C6CC8589C65C1CFAD461CCC1A09F37C6
15DDA575F46B22AFA495663C8311D1905AEC03DEBD05688D9A8BB238B40E635A
C2EE5563332D75ADAF193E5E9B30FD11F04D70E268F1D4B352395011B3A13BD1
44BDFAAABE3E3F9A2B1635540FC53E8FEF33CC0AF6A8C1095C01691F99A45C8F
AE0A4455C3575F8374B2AF8393C9101FF9F05DF95A2C2F454D060914604C5A77
9FC5C0D5DB9D38B22130C5B4CFD5AF48A89122C8110D1D3F8EF05DCA767BB4E6
E77EED67E947AA958B11ED879178E2082634E743A5EB7E40045F10F38A3E82F6
3A805AF9CD5446664C394E9E0AC2CA7538930B3D049B0F47EDB87255BF41A4DA
BD72668FC1B9537C2B47D0586E41D817284CFE29144716130C8C9CFC8B8581A0
5876770144120419BB6484A5E944188FFF9B5F0DC89D1E420487ABEE34D06A4A
DFBCB75BBEA215C1821EA2E37D8894D7DEA75675C27CC54684A1AC086DFDF9EE
11C618AF049481EC370E0107BFB75A02A010B73EBD66C1CF3F193462076CCB52
1A3B11DCA3E9524CCF4A40EC3C0E5C70EF98246C20BDD70EF02E745352C4C6A2
85C96A5DD31E5D9A330111F875868A455F9EC136795E0763D6FD209A23F2C84A
46DE4968991698CBA46F9E5FE2135F6492A9381FA563032F82878404BE7530ED
3C833E8D2A12C8D690814948C19D04EF925650F199BCCDD2E182CAABFBECC9B9
8BD97B8CA036169017B955A38134816A44B3025DA828E38453DD5231DF74EEB7
35CD1C9878C9F6AC142A5EC47D2FE5916C31C8A1606368DF06E23AE2E57B4FC4
67222E8F86830FCE746BF5348D22661BFB772FFFC210918B5CF0AE3CEF2B45AE
1732B3A8D52507D8632FB2DB714754A511ADE38837C41DF62EA9094710AAEFEF
BE4EC43395BBF7E3CC49CBE1460DD939231CC4309DE68699CED4A7EB433C5777
89CB573E694A60C5E5811903F4A7F9DA8996899784235337FE850190490DC6A5
CD8C1BF60F76FE56AC02B40590A2A6EE59383935707E99D607115C82770E2271
AB7E9A77A1671AAA712D922B46DF97AE05915E89BEB1B6DBF7ACCB12519A7920
DEB42DAA5A25E6C1379A364F5F0A4EBF3EA0BD7CDF493D35A6BCDB63A46769CB
B4D52D7796056FB0896A9E3CD8FDE30128D33766FB638DF84B7BF2EBCB12A309
A42859ACD1C403CC9D71DA601D5CC37B484DE55BC25BBBB53FF0FF98DF3100E0
1279397F08661969DA2E834854576DE2311BB63DEAA67637FABD1965E18ECCFE
66C5F23DD00C6C48AE76B08201A86D8FD5B3CEB8A429E3DC0D87D7649C543BD7
7BDDF47A15CCC4FF32062F9F287613B6DBEFB079922C44339DBF4C4D4D9521AA
DAB16E32F92FC49DBF4B878FFE02805203043F72C87396C0A74E41758D0D5EA9
018CD8FF1B871E159F9244B06E3BCEACBFB681E9ED5FD253F194485105D53078
34BFF53B255E88DD550A9A39D1A528A9B9CA2A83159CD68D6FF81A199C054097
A44F48397B54B54D737C6DF3968D10B965EA45FC4EA4F7980039FA23C00C3FCE
F68B65470D6AE6AE3282083C8CB55366F358C37F6266370A362662C635F0131F
F3FB3C3E47484835F0B94434F6F44890A703DB34B6035A2B84821BF7B39F51EE
740BE369BCBD6069BB63BB217D2B6BA18AA7E6890966748FAE97D3EBF87D69E3
9DFA5ED6EA0E72659FB2D3F62AAFE9763ADD73C6B92EE42FE98C751A20980FB9
D868C287DBB9B787E714CD5D3BE0D3F0A21B5741BF24CE33AD0CDA88491424B8
4858CB3EA93FA3C723D93C47A1CBE2E90D1C88DA12FCCDDC616A19F68C641C61
EE6E0D37C9E94D03BBF25779EBD6B094B14FBCDF05B54F19E18341C0A3D10059
9BD71D47CA1221FEE3EECD1F129B1D33AF0E3963EFDB0A694E78DD3B2247144F
40839F73CF77A46DFC43C547B8804BE401468AEA3B85B66E617918ADEEEE6ECD
9D2F3BC6EE2C727E823A46E8C14E6215CE664FA64B371CD8C0AA242ED07A57C2
152A817933EBA21465BC9CEBBB7B2F3E34ABDA12ECFBC06EC9DAF9A87FDF24E6
636E3AB3B4AC3D9A4EC52D24468F49C29934BCD654BF7BD3C81F202A38457ECB
DB5237F58120FB27B1B7575119CAB76A015525761F19EC6C599AE119121B71C9
2C16A6D52C69CA077D8DCAE3C6E65733E787A60A7F5A9873AA7CBA684E7E2E11
4A0B3B5AC5FEA6EE389FE977C3FCCA5D91B363F99E4409EAFC5046654275B55B
9133D1DF8824F251B043DA994002B23DD743CA17407C592943D3F27D6E47F4FB
96025F2017527E91D49D160DCA846F44FC45B82847B85BE246C53A274F9D51D7
A8F080C6F71F0FA7506AD1C2F79B1DD1F7313FBA6304D42C39157FA9DD5D6196
DFB5689ACA820CF93F5FC0BA1E4CDAF6B7CD75FD3D866DE6336172802CC87E94
7431D74A7ED142E5F94BBB6E2C2BA5F7697A696EC0CB1157CBFB2618B3B748AA
1C4598BD38A97AC0DDC8E05D96029D074C55133509C8A0C741D5CAB00967D722
698C99C8F88C2DDAE6DED67B8DE5BCD72D5DFB4EB107C46D6DB23748251DE1C8
8C039BC9823B96FE42964C1D6FA2317C36BD4AB70B597C058F8A1610A6D194E7
39B738D825DA4D23CDE6E2B84091FF808078763E612213C42493E047CC4F047F
4C24CC65DDD509648A5D8742BB42912C6A81FF449BC190D22736967BDC860C2A
0CB2BBBF2CE2EB8F7A4D93E62302390F559B4A8E9ACF9133FCA7A264198622BE
2344F3BF74258AF295431DC518453ADF92CADAF54BA6424525B5D3F83B68A424
A1C3F654A0E497514F3F28476E00BBD99EA95789A0684BBFFAC78298E2A8BE42
02021D5F7CE36EA0CD0313BB4832ACF57BA571CA1454AB51EDD236B0548EBCD0
9FFE81FE0F9CC29E6C12FA14BDD7F1DA151378D54658194D20B8D2C970E69764
59A7C1B0DBC2871E393EEC13B4CD4DCF141D2B4CA06217D1C6193A0C41C7F39F
702C27D7B74DB62AC7FEAF552ADE36A1D32DC13EF7A2F5007F90B6E43064C80B
2B951CCD27E8D2269F501C03923299058B31311FE9AE6D701486D801E54EC5EC
E27851D81D685B49718875A21AE5D0B87BADE00F9BABDC83160988FBE3C73B5C
59478C70AD96BD9A75856C0485CDF2DE7E6CB4165EF85013E58D0C4D6454A464
7479A6019666639874F1F05EBF137D6109A0E45803A336CD2EFC63E1D3A25560
D17BF0FAA3313DDB410A54FDBEAB131DAA8A4887C36548D70F18F07D40A67272
4C9F16AC600F32B4AFE9EA04D3FDDAD121B6ACE7F7CE372F712F88088DEAB6FD
0393BAEA1C2F3D1BE74969386CE146DF0DF979DCF2D501C1A5CC0B61FA662922
EA97B59C1D004F8ABF17246D4C8C41D27CD9AC50C73578F9434A856C060E479A
A7E0A5C8B360F8123A2080BE3F1FB3E96B0960A8B9F3DCE101C80AA1BAC569D9
F80305E6C1C2C634E83B6570EBC5B25A6CEA2A3288EBFB3C67AF740B3FA1B24F
6630F31E90695260658DF839B7D55F3F5B546FBE66063A676691CF1EFAF4E898
D4A73E482019551D32755EE7FE0A3266EEBF85A1A0F45C2285C8FD8AB16B1EC1
7403B22A3BF4208403DC91461325F612CF1421F3099CCD799C2485FB859F9E7B
5CB2DD17ECA3E12D5781DABB3BB5D9F6B5AF484EA1B609F6A9259F92472E4327
12990194A6BA67F9C5FE0228634C1A1B606249BCE54D2BD2F83E49FE4B072F91
07F2A18F70ADB7D0125C7326058030E2B5A9E0C3ED9B9798C718E4EC9439628D
5E5130752A05FA17C93625A27D029AAB11C5669F6E445F5486BABD5339C93B24
692C52C391CC4105490C90707CBB98578D3403C4F0EBA2C58BA256480E798C16
29DFA901540377D6FA12326C7F756D439417455C5DF4E8BAECFAD4418504BD59
04959914965E74B35E31E6F2B9B62702296B284F8030E2756432D504EBADB9DA
093211F335FDF3051BB5B6FEAACF65D8C8351850500629EFCEA2ED44A912B67A
C2C29A4A6E1A1DBBA602BEDD835C56564B3CA20D792235480A76AEEEEE8C366E
56053948F6DF7DE02E6CB4268052BB7E1932D2AAC9624CDA65F46284FB0CF79D
65882F2B81E29D5823348D4C6FBA735B673614B2FD3C5D51636556EFE3CC74F2
AEE2A87889DB0D5E1B0DFFE0D51F957F0A722411D8205BFCA8A334302773BE5A
41172AFCE62E0F39B492D2A70A199AB7AABA1891FF7981B1FABBD2961A6DDB99
F181A8068382BA5A308A9DE87122449A040F99A874FC4EB3B46A8B38C356827E
2196638ECF1EE4DA7A520DA529E3EDDB1BD7AD3EEDFCCB1B037FC62DB7FB96E3
EAB9BBCC54C6C90E5628BF6C8D5998892C5D2ADBCF293B2A872B82D084F13E24
A1628970D2698C097ED39AA1BCFDDEDDA3997B4C65603D03DFDEF92CBA6C8356
48D72A370BCE05A6B764F66CE61D14532689B03632C37D7C00D1EB61612E2088
A42D9B20FA43FA3A46C7FE33AB3AB0D27866E1CE8584B6AAD946055548AFBF69
F677AEB53C7223D08544775592C3247B8CDF4B9AD825BA4B88A532F591C5B695
C28FB4FAF5AD8775DDE3C6B5A62C0DBD6F135C737E53B137801CA48831174788
BAD3780C4FB06AC0787397FFD72F87CAA1504F7BB3E0D71FBDD927E49A576E5D
F3CF729DF4DA5E729352303506CF5C5067F5C0DC953242FC62B91F4202663C46
AFF6A2D3C6ADF2D7B7E80FB60A2226BA5E5F3C13F891870D3260AD9DF2FDE90E
BE40361A102160E6B5CBB1E841D80D8BCAC95F17DA26B600014992FB7BD17756
5DB81493BE2F4890487B10BB0D95FCA6A5DE809558C5ED205EA53A1B7DE0296D
4F6D3AC184BDB890A0DD4D7C62B15DC40D2DA450DFC5A23E03EBEAA640CF23D8
9D1C2F0FFAB4E929891AD2DAF9A79FADA9891D47350986C60484889CB7024640
3C4312EA23A04F6D251C3D36F1FCA9535231C13C38B1FE6F1A7578AACCE5E275
E11BBA1D0821C1D40901120FF35E760AD363F6F09B66DCEEA83512FC056E9195
8B0FDE48EECD9D12094F14B222FE161C45AB766F0791F929FF69A8CBD1565CF3
B86A0455B9121D1B79B0759856B866F4E666EEE16F920F9687D1A48580F7F0B2
CA9E4813B0A01DF8F876EDCC4F384055FD37C5757262B1397C314B681131808C
68CFCBCB920E8F4E2836C05AAC7ACC9557ADE417810A48AAAD3EAE66BBEE79E1
9BFFF0FB2202318BADBD95D136728FDC1F3B174E3596DB851A040BE851291CB1
0E58A558D6440E61F72C3299698849C1CB5AECED9B0651A8A70127A7B6D6928D
6393D8520378F5AF48722C05644840865A9ED3798A4334CFCCEE8E53BA7342D3
2F498E3B6DB410F44B210461A17DF138F35916CEADDDF212BE6CEABD046C1CF2
D8E6425811F469264823869AE20403AEC12F687629C7ADA4A4BF37B8BE0516AA
7C0B762131E8D12A3B396B69F64E9C05BDBBA23B485206FFC931CCEFEC8D15BD
AF7097C51628150EE1DE2CA9EC4DFAF3F3491D3024502E3DF760580C06112D5F
5AD1DB8C902403D7562D04D95222859B73DD7BD0FBE2085B6A92F1396F9CAF46
C80BB39923AB172A2186B219517F339ED29A42E31B552A2A68D5C9D73C75DA9E
D182F73C3A6C467E54790062892C27C8C1FDF19963019E32CED2DB07054965BD
22074C6FB4F19234A543243B3FF8E216564A1673AED58B1D49A1B8EFD58FC08C
1C182B49E53ED6F6C658893DFBF0DBFFC6B0C0E5EAA7B2A4699A177143593AD3
6415EE850756CA6B96DB742A623DA41AFB80699B7ABB885A3A11E6E01130A5BB
ABAE029FDF7B98CAFB84DB03A8EB8935D8828F5196C4E7CF3C8A1529290543B6
60617E9AD316A4948EEBE96D90B3D4393EDB926A844D5CCD08FB46B8023CC2CA
353CE244AA468CE599A5BDECDBDB79E1113B07627815CCC59471C01F694F3FF1
6E620E33A65F387CFA0D619BD39ED1068B950FC070D4E1C504D507F50DCDFD0E
C0BDFC19A1A7970544A90A2381699E49356C5B65FEC05B64043D168079336E7D
2CEEE11D24BC81F5B726459CEB04FCC1150D95C79E5BA65FB45CA15A77ED95A8
50AB40148468011D4C9AED4E13EEA839DFC5B0FDA1F9734C08FE0B846CF10232
CFA9567B8B4127B618DE8B1B9EDBF53FF8C8D5FA70B9F0662B93B2096355A874
9AAF335A27F49433E66533DBEA7D15A3ABD38D18A1A7A969E2C059D9A03F4848
B6AE4C44823A9701DCA52C9AF4B2C32BCA5B4363034BD7F10B97BA41BF482F29
A9B9466C4C883EB20A9CB020510EEBF9DC44E18174DD4C259E735AB45046C178
96752089FC8A3F7502A64AC59D53F23F3A627B5BD5E787DA18B10572D1F13F3B
6B69A5F9299A52D352E786D1E24A8B87C22E61B030D96696E6B035E3D0FA6ED6
AFAF2E7CD81AEF38DAFDC0C3ECCA686818060AD0DA4C2DF27834FD6B5B08127D
91D1C70DB1518F797125990858F997E341948AD4F75151398B14A652E4DD35A6
85D7EAD85988845B8AF6DB75BE2CA474DE16F96BDB4BF27647B803965A5C9B15
44836F86124644010F3AD4B8C0CBE2374C7D068E47EB3324D3B94C257EC83F93
DB263CBA6B9E98418A0D676EDD7BD077A58D2FD3034EF42376767FCD9D104258
87DDC124342151294BB0976AB8F3172250DCEA261140E954CB61C949F1641B11
3624DF3F5D081D1886ADA25624F7B0917F3C2A6E204BE5BCC0A909A2932D9A33
54E72B40A83D0119B1EA81EA67C51DB46A65804754F742247A3CD01FD755BEE3
2F310275910C469B598B4EA4203129F516800D1D914F08071E2E468256B76CB5
7DEAB4A0288D7E8FE1A1E27AD89B1BD5C2D7FD1AA4FA49B841EC17D850730DA2
C35B5529976CAA4135248F57C0AF21566D1607D7D41D06D0DD92306A205B4538
16E9D87A5395B067ED98F90D64A3534B5F7388B8CBAB05390A8F984B623CDD9A
2907B56C38FD7519479E2905B27E916CAA5F645E720FAD555A649CE70391CB98
8E5F85C74B44F1E84F4E7D72FD4AB3216DF6AC30A36A1D6278295355E2C6E9D0
3DCF5A465E9F002FA79AD452E2CCE8D95B6A538A5445E196EB37B5B9678729BE
3572DAE3DC844BD3047C7E57DE4855462F941DE00884102BCC0F7095A3289150
A5E4F0A92F26505C43586781B6BA4A1F3BD1B8490BBDDC5D9755DB8DDD05ADA0
32418DF7C8C87EF4E48DD21B3EBA34DAE0370280ED092373C4BB5D5E33BD9913
2536D05FF4BC0293BD16FACB5C78714AE6F776AD12743DCDF17FFCC8BD8C4F0B
6AB3CB42D6319091FB1944279C1DB48A509E5CD1768470D8A13609B66B1B21C0
668DEA8FF1F123C574E1C017E33650E24FB67447E137182A99BA6C9BB490B31B
AC67AD54A81E6D882BDA8C266978F6035FD840C01EF0F36E918D98CD92DAF730
A0D397105BB491AC496388B7319F9EA5518DB8CD46D27DCD0734601782228D03
13BE7D3D4B2DAF8E0454643430BD96C6A190CA7EC494ED40190262463A7357E3
C2864772F2974C28073FAFE8D82F5150E27EAE0F6CBBC1180E22765EECBA924A
5824681F2FC5539FB53388AACF8B247C5CE2AD43087C742FA96456E1317D4501
F96194362DE47E085AAAEC7293FB5B60AA5C145F2D60B615DD195F15D80A6C77
5DFEE127E96A13B6F4CF2BCC8880E59F07C0E1C53617D8DA38371B463A5CA271
139E7BE8A28931AC48A546B6222812F7A63BBACB2F5CE90D650B64E06D391FEA
E0DCCA7FC8A4609B90F80A589C2C8EE806047D591D10934D4E8BB6C3C7E46992
2C496CB4EFE7F3F29E1D060CAB8A06F6E369D352462AD70A5C18385474B7210D
9739022860C2CC767AD81B7AD139137E1E9920A0B779C9167976F44587459C11
A983FBDB588772AEB23ED7DB901A283F6BF7342CD03BC49A9BFA3A9A4F91F934
B9126A0722D27CB339CC6F3EEE236A83BFDE7D2BB756517F9CB684E94B5A6F67
07C616AA72E2B9E35AC2B408D76BB673A9901C019A3ECBC00CE803EE5826DF78
EF6133F20E25AFEA50AC8C5489FCD47BBB36EE18FE57979ABD5527F04DB5C55C
4DEE09A14224732FDE5C35C97FC5220A8BD430DAB287BFB4EC899EF79742A390
986E88A5EA5B7301B3E4904E5C0720283567832691D87B8FF864CCF1B6F91D35
42BDC2E33ABEAC450BAD6C71C525BA9BF6290324C5E394C95FDE6EC298BBF68F
8F73992897474BFC8C2081F4BC9DBBA74AE2EF71614A3A93D469043F68D2332C
210F798ED7933B3D250DCAE505286F2763CEE9606F37B82A33EC656AA8494737
E05BD7D004292299261DACE96D6D1E253A9545D57B532E2A0CD7BD2B126A3C32
22A6031E68910DA373B32837B34FFDC5B57D7EFC2B298A802A47C2278F2BD58E
90B45F7D38F64B76495AA9C0A318B064C1D58DB760B6851EA1A9D39CF80688FF
8C1CB7270781DAAA34888E2BE688963EFAB9552ABC4F142EDE915033DDEEF961
071E8778B46A1AE8187DE0AE89663026E1F3D6DA978D7148954C7144F0B0DE89
14A1E25B2A8B2E3E7EE4D2CD9246A7C7BA03C39E2BE2DC06EA3B1E4BBE2F21C5
A20398E440F7E92FFEDE7C154A98C5A0016A102D019F3E9AAABE3926057F6A3F
37616845EC21815903D46C8D47BF3EC64D4ACD35F0788CF67845792F1886DB32
B50739D825BE1A9FFC4989A209F95B6F0F56E60ED9B4F218768D3F8A7CE73847
14382364BF51DC27D73FAA2D3517B8E5648F516CE5B8E64134A0613E4403EECF
116794316E56A74DE14A722039491EEAE6A4EB0F6E7C7BB5C88AD6DDFFBC4788
29A1FEACF170E64910D1C29D15AC91D83B27CA123E50CF28B9A4A4F85BDEBB9F
E41043B54E555A523E9DC08E80BEDAC24544D5F6999CBFDB34B365FF8C561830
09E938354A0C6455D1EE1226E44E7E264E1D33F8A4A7799226CEF34B77A169E3
C41615A138B1F2C15AAEE7380E02FB8D8D33FAD0EF69F5B84242F9AC0AA09464
7078A100135C643893A6405AF90CAEDF305D5C76F4C795F0A562177BBCC60455
021600E867017E2E8C2CE74D0D2ABF9EF45B3D139F4972D8276D52DF4DE76AD0
1A1B27D713016867FE1FAF86D408753BBC71C60C9AE66A13D8C7EC6E31AAE417
0AD573679FB32B79D515C4378AC5B2F12219927A36F81249667A61C738032E0A
E4FA8ABB03A45C59D44E2590664FBDDC6FE2646B6845D9D4835F7F359B080EED
1B93D4D5A6D539C111F38FC8F28E99DB9E739F6A7917586CDCBDC6429BD114EC
EAE9E2018F0EA11E506349FA48EBE8BDC8F823F966219C699D6428B0F9F53784
D03562D9E28E1577FE84D149EE6A90324F5288CACC4F694B5755FFB539295DB5
328C4125A1A1497D1654BEB701829599D4AA8C4D5420D621A0AFC48D883C8B35
4C3271BA041726D78EFCF565B77C485A04172CC75CF00409E540906A643CC18D
86E72D889575BD4F2D5163CADE45AA2D4AD31A8554EF56064515A6D4B2ACCEDD
68D069F32E8C4CE1062912E8AD848EB8B55FFD436E56DB0D2E131F0804758861
A2018B45811AF634E2E96A08337810F06770B3FECEF520A7C5369A54DA8BD4FF
A266A41BD9D905C6F89B4DBC3027B3CA7B9066B26F86012F708D0D83AA7C02D1
F6B3D808E97C4491D2267DA6A2D232DCC7BA2A87463E1EBA770193805104FF22
EDA70A5637472F456CF0740D1CA0FBD5B6EAE20A45851FD4CF0570FEDC00BADD
65A5F8F3595D946FDC4B5063A9D91702BB9AF9AD6B81F907442D2F5532822E57
3194E70BA76FAA252570E7830F35B0559897B1CB382149C582661A86C15FD3CE
05D7A1C13267FB7F40A662257AD6768F6E7AD4DAACB1EC98E84B72EB7A6DBB26
2C06251069A76052A2042C60407656EE331F447975F10CAD935320F972462CEB
95506E2B65A41EF222D078AA18CBC9B157AE1A42145362B4A4629F8705656724
E0AE7F236A6B50AAF19C8CBB6A1D9717943CB7B2022A860FE2CC3246EA25DED5
378EDCE4B6337B95F4B666C30A6757ABD275A1C5232F8183345ECDFEA3CB8AA9
AB8897B7FD2F7FAF9B7D5DAAEE56E6A0B45EE20739E44EE7DB8149EF108CA906
3AF44E3F06670C16BACF6ECD34F1D1BBAA7106F16AB2233D1B928762B877BC1B
D97582F6364FAD26E81012183C46DCD9203C3B5CCA5B6D3AE3B7486A680C4C98
86F8AD72BB7F2E1799CC7AD8814D624EF22CC40F691AE9748D2C1EB0C9EE9C0C
48A7298527E94EBC6357F5C9914D5E90A76A58B33BCE391BF12B2EF5C2C8B1DD
0FF76C3596F43A6F2DAA9C091212D96FFA490EDBEEC662B4E51A6A3A2B92EEAA
DEE6B96EE26E4AFBE04A84DFEB7909A5AD66C16EF6F9902FDB44F9465D064BE9
356CAC626188547EADB6946D79CBFB9CC0CC01C337E8BAFA72C645ABB366EDBB
58965A91584FADE32B48267D4378D4896CBB3544B0B63FF37C9239BCD8E1CBC2
476A7EDEB77245BDBD2F087F131DCB0201C665D97DC2E35A7018FD86F1A234FD
F8ADEB552B7E7E10AA577ED3D559010AFB0F49283090CA40AC9B210DDEFF0237
9B2BECB9CD12101A62DCC9E07F228AD470701B0D6560C44DC616FEB402EC648F
7C1E91033937FCFBE4379D0FAF06FF03EB9C7D3E057F7ECD8A92B9ADAEC845E2
0E140153004A8761F3B973F45A3C9981DB72B0AAC17CCAD6353F86D34254F3B4
46D0A13C4AE52D001BE1A2454AA7B18B4BE3185DF2B0E6B3CA6A40705A428CFA
7F347962534DA911DDCADAA299201D951426CE404ED91C112E1D5036B47F9852
704B8819400CB9AA8679300F623772464BFE0BB2AF898A92A56975BB2E0E5A87
335441D0D168E7D690D413E5D16460E3551B06514D941601AFFC0F9F936E4712
DEC763BC76D3E58D726EBAB9E8922E9F44A0403B8300FA910CF9C543B0CE7804
03D2E74B15015001DAD7114B7BE544F83370FA44735D66AF648B40DB1E91BDD2
B7B6C54BAC59BF176A15D2BA5DF1AE3BE5B7F98DF4FD889467AB778061C35C6C
CA32F8B008FCFEF55C2FEE01FC94BBB4DBBFE13B37FEC33DF3B23FC7BFEDA3E2
0D9F9D3F61AA34F3DDAB60E0F06C4160893D523EB7805735710D25F710E45117
68F708A00D003043473B837E45FD78B0E924B11C3DC8938A559F0D5BF2DAD441
7255A34EEBCAE749176999DB46FD10CC9126E08DA99B91A1A5229551B19BAA85
4EDE7AF289C24BD5D031C90648256833D2E29FF7AF32CC38F4F4E6966227C54B
AF3349118FBFA3F13B59EEB1F57DFD4ABFD20D4BC6325B8C959845C306AC2ACC
AA6366E6F24A603AC3E2B599C47DE9CFD897F133DD472A01FE93EA14C86DE765
E98FCEEF82A86CA29EE5C0A1742A6A920153558A2A859634E33BAC75DCC9A3FB
7476C9A982105452745D21544DE9428C47AE87089B582D1FB879D9B166D442B6
648F29A200C62342E2E75D3844DD81E94FD876777454D42645C95D870A28AAF6
8F401CDFC0A7964C858D81581F50B053326F7A316F25A7A9237FADC20659B5FA
DE9F2E543CDA1968122EEA8D65D8E81583FD0A5AA61AED4992F56A997F55E710
03C12938AF7CF0D25D84D1A517B53B0BEA8A10F93703DDA3C630DAF78ED9E970
01EA90FE51685FF1D7A9B799ACF711607ADAA5EB6CF4FF3138201CA4B7538AA3
70E4BC0194B6715D375CD401A9443F254E38A5DF1217D3620FD9DDBF7FD2797D
07C778BE25810FE125B542DD14F7A3731EFBF0C2602B73CCD90086FDAC8D542E
A826707869C5FD40D9402B8DACEA85983DA11C1BC625D3EFA76C7C4BEEBF03CC
AB754A76FD931976F6CD5E837BB6FD897614EC3E60C4E160A0BB315846B697E6
45E902D65357C93FEAF133114E0F26603C03F53747591A6FEB0BC6D114CCE375
27B25596A888D7530D42E2EA6A468C11A86C1A517F86520005E2B96288EFF843
26FE7EA206A7ABC4392F252C7C7B866DAEAA53D1D80A4DE0592877F903CBDB8A
5FF707546B53AC22110E3366BC5D4A2E959B7494E26582C63DA4EA8A3341B8D8
C0117BEF925A86A08EADD2C916DF0F240B0CE811E0CA2E52A0EB3A3B3255DA2B
66BCF95FEACEB048DD2379BADBCA563BD881C23D2B9D8D0304DB62C2C38A25F0
142711ED467075938672E207A1F225440DD846FC9498F8ACE91636A09CFE4C97
B1D92FF2E926FE5670E81D825F1372C73DE5A35E9E9226DE954C56B5DFBE101E
7E85F32BE340F68768F595F2C64AC365C2F74540DE24D571EF958527CC1D75D1
C503AEF72DA7704B9118F70991D178670B64A27842D60CB4A26A706440E79F43
310E4B9C2EDEB210C0E384947A14739733F9011788FF8C76EF12390D5E09924E
5E7C8191F05CD57F6E1CB8B076420CD68214371FDDDF59F46A636EEEE6A62B6E
1214CE593C8E6A44DA2AC35BB71CE21A3E9C1D1AB20BD6C6CAA328BF57F4FD4F
5E8054506521227674339C79F366B6CA9EA7CD06BE8F102320B7F5C1B5FD88F7
05521060CF072D79559B321CA9A560FD903432A3A9A54A710D942F8A6C4128F6
5729C952AC024E596C0C46333C5424F9C5EEA9F569F1E15F7DDFA58FC99E7B93
748B7B0B7D5F050B809C364554B62E2876F04BF1B180B36040D8AF94F0747C51
AF46823FDDB3EC66EF1D37916398FB8CE955E12D8A89ADEB10F19CD1722EC190
DA2FDCEE9D1F6066E42EE1FE5CD1137211F414303479632E105CB504A8568F31
A10AD01DE309466205126E4CDCC23EB4C431FC6C1DBBF79938BA6489E9AB3618
499582A93468F235A8495ED6FE28B419FBD75C258300B9BB455AA872810C7948
B1EC866883E78C9F26303C6F314EC6B11679E916AABD5C467828ECBA2910453E
A2457F56703B271F766E4E8E3E36F9D84B8B5A9D2F0355E991C525AE6E8CCDE2
26F4902BF46D68C5D0FF9D25104AD5A57EC21CF733A46B22C39FBE586A54E537
E8A7AF1258A15ED5674C3AAAC4CAA8344432F60E76B4F34CA9CFE75AB6288B53
1DD76F5B112B0D2F53BAC2BE1B1C0EDE4B8C30E1F06EC82B82F60534847BA949
613D10114334CBF42718BFC37F4346B36438B94D02F56244259831FE44C13336
BBC3B0569784320814C4FA99A98FD14C6062F1C2F5E26BE84489045F831F00F0
1278CC6217567E42345B8F00AA6C36374EB7584F372B190CAB1F8F70FBE67C24
EE41439926F02B1D5AEA4A2F8F04FAEE665379894179DB932359D58AB20B3EAC
11627ED82BBB50568F3469B975F682E8E15F366CE98AC313A2040900C7BE87F3
CCECB9CC10AF0D1376B04486A7902DBF5A073A3D382C0D49DB77ED421271756F
0680BEC71E046A37CDCD838853790F29533578A64F1539B2833CE2FAD4DD8006
03E9B5629FD8C342691D4C9AED4E13EEAB4F483D491A40D571A0BDCF87589D00
6D147E1402D93064D975906ED63CB90A0802BCD1AC9DD88DA85EA8CC8F3C315F
4F3F464F0720410FBB89C699E9A40B6620B6F146F585A48F89006A5E0E3CAE31
DFFF10E9F80C7FF251A4BAD1812A8116E558850BFAE612C8F2A7DA397E52CCD6
06F24A1DFC966A8624984B6C207C72B10E30E7A4A75691CF8050CDB3FEB9A512
36038D44D254647C7351B37FB874A88C7D8BC46D9398755417A2C60CCCE66301
1CBB4C168386ACE83132E1BF4363CDFE8C58F261D040E492A2AF4E1D1B869CF9
9D01F437B915CEE8A9808979B2FEF19098F7852C39BCBDC3021BE26A24CC9DF1
5E7E6E7B9E427D5834B603C6E12E861EB284C7F97DAB219B3D66CB78634516EE
95E0B680F7E8AD5ADE1C4B8379572FD62BF8B19B3A68CA7A4061A48A36BF6A38
2894E1D924DBDCE8DFFBBE8F6BD8C8BD63D847C31F54B185C59264192CC13EA5
25A9E1982B8D7CD3F6318103423985CB6AC490E8F3052007F9104B57A7A1D8E3
7E7AC8E934D993EF5C02CA2C20E0D26CA063E1865CFCDAAE32E78031D291D5F6
997C063FA56030D729C4DCF2E9137A99492A45CB1D0B58E4328F7CC6D43D4334
4E31C350895913E42E548F64A50EA353C03F7BF54FB6B4A0962C3260AB03831C
FC91F03AB7393EE570C6A10E33FC1E611BC394D2125819C5FD940BD7C1AAE145
43E679A5473A517DFE1339E4C6CE8EAEFEED42EA553AAD6E4BC60A3E1B51C934
CFAFE6F221DE5055144E69D825AAC0866A00F81CE93B8EAF513D47C127C2BC6A
DD326EFBB8FDAAA92A39F7850D04FF6CC8F3C3863808CF73F6623263FB9E97AE
FFFFE4405DE99814AD4A0798392364FE0BEFFF89A5599AA78A41C93A3C6D20B4
0CDED1AADCA60A7E22E14EC36746D71A1FE9DDDE60530ACBFD53EE23242B4CC7
5114C011D396DEAC86E741340C841085053B84D3EFEB0AE28026888767467369
2CE6C1E789276862A62B2B4CCCEAA8C40D6E3704BDF21BFFB63A8B9F41583F75
A2D1339A463CAC4BD877D56690F7B9C778248B27D4B16F4739DBD8961CC1E148
26785042123F578404BB143E60CF3AF1721C46E4E3788194F96259F8A07ED67D
CE8B5ACA00EA4C0B845F9E8B1068DDB8F66680F51B46E06C9E9FF99BC9B8B42F
3CD8C96EAA02F137C2134A47241E3F15A881F6A1C0B7BCC35182826B99DC9B16
15E5C5BF799992D38EBF207EFCCDF6A6A155F451AA39165591ACB05A20577925
809754690EB370F940BAE2395473B7C2F70EB4DF0E944E11E9321CD5C5B648AD
E91791B89B734E872BE687E1391B0D8608CCF674025C8D120F633A41DD4BF18E
713F6B3E98C0CE2464D64362734AE949A810D4FFE56A86A59F7F498AF1990E91
79EED802016D41962DD12FD3ACCA61BE6D41EC37F0917E27C9FC633D04FB8AFB
42A85135D6EC4216581DA32E76AE6C6FF5F775F9A826A203AD99A70DC8848152
E9D2B233F30007EA51398C5EEDCE589F59CA73776BA42DACC402A182CADAC4EB
6AA2253606503CAC1D83E4DD4ACC3EC5C7E2CC69C39F9F2DE66A661904E59263
41643523B8C6A3BFB43367E6FA717387F8C1493146055EF14BA832B7893FE2C2
182096A7719209AD32A50C90CCE39A4105CED245EC8A964D4F9A330B97295833
BDB7389EBD1D9A4A207B4E0B9075B4C8BC0D7095BD47987DA0D4BE97BFC28D2A
542C4AE89047EF4B9D3D234466A9FA91E2FE716994F7278F48FA743909334CFE
595E725B3278071EF2C7CC21A13A2996B39419C7F33A734CA9DD3AA4D5CDFE39
40C0A3B942DE041262F04E6FBFCB61D18F295358EF33A162BDBD4D908E333293
0D0E1BFDCF3FDD7C9CE546547C9B492CF6160BF12036F45D7B3EAF0891319DB5
0233BD33443FEED6598CEA99A13F65908943138B48B57E30DCC022B26EEAED59
B188DCF08F2838AEFC3D1093EDAC49D2ED9C6538773517BF842F22A19876A11D
DD81276D71A7EA1DD14593CD027EB52EA2DC0183540BE3A16F5CDD7CC96FB853
63C9140E4CB38CA0CDE2727242BE47C2EF168220EB433BD66BE684C35AA2CB73
748ECFA72C5BD5AB72672604F139C4994F59A03318D5ADC8F70A3081451C8777
DC1D69A319A8ED0FAA31AB83EAEDA618C7739F95D3918656F9E00DB6187F18DF
F3233A0200CF7F8E6960756F2C9DA1A62A0A6F8E820EB73712148B90713C6C76
9B1474F341549FE81641832D1FD83167E317C22DE79214EEEDB42457BF20EB69
D02E18FAE22EE3B71C15AB786DA386FCE2676A7EF904B01950A3AF8C3562C381
52C881DFFCCF79D272A1C253D15626549E2ABA7ACFA6A9CCCC6BBA1D3DE8D29C
1B5AE35D7122F1ED630C4C276B525F6F3BCC8BDEDFF4D210A5D4AC3A4C994501
62B7373CCD9F5F3597ADC2EB6BBE1AD828DCD4393BD85E6F5A930BA0BC097F98
9E0FD95856B048341890FD5F1BB60C3E346E765C56E44AC87081EF8AEE1AD355
A844AE1BAD5F439B211312359A075FCE0810DB4D94A4EBC6ED84F2B14EFFB0B8
BFCB2F29F5625D569DC0B93813D97A5A5CAC71E3F920E0E400838F718712D374
D9AED7F0A85A6C4E8E671765EF4919F3AA17749D8276940F08464405D94FF227
5767FF734AF11D92AB2B290CEB82632679BD0F0F2E4ED126A95DBB4FA2D09EF8
0D1F2C507DF980D3DA93E94CC47F1B456B57CFA6C2679A5E0FBAB6C9EF7D78D4
C4F670A309901C67ABBC61FDF2ADD52E1773E48CCB1BE53CB227662CD21C1995
44E97721D428F946F1595B8688489B44A3363D22D18868570002750B20A48036
DFBB9C9284D759A9E72B3CD475F9DC1AB6D56966BD93715289E05F70BE0EDFBC
3EB226AF22FDBB0230E3C816BD5C68D8B45791F0994F174FA0BC4EE103D6C3EE
96437250C43D3222852B4D9EAA6D4CC9334C091ACF9008BDE4A6C6C275CB727A
8E2BD3286D0978474A778A92CAC52A3F0AE13BDD8CC77EA578F2054DD575FD06
B188F7D03CED3F0BB23D4B2F4E25B5D9D407233585ABE128915A70C478BAC724
A0935BFC764DF33F298648ECD38C6CC6F1FE508C15D89807A0644F08CF06378F
FA6E9A2CB1B6133ADCF625A064D86E7B1F665FA985822E4710871E836479246A
1107DC4A7D00480B0AD97E3A0F3FC73E5C2E3A48B5906157EFA720E470039724
6B0FAC7B05CD69389BB0D9CC8DB972005A04C8D8E2D639766B0B165859FE6271
BB02EB2BF0C27342F7D5E4AA82D2DC104AFBBF40F998CAC08D3D7377F4EEA900
F10482368A39D854E884189CB1DDF26EEDCA2CDB0F498DC5BD21921CF3F0A466
60A52D57507C8F161606EEA94EC23958B708D56451D7E1269BD24295C6834B36
5C39F4F5695FB065A93475487360CB385590BCD8A13C3580BCB107B49265B4D2
BCF5289628F917DAA38684DC3B657B2CA623DBB4D7BF86DE3725CDFB687AF58B
5CC5B038EC6DE461B43F2240451D62BCDCEBC79D43F037D5479AC5E415D78AB8
ECCF9710991179ACC3058A985448CD451A95588DF5561FFB359922D80992AA09
64E716AFE6A55ED596167193AA71193743F2177979932057A2D92780EA2FD56C
D8A3141B2B8D0B28328B171F42B88A7372C90FE9A338451E2F71ECB955DE3711
89B4FE1B8E02610FF1EC8B18059200771304AFE6471126EABFBD75E60442282E
BFFF5DBCA502B2C3C56FD978CE682591377ACCC52B01DF091AB167F58D68FD1D
2CD97631A97CC9B44FDD7B7DF4172993E00620B755EB5B72335C1417D5443907
F7C6C80A60F75CF5825C2DFB7F28CA3306D7D25AE08A83767315909B3C8D500A
CA352428B9D7EE3B6CC03AAC94E8F9250CE279EDCB718379355666E6CBF7ADFC
BCF36D6ED6B793966680E1837AC00F5AE751C00A55E9588DCD8914BE222790EE
21F1418439FAA01886CC01FE9A317430FC7E0E820CA99726B07920399E7E7BF9
740EDC484958EB2F3FA6C67A26E97F4FBE964C33C91533CE50475804FDD1FE69
3FB1B095B8C8F16D58869DB77F35EAA521B2D6F359A548F46FC77AAE5A531B8B
984C0A1707D1AD2AC38586EF768B09799CDA3A9B00AB27F906B441A5B95FDCE0
5B77E1BA365F4A65F9DAF4C7B852B3FA0C25167693025D6E4CB43764848E162B
C5A1D18AB9FF6E9CA874C8C420E0F369794617A7126CAF9F817C1E481DF1722D
50ED1FC32507068850A7FECCB60361428A39FD384A28F264D09878D0F4DD3B3B
23D6ED8D87EE1BD45D25EA5B7FD6B760B32FC3FB4EA8B6BD3831AE413CA074B4
D577C8F203A7B95A9CBF97B305CA1DD5BCCD718D3933A64EEC3E6D3F36C6A50C
A25B0E8184E5C807DD29384C1BA9B134E9E97836F909C35D3E8622BECEC76F90
CE90ABB22E58D7D3A693554C33F707530321533CFD004B4F0B6A01A29DDE7B25
7398FCB0BDD917870C613A12EB78F4ED1E2A80716D2687D4E2389D5A3D799543
DC8473A62359878D68ACB7D644CB72F40947889ED65C0A839B8E709983378043
A76258A93C4050CC26E017E02F401A82529026C4B2A12E5E911160027C588B98
4C47E7140D754D01A6CEC92E4CA5DA974CC0D1C1B94227CBD7110758232AB7FB
103A718C6629F18000D0E9C6E095E359A3033EA84DBB4244EE7156A869EA6506
E9441CE1E75293BEE96486C54E23C4DB9FE8257E18196D2FB402D6CFCC882C25
D4598CDA9134DA743A7EA7A66196C22A6954C7AB1D4BBFE9E2B555EBE6AD1180
25D02036204DCD32DE3C700EF8DDF5575145E6F60F270A7CD26605555ED5208C
0302FC98511C9320C67FB642D745EDFD7B5855B04E256227F742AEEA9D4D9667
D889AE3D0C3B0C402D388F4587452EB22AE94207BB979B0295FBB55C2DF104C6
72980F33057A3BF41D159F9707776AE29BB2DCF80180EE6DC71CABD487B4B3CD
F5C4E256AA03F3C418EC785656C1FC48A160E36E1FCC24D01426524A91497896
9382646E0A009CB69BEDF2341D7F93C41F1E35D5BB9A364FBD71628F50D3D62C
10044DD9273439BF67AE913712FC85B04E21E49445F30CFCFD2F408219224A1D
AF8E962DFCBC1CF35B966150ADDEA7668FDDCA1C2F233CF2640D28530EACF9C7
D6F8E261618E63588444C5DE6FDAF7F4BF38884F3C67D6CAC0FFC8D81F908C21
22ABB333D0B5EEE7CC8595829BA58AE5016358BB6D599687C92ECAB328CAA69A
09326C09C00B1AAD983959B5E3148768B088C4FA7BC557214BF98DBBCAF48024
34F57D1A0BB457687FA8B9FE6B291F0EFBF079F27C29B5D7BA7F02971A680D7F
CD1C2B7E79B4C2CB0AF383E3999E3FF2176DAA7AE96E97C78C125B70C7093DA5
CBEEDC62D21E7A9FBCA56D250ED339AAE1984CF64BA2FA3BCBF3A8CB81D330F0
E8F66DDD34AA1A2F8BD78A672144A551676659FF0D570FA8C455AEAD3A059A5A
1E313BA1D75E3A8E7387128054CA947CECF07E241B905EE0EF2BDC0495D6CC90
36EC267E25B1253A8DDC5A6C88FB50CBD3B5746051A0E8E1F8B66165EB8E4820
049BE0E33C54817919E79114C2A6D370D5384B34D68C1C26A48209D8A0D975E2
FA0554B955FCA992D402253100E3309342340AFD429DEFAE5F09A632F741B62B
FDC99727C7A454EE47139C990A17DB0EDF2A94A759644676DE1EB0130DC75003
436EB9F25E2F73F01F462AD740B4CB60703953D3B6B91B44E18C8F3467E663F0
B28C9BABBC938A67B79972C44007EE1DFF583E0A6182C325AC57D5A729C11A7C
655915089223E94A67A855D21D0C5417B9A67811FEAD33735AA9053FE82B7D90
7A46E9CF23A227EDD706EB82271EDF686E9587603E6E3F572A6C59B96CF35340
F3DBA93E9093653959C28A3883A28F6256DC5C31F5ED61F580A231767D3A5F74
0B6ED9A156937B85524BDD8375A91B20D4919792C0A449D9F557CEC7A668F9F2
47D63EF54EE8BE9403755E999E07ED897056E2745B53FD0031CCC9507F50506F
A0432B82F4A3762B2E71799F2799724FF67D9A1CB8D35F70EC578A1FFF010BC8
D4D3594C42CE009435A6469EC810C32F5C505894C702E5CEC84FA7BCE311546E
AD23DBDDB87359F18B7CDC83A36BC57B49F14D85E4A2BC940C9A44E6ADCF42D2
046ED9E27B09503D9AA8D8C55493E772CBB504B1ED8154F4E0B5A09E6FF0A581
1F65A8A1C7EF8470E9535E9B54E942FAB28F26EF42A7A65F954956FE2F2E1D9C
9EE050B1905A17FD8953C732BAED8313C5711071AF528AC42FE26B7F2C0F5C81
1531DC9D1A030052FAB893ABDB851FF1D56DE1493CAC8BE243DA60235CF2ED86
0038E557BD5834BDB0059D90CDEEA2A2CFF4CF2DDD02D336FFE55253F18F40B9
29E0B7DD187F6E4DA86F42B8E0277DE83B129009FB500D0CB1CCD1C5A5BD801B
699CBFC90DE7B1FEFA9154DD1F005F5ADDEE73B3C8C1D6BA11D136F8FED17529
BFAFB8C5DEA8560FB5CC856916CA3F1F915B12662FE47467C88FFA55A1056A55
F4B9F90638E924195B7BE3D500D8FDA1C53492775B2B72DAA5AE4881B51D1DAF
A83F3B3C683A9135264F19C07F4D14F71AFC172AD2E5ED14C921D0B615D6F1E0
3AEA0335BF3468DD7F5AE320D41CE7A51D3A4110B17E7A2D7EE370C193BF247C
EDB3A11A4F66D5198C41B48834C27CEB129D66510A1A86F807B0431698D2057E
F71F323DC004BD73B0750956B671EAE9E43AFB5124CDB8BBFC58F10F0C26DC49
C93159AC586D34E3020DE5A2C57DD9E9F8A3852DD70680A418FF4124E2ABF5E2
18A0D064AEF441F523EAA95CADED3C9AECC33027705CF27D73396CDE5E73C188
A2E3FDB6DE12BD82AA939955F8130F1D91D9BC5CFCB907E40DF8B1A1321266DB
F30A08D30EC8EEB2B881513B9DE3865B47FB192599F5C1BE52ADC5D43BBD9350
C41C8EB2F772E2FAC57929E68694115C4391579C84DC7C2404ABCA778299D390
B51657F203F3F1723122AA0873E905D3BDBF9A5A6E2DF212296684CC530B5D27
BC354573586EE494C3D4435025029898CDB07EA31ED965AD5626956BE6C64292
DE5AE250CA4E237126F95C0A3902193DBC8577078877025687099FB82DEB60F6
B8725993841BDB403CCE5E54FA291786FDDBC00E715BC73E0F524AAD48F36AEE
7A06A1E05217841965A059247A2BCFDD32E7916DFC8BFE47589EDC5453B3CC75
0E1AAE078E31BB4A724C5359920893A23359585C6994D739DE6FD5CD541215AF
B11DABD973964FA14F2B4D719F9CC68E6369C518CE0F103D4E197C901A8B933B
5821393DCDA3F546DD687E904EE9E41E5F6AF500415F32C66DF6B3A600E8CF9C
7641E8055311607148E7ED6C81C0BBFAAFD0ACF0414812B12E24E34B271A90A3
7E99028DB5EC54BEB638776668A5711366F9A4E467261695CA2914BA6517AD7C
D56B39A5A38CF620145C5E08ABE92DCD33C7DD73FBC79A55CC9853FF080AE1F8
DC000549F6A7571A7144417035F17C6F26A1477921EA0EBC74E6AF4D144CCC48
3612709450E8BDAC942F401C57AE32BCE3FD3B7A8F392599B1FBDA3AB5084B06
CFCD2DEBA63CD21A4D8E628B6E05F8C3644AFB16E56EA32E2F9016AE8819DAA8
FFE6180E85B976E59FBD005D22652E664DCA80895C73AA298620E5154BD43782
212907BAA73DADEB14CFC9D507C7AFE9516AEF833A463D74EBDBE42893C1B341
EF6EA80BC8BA19FA8595EE3F3DBBEE8C0C03EABB9FE1015CBD6DC0AEB498F21B
13A9B141330B8293E1F6C3B6951C0E362461244994FAAAED060966A3A3CD84FC
ADC4570C001FDC494D2CE869D6EAF46A4CF5A8E7B1FB320193C25AB75689A46E
EE3F4AE668D0841D0AA1FA44EC6C6F7A0FA29083B9740DBFF37B444E1A653578
26A1FDF5F2E23BF50103FC51EB06CDBAF44C203B9E9DAB2D25B0522E20D1E071
E3DB0BE7B05E6B38E0C055B9864C14E28987D2DDA80AE7370A847D4431FFD3A0
A897D85DE50B873B1E9534882EA1B982E9B146E505EE435A5B38015A79AC73F8
0C1C9B16CE7B922F8414A738CEB18F2F7D28CE319A36F06D89A49E48BFB71876
779272319944B74BB3DC95D85E9CEBB6DBD39021C8FBF54D2B137C3932946F7D
C05EE4067614D3BB06D8484902B2C89042FD28D4212934E439F97BF048D31721
0A67914E8E4CEFC0079AAF8B464D65E843681B3087EA4C57E5314077AFCCCD82
CFC22911F3BC395BB6C68946C342D6F83C94505AB951493577095AEC42606A82
964DE2C39B527BC4EC788EEFFB3D4754FE8E28D7875CE33FC15FF31CFFF09694
DD0FBDE9B3FB575776F07EEB94DA19FB9E1E2120240F4D5F360258E3465C4F00
8C449F0A99C57FCD3EA7F69241C0B1AFA000046A79E6D6CA934E7F9F58A9EEAC
6498C02B3793ED6C5C3FEDF7D958B9BF0E4EE406195AF6437E5FA227C115682B
349D2EDDF7AAAEA13427EDF1112F053E30F908B82EC2AF1EF8153007A4137199
DBCDFD5A650321552B8B79A7BB1191C296E955A5D935394B25F2B59FEA56A656
7FC5D83B8F93156BA87FD13E263C254924D838B978EC40207A2844266925A043
A621C4613981F0E5DE9A377ABFD1171247B93C247ECF7076647978C5ACA998F4
3481AEAFCCE4BBA9BFCB8A5A4BA0EE2350601983F303A981CA991420244B5076
81018E0584A7F7FAF7137FA166865C26885574EA237EE1FA1F183DB876D100DF
60752C6969CE640FAC42F86AC99CD050B3B8063EC6D840E641A81BA4D05A039B
0F8F945AE55B723886E44EB1E75752C8829CAB942F49885BD3C451A03D0AE482
ECB5F7011C1AAC1738D87AA5EF515B25249E89B0909C3677A66408F2767C05F9
3292D8F152947CB88AC8C53AE0323A7EC97DC1135A88B7AF36373A18A001810E
421F266E7ABFDA2ADAA7B6A3A04C9580149557454B56F038911E2C01E031D302
7E758B7DDCD8D5E55C96BC505B3B68901CEC7E17BC4334E600E817265F192A9E
C1E85BF51477B34C774CEFFB7A1EFFAC592992589E189E69E2101AB15AD55D59
828EAD0FA6A32429F629F44B335B35EAFB0A42C5D926C2743566765F6B36919F
5796A8DD1C9EB5E7FF9E82CE826EFC293C0BCF9421EB8EF0F9747C9482292E9E
2927E73CC4438FF7E9DF3659597A07C1B720D1E0C318F0693E86E0ADFA91C004
FCCC91273C8C17DA1C75D645E73D31226E2E9CBC0760D3895262055B889245BB
FCBFDD2766B7885A578697B9FD890BC68DAA0645DBF8B4C9FBB12FF0BB1BBC64
A1E1DB108C7159BCEAD45A1B3869D266DE593CC899FC4F9E7DDCCAAEA594134A
449057627246841EA7F7F32056D181F7C557B263596603CA0351AB3A87747BAB
36AD5178B07891324C26F9C4DA15504BB8DEA986CD530578283ABA02306464F5
6821A5B746BBEA2335EBC9D2B8B42A8EF92B22E01923085C9FAFA1BDB1F6EF15
BD0C63A9B21E9DC13FC2443008000CBDAF905ED5349498C161CCA92E3FAA4405
99F26208053EC88A2E0976C2C2C785224907E4BE89C41F1CF733CBAF0360E054
165945824F6F7AAEC8AA0E70E8FA765DA454C45D8CDDE90F1EA124FA6F0EB1F0
A09E9986476663BDF3F84AFFB5413453A41CFDB0B4EACD4B594CC33472C58E85
050E99183D220929A647C062A070034DE3803B628E90BD8C0F4A2E4203F5100F
4FCD5A61BB404F41E5799EA12E4219BE9823DE2C6C225E21CD21F686310B26E7
38A173EEFABFF88D9EE715E3824C674677FB3F16DC53509F4CE82AFB43A1EB09
7CFC822F44E1B3DBC7D45DE0309E335D9F687DF9671ED383716C4AECECA5AE09
B453BA1537960890BC327EB1F188EEA272487876507D4CBFD16D0B59BEC673D3
D983E59713FD3F0112F349E7C90969AE30AF3D73E291C7BCA510FE3F3DA08770
CB595F902B0BA2F26B3107D802FA903F4C6F4BD796E3CD407855C574FABFD23D
D61452F841FF30279CB8FAB87AE25D329A55A67463884036A08295AAEDD1EDA0
83F383A274B82313903AADEEF5D22E8630147CB32E38181E3B2254357C70A193
6A7A07237D677A391648716B48042DBC62AF5F345C5CF21BB933BD3C8B8711D2
0FB05C38D9CDD01DA04DF6BDAC8C286653A1DCB3EAF81EE5818EA83E1A41E174
9AD64EEDFB170A9123DCF15CFD1E3471481C6F982A0DA1E2D272BDCD8CE9067F
7E34F33D50605CC2A07F82814C9C569F7A57F36D6B577C05E12357FB570C53CE
ACA6905729E3611C65F8F4CE94CC8BC43D7A5905E12FC5F604EF7AE07C88A719
04C0DF564380D00AE470AED258BCB4CCB6B636CFD5F3B5EDE72873BC266AC970
66E0109D8EA0852024FA73A90EEAA2289C30FA49249A3BB0E68D91FF90B766A0
D1F5D59A974D23C9FAAD733783B9D6EDE53CDD2163B04A40B0519818E0A44FA1
2CEEFB98326D03D1BF0009A8FC0818C6D3E97D7314ED387F4904848D7EAF630C
D191CA4E20D01D1EC10A1955A6FE820F8151B836F25AAA722B1EAF948D236C99
654FE163197420F286546D4B24C6FDD791918679ABFE0613D2A712CC55DD4250
6FA40D4F867E56F1F87D3E33D15A54CC239397737ADFCA9E18A0390463E1BF45
E9E60336052BAA7C01C745377575705D755944BBD711B4AD2E946029BC12C1D4
B37D4B212C0428B60531EA09FD3DA37B45386A18D452DC5FE92621086388DEEC
8D77BBCA1FC6BCCB6BACB86190B0FA822FA8DEC6EE601031AC0D2931C62A0A63
5D1351AB09B2BD924CE54F3823B02AF746E3FE79A6571FD9A29ED997F8F83103
637198CEE635469B948317B5BC1335E952FFE80C04C08767ABB177A5FC243738
9FC6B9868CDECD4338B80F40C1868E96ADF071E05DE5E6E43EE754496BC1B952
E68219002BC29395D6DDEE936ADA3A810D7CE8ECADFE6E9F5AF289721BF3E047
80308697B9C7F64FD77CB471373A1D83BF497D81CCA0F3253B11C2F3DB382663
12A8696BBBCC29B38F77B168E20E51DFD04BD749A278DA92075CBEC8C2969963
D7EF76937357E567F8248EEAE259791214D61AD7792948C8794A62AD518B709A
D3160ED5062F6D2AE0E72417923E011284E8FA15EF586006F293C334BE244EE4
EC59C04ADC9891CD9DA5E493C257F894021217035571A49E0E362FB6B794EB64
84715A329638746986E031B1370BEDE3E91E157A5F8637FFB2175CA274CEF271
4F9716F656859C3D0477D03FC93046B80CED98CB31A428FC34C7ABEED4504FDA
AE88AF6542492E908EBCD316C11D0F1862CA941511AFF45C1E0F91318A90E1E5
1BFC72218B0C8367C6E8D2CC0F6DF06C1AA9567C0908AD33FE6DDD1339DC3B11
2EEB2EB639AC5B18DABB088A7E34FB4850BFB72993B36E3217B5E25D2F862539
171EAE34A4D8EB258A1789A788C3BE2E44B174154BF3C7D67320ACEB9CA496EE
F0E524C7CE510142AF56335B1F3626B00C40FF80962C2670C4AF639C47F3598B
C6EC8CB1EC59DB7C0B4CA1D4368AE0F20C47E541F616CD949CFF9679C7C5DDF8
60DA7DF0AB9BB1FBDE2488FDF0A07302AA1B5EE5960EA6E06FA5AF4A3A987EF5
42119186E3D3BC4A6335B4463F1981A462D6B14C7CABC1D37D26EC5B79EBCFCA
3178C2979AED55AD0D514CF68C4070FC185C6D2DC4BAE6E95A49B4B93D5535AD
F01E716215217DE6A90FEDA40D244F99194062DF9FCF45ADAFFE76AB02D96760
6950A26C36644C3931A020508E409E4C2EF6579813D1D99AA2F5DF63FBF5C164
0AC54B85B36BC21DEAAD788814C41014BEC9A8B35F5FDAB930FC3A263438BEE4
BCCD911D224AE9B1424E15D1FF0CFBAB9C4A8DB1B29116EFDD3F31CC415821B7
B59DC5E2A01CBE598AA09E444D0FD7A5C29FFE8632260F614B5A214AFE3B2EB9
DE4801D6C2462CC4772F228FB282B0E0B04440328B4E423D20EF5ACFB1D47747
E86716EF3C3D2E0BEFCFD26864C8A2C1140F86B29833DB8ED51FEBD323501C7E
228AD4DEE7E7434E9BF9BFC3377F88E4F9B081161D252E178EC3C4579A92C790
36209470BFBCACA0F9DD29D59AC6CDB5B509C5D9C7C99630EEA6A0D3A18BB5E4
115C2A3E11841B11DDCC5FC9014020E05E5D1DC7ED32A97822EC2FE10EAB9282
28746B4277AC88C4656F4D551D1D2D993ED9AEF59A2035B14C4DE00CD34F557C
253B29FB2C9235E548E21476D59CB2E37D7684B04CDA51E0CCB86B808BD7C77F
987A4D1B812AD30B90784AEBEB8BFD15DC6E09BA55DE8A5CA711CB0FEE6D23EC
9E2D682BA6C41677519886FD0E6CFA7AFFC10583042E5AD780A11E6FFFCB8DA1
1E1C74F0A577EC5DCD65A7B1A181A97F6F993981FB453667CCA119E969F07EA1
7B68A5B61F1E3CE1ABD2AE479AD351F4CE1588D86791253239EF0953CE59172F
3B6BAB7AF094B15DFC0DDAE1F77BF131FA4F56E3B417C85FC62D0F67DE81D442
3CAADE70F45F50510D97682C2FFBD0C930E714F8B451688EBCDFE91C6B1D3BE4
14718610050D69C54A32E03258545FE1DBFFEA440F41B14A073A541899A89EEF
A753E5E5FDBFBB4F19F8914ADC5E1B02B5BEDAA7E8F1C7FBB3FDB4D54526DFE4
6E28F2F545CCC3AC0077EB47D4CC618136694B6ED4E10E175B9F1A6CE7910E39
765FEBB6670A405CC1076950557797BF536BF3C79D83032C194A0DCDA9E6F64E
13342F455DDD79CE99AA9E3D6A2DF6DEE626C2148E857B18C37CD86D84022F8A
11BD9793798F6D4BDE6704889F38C8242D03E3D85EBB3B42997CD72F8515901A
21D93AD9EB57DE7B0E8102CDC547CCC71B0833D0E24D2C116AE67C9D09685A52
75F6E41C4ADCE9F9AA433BBB6F3D47134F368C3199F433715793E1DF55854900
C79A8BC4D3544A8DD98E493C170F44EB845BE78308BF27482EE9811838621C6B
0EFCE23A142BF263C1A026812BBAC6595567E2103664888837B532B16FA3264B
07F1AF12BC121404B7D5BF439DAFE73216E61A415A6FCF0C7E4C041B75109F6D
D8C4737F989D0AC673F4351C6FA729607B3C9EB280A64D8738753BC4C171A18C
45064B7E8E17298E1EF3D3B5B9DF7C66F59DC2DE0FD35B8957A5209DE014E508
19CBC89C43F3D81C9C512BF46E5E8F1DC9A661E67CFC275E3A28DDEB7C9B67FF
6CD4B1DA23929244F867E5FBDB51E3833B1050AA175149519927CE4777173846
E52DEA112349435B525F2651792E4BE3344F7C079529330F58987F7DAA305091
9ACB358009B9E36BD5FC2CEBA8D723DE3307257BBAACA8E17010ED94A30053EF
5897BA822DAFAD01B3714DD53AA05BEA2BAD181983E9FBC9D357E2C2BBBAE4DC
A88E5C6A26420A44C848CF7562D5D69CBB115656A816E8D16D53FDFF57475B8E
FBD61BFB6CCFD15C3ABBAB64BEA920D7D7127870DB1D9761CA467329DAAF36EC
3D85871363C0A0D23C14E4995B53ADFEE7FB6FB631A46886A66AFC4EA447792F
6EC1B12FE6C6AB26F211AD3A3745F41D2EFEC1C8DA5A2B429AD8508B93073E09
4F04C64B7AE5554D09FF05EBFED329C92CFD6846EAC35B6D1125F85B7E1D4CFC
45590ABF4F73D0C70F32DE34A75A0639C8089A608400491ECACC7D8F9863A0ED
D77FD361F65C17221E9E74E80E84C20C68AC833BAF4B220F5516BAAF6CDCDB89
70FA42CB1362B400BCAF26ECAE2359A10DD6832C2904C63BFF3A521FDFC15C1D
04252C9EF7F89F513B54EB6C2340007AAFE2FB3A21942BFD695FB55AD5C94821
BEF126371458CB4D3419891BEDD1D6979F9FF7F96DC523F818A5E54790F25FA0
7969437E6EFCFAA79000ADCE51CC5498A4665E597AEBB422D271E016182666F6
ACF0B37090F8B7E2A1C559AD8DC97804268EC7739F34A2ECAE7D914DCD147885
4A2226EAB39C98D5DF3C73630C779778DB7543630B04990EE1BE0AAAD453DFD2
B6081C3DF3A3879A75ADAEB2A9AF6B5D51E8B6EE1F4D25B272F3776F017BE631
68DD863A607AEEE03AA93628A6B5887C6EB4768ED4BA7927E8278B7EA42CA13E
D7C080AF9147D8411C3151E603187C83B563095E3FD13D7180EFBC8CC38B93EC
88F798D82A14FA6816F3C475AC04D401CB6EE57B421463E84A2BBF4229F74A1D
6C4985FA14727705BB69DE711CEEFD4A6B79C13312EF38A1CBB0536BE1155268
CBC39A63684F06BCB7DE323DC1B865E9F214B2C2E35D425FEDCB13E3460C4010
CA4CB7E52C2A1ED53BD59C7D1892119F79BD266AA26FD5C7D2684DA4ED793DD9
AC7D2BE2E317189D2FBD9BD0B99C1C1B347353760B35CDE253FC347FB859460E
CA64F255FBC0FB0DDC0BD3E7CE04D8E01FAEE347E082E27FF774B4AAEB350749
C7F0260F4B9EE95DAF790DB7DEA6FDDC8DEE482EA76EFB3BF0303D8D609B4FAA
F3C1C5339C9AC66127D9A96D823D098DFDC37F9B009371EA50D4D37F4EFDA4D5
8A719FB658749119FD1C9AFE896C1500C851083DC2E152B6915EB089B9CB9D86
D095C618D365450335E448AA8D5C8B9F5E7D753B5A133D58DD56A1FA9296F601
F72E422F11CBA599CAFB5997D5A7C8ABAE8FCDCF5EB93AAAF0416F1EEFF6899D
0496B4D97BD222ED587ED36722F860C1EF04708F751FEFC0E4D576A15870D41F
8FB9FFC38289311CAAE901846C819CEF35AC3F3132F8FD5B680A50181F18EEBB
C75B891E50D7030513BC93F59CF79A1EAFD66A3A95DC2ACCF869E8C4ECADF4BB
B0DB60EBC852EC8E544DA57618A34DD1F7245A345817DCB27D0B0C0B619EC974
FC4C190C1C12634DF6F280796DF14F4A0DC814919DAC2A33687ACC1DCFA6067B
1904CFF4930D3A6B6D2E690078DE39C27772ED01E6CE5CA9A7FF5AED5B2BE338
836C6A32ABA0BD43CDC76830F16B003AAE62A0AE4884E69541685E80C1F91DD1
01AC882EAA10FEA2CEDC75338408A6429ED5F8F8044B88D21BCCBC35F4C6E21C
79043CA8257E9475A502DB5497E801911E96D3FDEE8EA36EB33B12E01D8FCDD7
2BAA613EF72C8C1E56B30E165D9572F9FCE0AE3F8D6FC5024EE53E14F55A20D7
5E56AFA4043620BCF574C6093F38ABF3BFC2DEC27C87EE697F3ECCDCD7102E4E
0159CDA0EE6697EE555BAC70FF538C735CD220F28D35C649CCC1A8C707AAF6AA
8D7D798FABF3528E010CFC2D42547535F1EA70663EC5BC7ACCAB7A06C8A1C712
ECF43E6AC2A05D855560261705910CC7046652911544576697254708BF5C4979
C63E4BC8D49EDB73CF3BFD156DFF457A299B9F69BDE671E59505D7185C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662DC705BD092B9672669F5D791A7F7AD21A438AD1673B5B14C54639E8B3
AF835E16B3F572AE2DDB34FB454F1FD7457B8F803BA0CB207934C29FC51A16B0
8DD920920702B3982C098C8B8EFB199E4B098C8F969F2696F99B310834A0C6D0
36DFD7A74045573F1DE33041696BAE8F8DE783227EA2AE8954123E0586505DD1
631A01F4E029C7494D5F4D94DFCE0A72A08CE19229209F81567747542BD1857B
6F5060D0E08D41269ED78A655718F13DE2756FE91B306823F116B667887F864F
E14B9986B90BE6C4280377CF6F63A8DF81E537B689FE89AD254C935178E836EB
B891DA7F0794B9AF93AB2AA8FB3DCB5CF1401035A152F91809FF91243F18F9EE
020A5F6C02176DF5BA5DB2A26710452C3233CF632DACF4D58324C77B038234A3
40DF8DDACCCD94DAE6EDE99695D9D185F3C54B84B94558B940914C4CCE8B7106
1FA5E8AFF319FAD20D3A6A587952E2FD4F828E0034288E97C143576D2AD37F46
E21F017D2EE70715EFAD684EA2927843B2F5BAD762873DA182659AD50D7AD6FF
6713EA292EC1AE9E2DCD9DE0EB684D4C4D2AD2BC39DCFBB8B36B101C97965658
69F375D0905B6D79D5B248F2812B349367EBF83D7E1F335DD11165EAD51158A2
BA24C9E0FF6D1D3DE3DEF2F52928CA8DBC9C78819CB60CE0D32F928130137C72
0A17D44CADF0B89AE754BF7F8203F0C857CFAE8A868BC6584070C1B8D04E7432
92834E8945C797C265A2F36235E396A7F3B1C11E48BC3D8611E3607832D0EFDC
10E5742A7D743DC7492CD634A7EED6F38CB3C28EBE26D39BD5A279210579B4BC
35B21CD88832FF5AE08E5696951E7A50554F49EB496EEC2F25A009DEDD9A702E
01FC260CE9AA27853D7BA7E2EE96C24950B75D23650BF6421E5A933E167A4597
95F4A69879BD2073F6457536F053C6FEDAB36126A34E117A1463FC637BCB6BAE
8F191BBA0ADFA895AE36C2D6BA7DA125577529E2CF261967490C13C97B73E36B
E8BA77EE8A57857087D172622D47714FCAAAFCF138EFA23F1DFBC3A9711D81D7
074940A22B914A83A39CA55C5BBF59EA720411EB0ACF127C76FF806D42518951
139831E56AD1E47F65D988629DE47E52E366904436FA71AD5A4A4D01F8DD6036
C8F1EE2DC878A58A8B63D374A9A38D3DAD511EF5B7F647EB52B4782072B8B6B4
4721A563EC69D5623E6FDABD6C8150FB4EA62FF5EBA8315278991CD3B0EA51D0
971F63FBAE85E59A7E898219842C8D1C582F30C6DF5FA2097A078ADFACAE547D
A5926B37B24010735A44F6756D5C26BCF0BBCD7D2CD30B6FD82818FFC776DD40
D3CDFD8BE52F1D15141F83FFE437F1FCB2560AD582DB153772FA61136A0A5EF8
DA1556B5BDC94E1ABF95D33B8396AE9B26342CC1D2A28269A4F965AA2AFB5669
696B08202B034852C673ECC2DDF82AC3089F2C51AFB51ABAE624EF50E7F23B3A
441CC0809474D611522E42438EACB09809CF4419424E08417B18667B975BF873
F4BEA9022072655ECB439D59FC875454D0ACA65E00257C0BEAA1EF3FB862F9AF
746CF9A6D08728DA3D95ADF1C5C812B03E2569E0FCD8A9ECBAD801177B0EFA57
2ABF4EE6F29D00C325FBC4C6AF76A0DF223531C12CDEC349D2325D6FAAC3C40B
90C45CB9FB0D893F79F3230443D11313D6EBB9342680DE4846DF196EF04FBA9C
A36753633A0FDB059D71C2AF97AFD091C43DA89EBDD187D95B957A4691740DB8
17F5AFF24E8A9CA7DDD3F8BF3720A97D903F9EF3FB08076FEBE0F36D2CF9A225
63DB37AE01C64F8B96FB43F96965F6584343E0069692BF086F3059C3946CE795
13F34C3BE4FC7FCFF12105F39209E07172E0092E4197C87B371C3BA60423E054
133B3AB56EA3CE207C7ED44DD995A95F7CCAD1F60455B878711F9D834DBE7F0E
536C09E4B2A9DA669AFF10F13F0A7D7CC85648A07FCFB6854286C18AFB02F982
1D9A67BDBECC550946706DD038B7C0020346CBB16E6146769EC292DB855C040B
946EE902B287170D7D64E873E4AB6A1B3E7958437693726836B57ED2F5715000
0C071401F41F920ABAF8A24928E1C3C84040D1A5C8121B52A22EEA4634E35669
6A2F785C9FE1808B8605AEA37F2613A1906A468A64B2BD9F918D2D96CE0F0847
196EB7CCE7195434A1DF226853212452004219756E6F6F42714092C8B8CD3B78
F55E2EA7221428D6BF1F4074D8239409CCA57A0A742A1DBE5884E420AB09B204
2D7388F64591EB7FA9FF78480AE6F684E44643CD6BD1E2371BFE268D63DB85F1
B8F403F605C3EB0FFA488B7DDE63BFAAF77936A26D93D1BBB8D6A5D312D87751
C64370BCD465D84CAF61077006595C1C5BB0D95815DDEEC4B0EE7BD703508A65
DEEEFEC095B61E2638A885A641542E9AA163E309DECE07CF0DF596AF31EF3680
2412D51A2A277E211232F061402CB853AE367FBF83EB86DACC3DEB79A11E8871
9B8A0ACE5C90E1DAF6A18A724AC1069FF4728B7C7494E74FBA8191999E4C98B7
482F9D0330E79BE76D8A112491EE50C30C1CB8A80F6C3CC74D6BDFCF286D97C0
0C099C9AACFA17DB54708020E79AD1A28CFDA8EE4CD81EA51E28EBCB2441BD24
BC63943582ED65510CBA2249054AD21A4945D01E6DBA61172A30D6DF3A9A7541
F8FCD9669205E89C9539267AB5EEB970A68EDF64BE1196872CB63DA9C8AE8597
7991BC9056C04DA8CCCB4C39F473810EB129F80A06598379F5ACDDF6A54EABC0
96D5241BBCE1A53012A3777D18E3E41F563A89AA41C87F8BF32777245BF05BC0
604215FFD7B60E63B269610DC8B1616C82B9E9D33F82096B12000CE5CD30D6A5
5237CB67D446734086DF08CD99CA02EEEB57C9CD8113CD677AB6306EC5B8DFAE
7BE4D083D5F8C661053C0086A78169E4954BE4B23ECF23C2D30009A3B98A4A8B
3B9371AE254FEE11F12E9E13BF086E5406B7105EFF6F957ACDF1D0E5E0C11A15
60958B240112A9C46CC5F0A4304C927FE0E66D726DFE847974154338296A430F
BC49E521F0EEA09E6CE4AE1036AB5C0A221B4DFFA4E5E8CAEDE70CE47CBBB30B
69B3C83070AC0687F97E5162E8893CE2634FEEF1C11F1EE166AABC8F2C004375
C7682E15F145250E4954279168C55A798668253E4CE8DB647FA715DAD2ADE594
B0F898D920958B8800769C3D397A0E43FF167F6B784CF22166C8DED1B2D0EBF3
47FAD97B6BCCF922B614983CF0A66F4B3B984D785670E80E9A7CA1082720A41B
3D0DFA603500DB0DDFAA75E1A3D31F259B4A2CA0F0C7A670DC7DB18839CB1506
E46B0F477406B0DA9C36DFE2BB646D022190C29DE8D21461AB576C3085B7E5C7
00E6F18FC1E6E2CBB3CC4B98EDE3F4AAC66A79F6156658733337FC71C3EB157D
E176EAEBFCA33EB9B7E04B66B069E00DF22F557EC66C734207165420A36D9B06
D97480A74388CB1CBDE8E5BD5F0A52A7168ED4DBEEE61A81D5A8E63946AB2B81
30FB340DA5FC64E47BEE266251BE8C5822474EEF3AAC05ACEFBFE8114BD47CBC
88B1F7C018AE35E045BE7E0BB2E6274627847C60C011F1F2EAC1460EC560AB9B
49952478513BD1ECD0FBC9F03DA4EDF9804A16FA86964A5FB1A399359E6EA254
E17D75394800A14DE4CC3EE273D67EA537BD2C756BF77918A3E60697F7EADB6D
1C973BCBFF156818CB1FA77A968EF8BF88FD4BA64F3F0080BE9D1F1D7924230F
0706E55864A9DF50DC2E7C86237DE10FE78C3462336F694C7928B43B21CA3F1E
97A0F984D68A21EAD37C30369C27278D1F5854FD2291F629FBE8CD53B2F99AA6
4C51B2A532B639A6E00FD939091F9D2AB85283428FDF3EEE66EFC8706BD4CEB5
673DA3DEDE898545FE3CB23691E067FD8B06237B89FAB705CC17C140A9E7FE04
B203C0A749FAB76C232E3297FE7ED493C33F13C4C4BE62FF3094760E16C74A3A
61DE2B787CB5F5DC1A975817FD504B232A87380A729593C4244B35737987D912
C194D9E236DDD092DACA7F6C6A30985CEA42D318302D8C7E42354B50203DC856
359BF62A2ED987DAC603B216EA33E745D319571370DD4F198463BEE28D542D0E
D4ECB78959DBD025EFDB7551BC97B4A85F4CC77B721C467CA79B54833600FEFE
D23F7D1158E5759DF0BA95B2EBEF6F2311DDB37AAFAC0F0F26CD17F6A7B607C8
B30DA6B4D3E28F606C2EEBEAA310955BDE35ABD93A81FB7DF94D4832EDD4D6A7
997A54C910E1CE525F320C0A667B60D2EA00EB53C5E258C8FD6DEC9938C28682
4615A62F518B488FD5FF2B9BD243037859F2F7E6847D1928324986ED0DFA14C5
ED6EEFF1AF9C658ACD6B1D2A900C4A3ECE9D29AC1C56391519A897CC5005400E
6446842A4F250AA2EABDA756A630439BD334E2AD3D015D47C504B447B0729989
3C2A13879FB03B0C001A8475BFBEAA58B5372D40738EC834F4F54BD5FBF8D789
5E1042CF11C00A85003FC488DC24C9ECF212E88780542D93641768E9833F29DB
C0AEE8F60D83B1D7D761D1059F2B9D0E7A3EF5036324F8DF03BA6E2E6155FD03
02B4CE8914B74DFB95A34F43ABA609930890B0BA33259A502FDB5F4A7CFE3395
7AE323B2E84C7C3593DC74E1C2D0B394BA450E6197D4D5267FDF3881CC94EAF9
B1CB2DE68895FE349CB2540FE900B1F869CE1AAA0D4A3268754AC0BA83A4C1B8
90724B1842BC1F74BAE0B49B99A03FAE26D6FEFA91B126005D0FAAC953B80A67
3C5B203E4D7C52E5346B83EA14591335307F32D6B136DF1B3618CF4618110DCD
075905F6A844A70FCEAE3C13E4BB447C61F7C849BE49F6037CAD46ACF6D001FC
FD3A28CBEF0D722D729598494E7C18811B0FD2976A5EA202EB31FFDFDE1A076B
7D7DB9735C7EF7DC3604954D601C9B97B6592D7398DB6E551211B06937B65593
0FAA7D6AEAEBAB22C57074D7E333335718FBF64DEEB11F640D16F1E38C4ED7C0
CFDF58C2817D165072329CED28093C86F8E3256C31BA027E951C64DA5975CC6C
A24669EADBCFF732375AA575CF820261BB953604B64200C09946E02F43A3757C
47DFAA614654C3EC36CC20CD52D68E11EF1A51257DF368776730FE1FB1B56B00
F1E1805D290F4CD2C0ACBC6BFAF318D4DC753795F2B16AFE3CEA3339659EC457
5FDBA7F83BD336E952203E2634DC95914E8EDFF112DF207B366014E288388EF5
224043523442B7AC770282E105F92D4F6E5E6F45395F41B58AF247C133CDD122
5E18122C9152FB272344D2294FDFB5250B3342520C55E9480627E389B4376AFC
207FF5A98A9B1B4AF58AF8D177071999935EBD2FC9E80F9C9441D24DB04815FE
593691ECFFF237C3AB14CB8A8B34AC7A3145C4DA6B5CA58C14C3185225A11AB9
96375DC17D426AC5697D0D5BBFFFC18E9AA3C2862A6939A9F4CF825686EF85AE
D1E90C84B51D5111493FCC5A189A1E52A9FFAD1509F83909439718EE39932BCC
E29D10EC61062B434DCD255F02530EB41EC140A5C1839ABE485CE35A00E16A8A
B4A199BA159C2132B9D2F5376CD821CA600EB044293B868B68D2D54419B027BC
D44483C3D5F961188F9D123B8CE3CBF95F71A4D6DAACEDCEB5E250CAA31D6740
E773CA536CEBCDEBAF5BEEBB259187610DBDB283CEFB88E1474EF951ABC0B60C
E58DB398EF58E5233279DBDE36007B7BE75E20E0266A063B65B21E11EB9AF0FA
FECF013EAAAF5030283CB60DD4C314F62E175014F17E47EEDF4EC81357A88992
FAFE592E2EE81DF3CBE947CD5B0EC960674565E010EF385F98E49924C4D7286E
AC371EBD0F51903E53C992C1E683AA6282DC48BCFE131FF227ABAC9A54E42B6E
FFB0BBA2464DDB4B9DCFEACAA71647D6944327249897C57C7451288F1C80B3B7
464309E8BF8EE9167B983DEE33CCDF1D455BB75889BF735099CD43CE201FBA00
73D37C7B8B524167499B198AEE5C2D1AE4625A0E5C1535B65D90DAA46D5CA526
EA8BA25C7C37808FB23EAAC6B97D8529018455E72C5AC02541C9B96B2BDE0D67
1F0DBFC665C766FB463E11CCECFC5690150B84739B1A370174AE89995F9E3708
F353F106434023C7CA0F6BBA39462651671D882E9EE511DDD16510E5C6ABA413
4A989CB39DF29C00DB8046D189602AB7881DFA1DA5295BE7FFD4F74DF8D6914F
D85AA30CA26115567350252D4E783E4EBB2DA6FD0FC8B8902E773F85FF188A7F
7B22A0D358CC112AAE797BC753CE1122C8ED16602A219ECF908FCDE63D3B4E3B
3DBEF7E40CF2C88C32CE6104AE912089C8F003238541A2DEDAEE301674FE3625
920639D9D4F01424584304F07A9ECBED11885FD4085063E65949DC40BBC6B31B
C95B4EF20F1E319F29F1CD6AE8BD73F1C0C78E1F847CC360F4D000FCAC2E8E76
6B1F073E89B57C36245470E6E03F0B4F8F66FFFBA264CB834568191B2A9823B2
AA5847BCC1F8A050A03FD76ABB6A66115C0020F34689116AB32E7B5CA803DD3D
1C56796ADB8F943410683CC1B32E54186D5A3C570E1980AF512B9C38C228242D
1D67DE33ECC9016268FD538B5B21BFCCED7A16C6C9F74BB5468935339C65CEF7
CAA35E73BD2ACD164015467FD54857A086355E9424515FDA5816B40AC09DAF00
786D758E1919B9AFD86C3D4A83C68452AFE9F66ED148C3D62A17923CA34FEEC9
473CB97B95C7DD6C599AE0299E328FC3004AFEFCE5675C9419F3B1D15FBFEC22
47E9AC9889872679B50D5F908B796CE95B592E0341812B285C123D63DE0C1759
D7CF56E3BC99B996E4724CF19E3C12FA13C7FEE1AF683C6584586A841B2A108C
8C5FADF7D6CAB46074124DCB2234FD57674721010E300E810C7BB903A4E5F3ED
73467F201B5CB117125B3753B2ADF6C62B5A9BD7D865299894164B39EB692013
451762626A300BDEE50452B1844F5AA128A5FE4F30DC9D664329D59A06DB5D87
C8FEE3D67197DA4DA109A0A7CE1BD7BEF74EBF333263C97FC354A2BC4585DEE3
472A4FB945A50B7552906BFB4419671127FB4A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C3284ADD469
2AC17DF0F50CE04DB21BB8B276691749E2E6F9BB3074DA40AFF782CB25E02AC3
566126F3605C5D91AC7F8E69FF15FE9F998D6BDCCF481FA69BB6B02740E8E674
BBF93E87F057BC472913D788E66AD436C8C5EB667A9E200B11C78F1226D5941E
BF08A7D237E81E39B47A6F25B2EC9290B2883555ED7DC703B3EB5C0F679227B6
E811F2C38700DC5D6EEC5223F0FDBF80711A377649E17BE3301FB1AB1AE47128
7800936B812CBED8EC4E0A114FF329C5D7372EF249FA82D2745ED89D47EB2E62
91A6066F1FE1971379E043F280BC4E314A0EDBBCCEB0029773C9574297BF4E64
D19DE34E73FE10D63BED7FDE25317440E34D4258502F4F01C52AFEA66570BE7C
7BA8361C07E06C4962417A31D0EF695F8C92EB33721D2363555F9F5034CD2955
B664FE75192F33BB8359030780CCE9A99B4C2FEDD3E39F711F63E15A82F4D4AC
55BFB5357D5AEE55D7062DD9A9AF99461B1F89B3CCB0149CE5F85208AA40009D
0682CAF5DB0821AA0F1378369902C813DEFB1A46426E7E895A9862CA1C8E10A4
8D3BA9DCE374762E175D3F06009092F23B871D14D3A3FA6A803B2DEE2684523C
FDDBC23B89F2A60DB25A27CDFAEFA66D2F0B1E5CA6EC76D9F6DDAD37B32EE662
AF7460953FC0A9A530058532E346F581AA85779C962E6F13E571E159A42E429F
A897523203F60ED4A87309FF8BCAF803D7FAD72A7AF7BDBED08049B0A868E226
23CD452F23ED427E439F0BFB8E51935CDAB083DD0F237B28825580C2306494BE
4FB721E4FB04F7B5D6B669502D0EF1B69371902CE4CF8AD84A8282A03C237DA5
78C6008FF67D6ED281BE7B396928F948E31B89CEA0D44B1E9FD3E9E8CFBC339B
8622C5288E99872B907D5A35C31A9064C3E522C63FCC1C69DEA3873E2A39B27A
9B7920B10E6C7E03FEA1BCF17D34264BC6DFB07D15896EB030D2ED4C12111379
7CC3D98833B67E38262680EB4AB9A4D92F1BA39865285CFF7DCBFC096FF9F878
5CFDBAE4B752D854D86A959AB5CE42952C956BAD194A222B76E5C01FD5C08F27
B2244E1A7579BC8B321BBF4E89CEE48E539E691F9563A45FF67FE0970DA66609
24EB00426703B781A4692BF21909880CFD73B51A92E3E71ECE7A5A78D48AD4A1
03B97A4AD2883802EA9123BBFC76EAE353656AE61C931C27705BADFB258D56DD
54397BC47A4FA41BBCE36197BD8EC41D02C86D0A246F40D007715DAAC213B3E5
ECC8E4815EA573573B64BFF8B6251FFE5B2B7E39C1EE2023EA55F8870E7AB26F
14CAC642917E47027D2FFF3622B08C61085C4C58A91BBFC23E9BFB77430B8E5D
C464877BA684728D00ADFBC1468216B87B7A86AA4110030E18F7DDF321AF4A93
69AC60D04886D106B7365E7E1622968858D0D7D1F81A5758FF302C10135DDE74
E372502F535B2564F43A689D9DA1043D288DEAA0061901488C87D0064DF99B96
25EAB93115FE5106981F8761334720113FF02B2C734749091BE71BE45DA126AC
BDA9EADBAD6D7267995C72ACC0658E69A52A6E2ACCC1B7EF3EB9270EDD6CAA34
8C99E0772533C90B0DEEB8FE65188D79405EDFBF0DB3AF4FFC5C99973AF211F2
5E77D68909A9B70B216667FF92FDB0FA2C22769FEC4DF5BEE2FF203C4D26707F
FFC5DD983FFF4ECC07C00C0EE9D06FFC2BAEC08237395F6037F0180333B6DE7C
063902B4631A1666599E70C1BF82309B15B7AABABDA7B542D018A730FF2D4745
6E33CB6D616C62D153B006F880D67F16B316CBB5CDF1977988257A0ACAEE76A7
2CBDC5810412ACA2F4F7436FA46BA59CAF894409CC91527462F8C8B2DB60A318
DFD08CA53AFC3C525EB14A9C1D2F43F92DC94F900FBF05134CB5C6ED0EB376FC
7B10B67EBC2E678586388FC1AB5B333511F10A6EA8303A051C2DD13F8A41CDC9
022B99680E8DC1DFA7E16AFEA3C17894DFC6F33722DD2EDB7993E0D04C2E0ADA
65742ED08E4650A56F061EEA9DF794371055BF797CF457EE25BAA3AC28071420
56D2BC4609975AB07E93D34E70BBCE6612EB6A71F96165AA3EFB39CE6A1A0E57
84F41B9FBBF91E8B07BC7FDCB9D71024C6EF47EAACE6C5EF4EBE6416AEB3829B
0C3A245DCAB38F3EA39AA9032A27A37840022A6BFE0420B06428993F42DC2AC3
0C523E4D9B332AA4B2B593C59D68F48B5FB45B6229103E53482A00FFE0E6D59A
1809BF022ADA7BF06083004E2797F082034AAD735188B385776B896A108AA930
3CC927663E4434E8062A9F9101ADD125A32195B8CB98C9B19235F9C878AC3ADF
0223DA6C547263340213128BC9D5A348AD6EFC9BDF91470F1F504644EE43EDBB
75AD763F04A29D34319957690CF7CD568224E9F66B93EF3B53FBE3D3D7EB4DFB
CF0C6BC99FDFB74F740579C8460FA109719C60E8C7FDC5A23F9612B8E33A7E19
7F53A51C34EA52710B82F265007F942A15246EA5F6A79C01F1DB8349A3488AAF
0485C5228FE4B8A795EDE2BED304E0F7CC78C953A0B826E47018F8212C5594C6
97B28B05FF71915A858725501E38FC7E760B5202739AD91AE1FF149B02463596
BD26783DEDD1D735DAC9E46662F3F765FD970E1F82C2659A38F8F63251495D69
7C3ACB940A5254D2E380A2957A352FC808C54FE793012DAC8DF111003E63EA4E
8D843817DAFD6E9D833942F4B2C700A5D6C5B7D1CEBCF30EE34E39143E5676CA
9A64C0F90E46748DF6F2348D53E8E4E7DE16A5B3F30C9F6C525EC282893A7AAE
1739553CD9024815A145A7BCEFF0783EE807FCD175A9B156250528CCD335A042
E50F518FE415AB7B4FBFA4AD061EE9007389FC6050A0318178FDA35E83DD2FA9
2F3CC5B45B847FC46F4FE006C96D3CF6331ED3068E8243221A2E8AB1CD612EDB
B23894BC719D68C21A6625E48518D2E33F8E8936BD2F492AAFE1C957383C9917
14D5A5640E776E253806F30D13DC8B1A60616CB434CDE7436FBE5D6B1502D8C5
D2ADFB60F74420E1159DE70A8E253DC0F483D861ADE17A55B76D038FFC64D4CD
A9D2C72DF5C098E60BFD3967E0AD6A928DC16FB7464643E378106875A5028F23
4FA2E075B9F7005C6712D6B1F3590135FAD1A3684E645B10DACF74EFEE1C7EF3
2A050251D1F29E9CA9D33EE35BC4A796CE9485B14D6339E64181F03E4D46A940
BAA04FA5459822F2A29AD7B89541C5CABC4BD472C6B7C446257E2589EFCAE055
A0996BDD5366D897B69550A29D2E4D2C81038E729D436B65B80B372BF7254D4E
70B69FD185D5DA60AA63051DD7BE7112DA1079D05B0E7C7BDB432343F0DDFC43
3D1F9AECD1C100609DC41B13797502A0C52D82740AD335199E8535EBB7236B12
0EF5502844E750853317185E95A7CAE75971B27D34B280B335AD80453B44C4C1
C9FBEDD92A2F7B9F4D5097FAF3D63176BAF1588BCE485A83AEDAC0CC72F52D8F
279E4959BCB2AF9EFBBFCE7715413D9D1F8F385F2ECADE863C977E93044156AA
A20334F390F4D0A7238555FAA62E6620B6267C0C4BBA87AA3EC7E63AE1E9EF07
A263FAE40795B42EF3C49DF4281DE57A5CD47FD0D033108561CF6964986802C3
5423E3E7B59BB273E4C89FFBE3A3489261ADF5352B362900526B412117FAFBB1
84CDCCBD4D0C05D9429F168BBA63E294094D44A6D953333C4A2E652781E6A836
8780A2E8E63D29D4EB329D05220260C292D78AE3E23D323472F9C430842F3CBE
E053515E87D63365750ABB9A412053B3EFF676DEDC99CF05746865478D0F54AD
2436A314DC82EAC3D1D114E1F833A03E1926D649F3A3467CF9A26C70FC2DCA65
C9DA05F2F8DC678BF43D83C767DEFFD3646742761EB70076120C87E29DD296D7
C1F2F435D5FF17339E72ED776AE8FF0031329011D3D2154C8FDD306B66B9355E
A9DA26F3882A778A6897F362F3AF08CE891D7A7AB07C6A248BAA88AE31FCEDD8
B1C0031A518A41D38FF6CA439A45C76271259B75CE9DE906991AAA41F3B26B71
44D1E8B947323A08AC7AD4E9217EAF912C86CB6CD5BBDF876D5C6CD2B327A1E5
D547A55BE068091C5FDE2261F4E24C4B68D17AD562D87BB5F299ACDEDDD8AAA6
5F0469FDEA0C189B74A6B0D5AE2C87E3DA57097C8EDD95A5FBC4155EE1DDB2FE
3DF3B0A54F55B2F1F558CCA97BC903580FEDC3E27F1427BE325ACF572030668F
C456B3C403AFDB5A41F767E8809AFF35E862B67949CD63CB481588F75D279C1C
31EEC3FEE756599DAE36865931B0268D43AEC5A16489E52F1EC7C78DAEA22281
31D312A1ED927D79F8496DFB6EFF878D0A681FA0CF7E0DEF85CC08C3DC636E39
0BB1404A0930C8CC5C411A0F6BF8A5AAB1EB2C12B08286D947413ECA91310B49
BBC2CCA6DABFFF343AD856300726AFB67AEBDB47CD03EB38C2BAC1F191EFB978
A44D56C2BDA0E6E0159CB2F219E23C8BB64CBDCC7CA60FE0D40701FB5267D732
E129C522132FFF19330D6B69E31776C42479175D8655026D0A852060100CB5CF
AD1E6EC4AD5EB89A9D4EE6EEE286E2046B1AA71B05F2E629B58C9D88A21763A9
7B8040F541FF2DF0E7AD1E993050B0611560A4BA2299074E853FEFDCE9480F0E
55E126E1DC9F972F2E1CCDE640D9250A6281D65BFF4415D0E3B177EF6B942D42
FAB8C427C2CCB7791271406E46FDE470D568BC7C074B996F387F41A70717743E
2EC6C0AC321900DFBB68049A236664CEA57F6C6C1BD9403D212DBFBA8A01DF6A
ED1B56E04804DAEF91438B326088D16EA2AE7B24A147E66B811F82F08D8532BA
D2E9F9DA294FCEDD1C607D074961AB1BFF764DE0045F2783CA757D3D7F50C5E0
F59E80EFB8230E3D332DDD8A2A33BED3986CAB4AC61D67AA0EF7F0AF8AA6E853
17EC83144D3D394193177E17081D7672A5A9298786AEAB1BF32F90F9B892DECB
E1E9CF7F118F554E5688D5246D21E1C12F92A62946399CE5904565B6E8BD789A
F034B4D72436020890C45CB9FB0D893F79F3230443D11313D6EBB93194B4A040
0380EA3BA460046252E2CEAA182531481CA96D23C03CD003680E92F0D10F566B
7D87C01ED5E6E49D8EE2116E5F5C2F25A54FE587E55C037EDF4C9BC1D95FD6F1
29D2BDD5E78B2833CE36458A6868587A364E5DE00C4B46A5A1BC4BEEC335A5C7
8E90E121BEFE8C3E1729FDD40E5253D461C07824578BA0079ADAAA937D6625C1
BA0D0E1F94F3955700C92CB435D3CC0690B1AAE543C7DF1C622D9415114EB2F3
FC4EFB8EB31E6D5FC58CADC13DB6CC3944DEB241F1FD9A5FBEE5B1F2620B814F
A2A17F0060C55FDEB881EF5212133C9FD7C7BBC8675CE57728732B76A05B88DD
2148F33DF6F561160A09EAFD6CD7F0BE5D0D47122DFE26A8DBCDD73750A5C1FF
6B34CFC2068395C459191023377A30F50EE2D9C8C41FCF68538CAB2E4348B5DF
2B548C85F859F54BA9AC10B505F83646F6F7D86F4E267DA860345F4E5E618DE8
E15E01BAA88AAA0F2B68126191736DC5DA4389602FDA331A705CE078FA56C2E7
F2BC6730051EDAFC10D229ABC0469715B8CA26D7275C7382C4A6E10E92D100DB
DB404EBD60E1D3B1927CB33B44BA04A75CA357C3415525CA05E017F6EA82A481
720DD739E2BDD299569EE578A0F2E627F3CC4754257C74E4974AB182380E87F7
E8D7398211D0CE805938270980A646AF0FEA6F7664923CF9E8C2DAB8CFB4A811
05CF9A1DAE5E32E4F150EBD1B0EF59DE775553D9DD5A9F5ADA21FFBFA6459AED
B6C7A96847EF66B919660191C5125B9D69657AC718C065A32EF7CA8A1FF5880F
C66196E149012346CA7C8EBF4325EC599D755882E751A70A0EA84ABCC0B376B5
1523394318C22B863A359B68FCBAADEE6489FEC93D5370B05FEEFF8434A405C1
A2E7250CAD26B997055D1F1BDC06C89A7EF1AB04C8E0875032E159EA08664525
D13AB2DB1F0E6897E6F78FF6635F17CB030B0A985DA8E831C6DE24F6B5582D77
576781FC646BA909EC0E89D3DBE624E72E3AD8F47C1D8468D4237442FE18CE61
547347BB2E16A5F093E63A6A3EF9489DFB011040B8C46EDCDE5659639825AC78
602AD07851D8FE9BCA9705D427F68D21D9BFE25248E9F9CAFE7B5FFEA05997C5
4E35891157769C8BEA7D15C98753C1756AD232C5560AB7B343A82E05AEC0E8F4
23974E8CE0083904A6D968D5BB4C5E96DA4CF20AF491CE10C5425438707EA588
9E58428710B95896FCE6245C616E40C89E6F718C08DC8C3BDF78849E887E7F45
8D900B22D748F2DA259B23634561B27DD0C36D891AC4C2C6FDD6F0F028FF400B
BFD7F01A9E452E2962CDD4A5B02949A590E24467E0DF34CB328F446210484C1A
F93A1E17FE9B1BE8F79969E78B3053D73D7694D6C8637C08B4E8284A42E1BAD9
9678BE5480AC33E3CEAC8BDF1C4E27F9FB30BC3239C0BE4473B9EE4348409DE0
DC48985C16B4EE9911D0663994E15FF170426D1C3BF8F45CB564EC82DA6FDF59
3BCEE71267940F7F6CDAB79084CE5033270BFCC01C111C97E5C184C64E367BED
12F5FC0C7BD3A5CF26570893DA4BB523CA06930E95E4E4DA535522CD9B221BE9
AE9F45624FC9A0D5043548178DECF658E5AC5F819EAE2E32F3C52E83471910E8
260EBC66E8864068CA45759E1C4256ED898EF991D16634D28FDEB644DAFF3AB2
07E2C5EB8DB56107308E8952D07909357DFB4C6FB69A415ACACCE989EF76C5E8
38CD8F41D866C4A0689C8CAD41DB4AE2A8F6490D23184A6F36D3A8D35B5F1A2A
17E4627B3F7FA43B61D89ACCA1149F40564EDB0BE81524DAD37599C352F5B621
984FC39F69F823FFD565293214982C9A605160523BC0392B050B54C7805801B1
0DC2533CBF68945E0CE2640AFB10EC9FB5F0B88BBDA0C53BC039290F68700FBA
1C2192E9A992AB34734508ACDE1DFB7E34C1F92D4D12364035218F39A8006A37
D030AA729636AB2509175B04342FE0876C068732D8A335579F357342796AB76D
7B6A436DBA568D1F2E011BA2591340AF62AC824167DBF7DA7E3CC574BE96677D
F7A132534A9AD3700FBBBE374B26D2986A96D6D92FB7B284544EE63F2DE54CE2
61B784B39BA9AAE3412961B45C95174D87E458C1EB7472F0C4D88622FA56DFA5
FAD8F5344525EA82B2BD672C38EDD918BC5FB72283232E7E6DCCE504613F9BAA
A3890E4F95DA74A29F17413614F82EE0D41AC958BCDBF6DF347DEF600056B73F
84C5BD64A3C585E198CB2DFD8EE51921FDCC72E1274DB7A15ACB6DBDD215F0F9
CE3F195BF93195F0AB2BECAAA053D5C3FC0E65FBDBED5F57ACF75CE2FAAA8CBB
9B5DC32EDAE0CDAFF47C6AE14CB2A2B3F756BB64A72EB7CE53A29F5C802BFEF5
66834DB95729D76EE80A20787707EAE4AD8D9A02F043235BEDC28522DAAFFFC8
4BA89402199156A0F70534E37FA85C5C7977396197AA8B0C2DEF08A6B185F2DC
BDE33202C00732D7DC48EEF365FA363DA9544109388DB60289B816B4AF18A7CA
34785C2995E8FEA3244C3E24798A267A9BE2D314E85C035F5817B781DB468537
8C29BD96840B79F7C331366A620399967B3F4F4DD51FDE74DB6F706F0BB4E128
313B42C259124919D6F2C11E7E5C2F2F773C392EF4A028E0A4184BDB51EF5F57
FF6047718E9CCE9E2DBB0220DCF003FA3591C652D9B3DF9A97322CA9395ED6F0
E7ADABBDEE22D46F9CEC8CBBCC0669C5362F532EA4B859B273955D0BB9D52444
CC486D6B0646AFBEE8DA3CF3CAE8A54A224ED4BCAABECB4DEC738BC06CDCD866
FD9AECC7691DEE6B876F5891B9016269FF0939B3262C36D2B386110B1101A0B2
D45B7E2BD83C7385EFEFF219B56A75185BEAB398F7BF45A5422D6CEDD41C7E6D
8D3529DA4BB4CA9F30163CBC903E984761FDB80C23CCD58542BE708825C7BA99
1F90B669E8D08E6A6BBBD9B7BE4A2F4DB8C4B34425AAA7B9E3DBB196942DAF55
456BA965346AA6F6D165367142ABA46D40D959E7302F1626A0D040E4A10F010F
453A1400007968ECA357828A51B79C18B511BD894A4D57B8908A83BBDCA40BF6
A8E39B3F4E709BA492F161EFF3021574D159D5A8411DD2E0A167D78A70A9FA73
FC6511C9D50555ED8D7C52BCE707C3D3A70C6FA1846D2F13110D0E09365A0052
D18939D5E1F82A5DB254B88B7498AAC679910CC6EFECF6DE39561B48B155375D
F078C2940EB7ADD8732316C1DABF1DBBD4B1619D37B0E7D22074C5D30D711BE1
94DB6748FE8ABC174A559C4612849006BDB56F078AE51A1634D47D563FE06CE0
1D7DD70434E6AE243AF6862C30E936AB5688AC46B7FAC824FB2DA7C9803DD7A0
78016FFB9316CB56ABE389C78B591063B9042DC8AFBEDFAF6D1B30C9499EDC80
367E0066740A6A610674340EB36F542A08C1051FBADA15B871D8EE0F5C1B2BCF
12D63BCB85A470CC53A3E3CF9DAF47292588443C22628E66F9418305D6668014
B1BB23036C508087801FA6679B118A525E0E121A74EF9C325E96FFB0E4ADEFE0
95E7FC677063C83C33F2C7B11AC59C13420F989127A04BDE93AFC0E08438C114
5C6AF49C8E0F1B60E0CC6E9113A3474DEAF6B62F41BD969BAC7058488993FFB0
F6F4C18DAC4454E3221AAD53BB4FE9559A1C4F56F8A7C8E18A7F3F0C5D4CACD4
AF897233DD7183A1810E30D62B1CD2D1B6D0903C905223E2B7358EBD7F4011D6
CF66A2A47F5FCABCE60CEC5CFA814252C81F8595C3D934D08CC565F93E9719EC
CC20A3CC4875CCF0334A9B3867B40C09602F485DA98A8F7A63B657A8DC4684CB
CF8829810D5EE9983B00550B10B8064429234C9CEE9640224A518BF3781781FC
EE4EE6573068C92B5ED68A8D15B4FDB290A85119DE70F731B16A50D19799723A
BCC710E461B1D1B58AAF691CCD30B2893F5333924630F6FC5293FE580B5E02DB
9F8F1BF5ABAE48D71BB8C924E2EDF4A75594EC6861D37E0A1C50A799B91E036B
FF47C5B3961AA8F9F336ED82F02AB140CFE04901E6A1582683A0396A2F22C14A
DC1AE3355ACC243E49565BB16E0C63E6607047FC6F654AB0BFFC76A33580FDFC
0423F61A5A8BAAAEAAE86EA2F833D662AC1F24B238F991B7867447C63AC17A58
599206914201F166DDA2E46DEE332AA55388ADA2D02D55BBE2B36D026DD7311B
A76EA9AD0B09722F0454C40D7D40843099A952C68AD03D7A8C1E3864EC00BC26
8C7A908C13FF0204F8C4E3B54DA644B46C5ECBE9008492F3978EFB0530AA8AE1
1DDDE77F57E80EAB28072961EEB3EF9F9E0412E46DAA5A61D1383EB9222073D4
30692254010E31E69A861DE7235A691DE22A8053B152A3A813042C46AEC234CA
B2E42C2C20A1960B83AE698570C7AA1C45DBAB3B77DF51EE94D6F73265617CC5
5875B67E1A4C00EC92309CCE27D3181FF02314F6049C7FA6C1C5E00B24E87A0E
B2DB7C7A4FBD34FAB1256630D8C5C66A4F90538E0BAEC4C50C05207B779D8739
68940FEF927C8AFAC16AF5BD79B5E201457A88F7713B1E49D11087F32CBF8B1A
232F4DCC9B6E3C77CB1585E19392B15602C09D781CD4E5A98C9EBC62B5C9F840
DA7B8286DEF451F1D2E48622620C0438852C0176622D21C2C867F69055E08D6C
4810474C7069760A7B28473DF74BA18F74C491F869A86B15E8197BBB76274A35
1AD1755FA292A9968BC84FFCEE8D0B7407F9CCCF31028498AF9F24E6000B8949
B487532CEFF5A8C3BD78126801EFAB36D50E8DBE8AB491932C65D73F00A672A9
820FEDA213F4AAE2C5C1D45AF1A776D524
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FC7DF309CEAA
B7C79374C6ED59B683387237758B75F5ECCDF586AA7D9B6F5DC5D57AE3AF6937
F45C869DD22CBF20D876F5D5A2FDA8A63762932F4CD50CE835A135D14563C415
9E5848B3062ADB9E374E3A43781E2FAB047819D53A6266B49E540D79100A0E59
9A49AF94B6B56D166BF13E0CE6FF00F936211D0A901008A5F92C905F9EFE3617
171592865C8E1C9388867DA6FD1437C9820D05B81C78F8E580B1D1E6A8D59462
D7590018F976036FAE7E1CBAD7095BFE6125C409D42CBBEDE059D026A5226CA0
5E1D2A286E8FA222DD130F673A76223216CAC3FBF49EA5A6EF120F4A3F2C1B5C
38F173AE00D797B4E7A37299C66DA33CA8EBF0126C1CB47C6DF8D6174E4A8719
6CAF738F6E876E120688B1C94EE092DE61423FB884E8C232A272869933573A5E
6D11425F597322685C524FE51760E641740521DA6D26C5A4557B01EB5D6E32C0
B45CFE0792F62396267EB558053CC1522CCA218E15A942D8CD5171BB4E8B23C5
D7A89889FEC8199C1BFBF2E9C2B5A859D37B9477AC9344F102CEBA0918668AB3
C1AB139105EF0F98F0F39B52268F7905AA00D9C8857D728F53F195E1C608A8A3
653169F39638D9D9F421F4A3F808E890D1582BF08EA447E70EC4C7F0956A5909
692CF258F8A6D0BF53C26E96BB76E360801E608E05496BE7619B8C69F4248F44
CD9D5F5127D99FA2132E6C41628AC3150F9B644491CBF50E1AAB4DB1875D107D
8180396BA6046C2BA8F8E14A7959731A74DC4B215D7EC095EBE86A3FCF3E59AC
014D4FB55480AE371254368CDDB5880CB89D95A07DCCF0DE54B996C728BD3334
2978D99464D46BB5E26CAD7951FBF3D7B27121FF01DEA6F49C7A44936D8F4AEA
ACEBDE3D65EA4F36C4CCD5E728CA781CD9ACF89FABF737E42204D7CA411E72AA
4240AC015EA28CCFDC7A2ED1CC6EF05E7BE3767D68053B9A33CB768846E38E37
4DE01977C142E0ED10318333382EA1345D6AFED8EB3CDE280D8103C72CB4F311
1D1B8690DD33C3CB3F5BB87F30B80F15A0082D1D59D9E92F477FB54885C6489A
CCAE019742EE40CF5D7031A7D3D21CC50CB35B53E1B9BDC776BFCF8D8058FB7F
8F1BA4BEB2C75F7E13D6E20F68B00C105B49DE64887E6AA4AC90A011EAB0A70B
24AA3B455D30B21BFE4033113461F81C9A1F7319F7BFB76E360BBE84C67C3DBF
FC1AB608DA6794EBB5E11AB0723C34AF488BA3A411E8E31CDAE8245C2C313EC5
9BD6C5F625B21D088FD737663538EAD5C8185DB3513C364C054BBF7F35F0B627
DDC5FE2AA948AE738E0A6C42215DE87B1FF6DBD93F81A5416C1132FCE69B266A
420647ACC5619C8C6C57DCA55CCC2AEDDEF7FBA2546A49E44A60B8A36ED9B234
38EE2B1EB606FD4554D733D69592337AE5CF09732CB7F8D9B878F9B44451EA61
2956956C1D64527679FCABB737FECC26324BACBC158AC4DB995E99265DF870BC
D0CE272C0BE7C5ED03F74832CD79F8B8849C816D778320D08A90DA1F4295A4C6
E728D678ED7B21A5124D3C83F1734B43B5110383C3421C38C184445E9C8BAC92
BAB41A9E9564B8BE323EA33BB61B961818A7591173ED6A02A7AE0044FAFBF778
53E38CA48FD7FDCA34E68EE6E472B537D2180E03F80A30D15445F8403D78A589
FA8E269240C35E1C59ADB6129ED034BCCE0857648275F4A4E32730A9FCA1037E
7C74369E6E50C6752275A1E6C81B998BF1EC111B8786759F68F9264D24E78676
D66FF12003C2D2431BB61A0F2E3CD6E98381614E31C5DC867E26578283562599
196C286533F631E560A3FA40B336DE442BAF18D24C007CA68E74F04208CCC44B
302F4A198877715B7E7C411AB7B0BD110721DC5B0FF5F0D840032F955F05EA74
BDD0E0D224BAEDCE29D0A9F2529DC397B203FEC93C2A55B8DA33F730AADFEC25
66502DD2FC75CE2F393119BDBD3391734CDCA677BAB49C9D6CA834143B32D80F
B006C9498D723A6E6518BD483CCDFF874A75714FD3EC8CA633AEC0600898F394
282B7081E3DB72F6D69BB5FD1A61F8F5ED000ECD99A2734D833AC75A7BD5F551
64828BD69EA8B44C20FE4F2C353A7B9375924ED5BDB3E8FB9F5F99F167710A92
A37583B5B70E5EED40C7750BB1A411B150311866285AFBE31C82AC4E1A8F7AC3
F865D745717346E150B53F2214FA061D3B77D40908C771A9569C7111FEA554D2
A2D0CE86E0EAE28A0F656B34A20203C54223FAC3739E6CF9F7EE66D9CC0C425F
15F15CDBBC9B5125C28856D372989CC6022D5C7AAE86D8EA9F1CA5A59B323B89
C6D9B299B42AD9DAED13A553380E763FCDE55497A47F585EC683DB51F4FC23E3
156AC32E6717CE9E62ABECD185132085096C79C90827377D29962E535C4110F7
9E03C885DEF635AE071BDEBE129973FE3E492016FA5C52E9920B3939DD770971
2ADA9CEAAA07D3BFCE05B6A2BD017FA8AB3942D6C0D389459F860F97BA62BABC
E86CF3127088FE3ADCC473B09D5CD6919ADF2E9932C4295E25982DE1DC5A7E43
3BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2E290A1702B10B0E40E16407433
FC9A216DC7AFCE1C59E9D853133786151FD06B447323A98E0481DB2B80339FD8
93820445881B900A6A289E954BF1E40330D665D8514C89CDA3C719DA2D9AFB16
D8A9B9AFD9BF390763C80AA175AFCAB68E295076C40F76B948F478C09ABE555B
A60C360904A44F1D1EC6A33C1236880DC34B468E4F3E17638B00884A463DC008
F0470EFFD7D7BE3EB773EEC15EB9CB4C32BF24D23A2C04A02598ADD1898A10D6
1824D760F2B86372EC36424D8A7581AB3841FB77D05D1547586057159EE81BF4
6E2F734076165B52537DDF27956B459526E5CD19579F3127D1D8CDB8997E1175
92912B64F0FDFB5648C9BC2C591869D4B1CEC64F1C0C61A3CA481CE5D74B8D57
712E5A885BAF7B2FD435DBE68071D0563B201D364E29610F51610B6C152A214B
85D77EA7DD6CE114837E29501C77CD0438DCD1E4BB773E269AD58FA9E2F5482D
B94A6618A8EB34D60A0ABD46A72802B012EA4E8C89559E1A647B93CBCA623393
3204D9E5E28D55B0AED10F2CE00EC61E35AE94E3EA0B970C375B0D580163FD36
6D2040E3835037819CE275C09772522BDEA308C2EF82419C63860BD3DFB78B71
52045664664CD38C48F02B39F48375A7D72BA71A5150DB05D124A02A2FD80697
DA7B5A12323956582CC2709B78DD0AA168B00F3C11B3E7663959E29EAF039A54
F549D34CFE43555F44A294306A3FBF4FE8E61EE21DE86EFBB4238A8EF12D6CEC
442AE39904AABAFB284234EFE6156AB505AAC08023D98071FAA10361F71EF051
B9D9822881C55F04234355B98DBB35FA3609136FA743734AB2AB97ABB7D37C56
4BC84CE6AC51C805AA7A828FA41030571813E767DD5C2D9CD81BF96329919CA0
B4BA67D4D111B7D427A702A5FB8079F48A82423FBEF85FF0EFA33CD31FA67908
0CE4579CC90B505F8B9701F9501BD996B8DD63A1E8AE4C6CBAF183EDB889D565
E9840970051E17DE65574D36367419374D933FC3EEC3A7D7F6A1C02A675FA50F
7624348EA82A51218D2CDDFA0D3F8FD630E42FAB2C7A43A54531F0A8DF5FE593
F746E855DC53B21432F2CC833AD6302C6A8B86F6E5A28793CC2865289A028B2B
4118A36AAC19DDA5141E79B42A1F9B87DDA3FE74D8F2928AB2757C34D60CE9D1
0B12C4928ACB38BDEA9630D094A868075FEAB4A7A2E597058C23D84C0F4A91AD
A43CA04F95D40C7F2A19FEAAF49289DE4F48608E37601856385CDE745C84EFCA
9A5715B7CD485D8315F6650FAA2C219E5CAB6B0B33BF674D9DFBCE3978A0DEB9
119BB0F695CBCE77E0B343AC8695850B70AD8574BE51548888340CD78E6CA582
90D557AFA6319F4C697F00D31D2717CE437AA9C35805441A03AD99788F23DBAE
9F0110E15E6FAE2219B3694433FB7335BE39B49EFBDDC280CEC413FF211D3ECA
15FB486DF4145BE31DCDEB7486D0AAA302EE79584B29DA28DE18506E73B4E394
1B0A22C7E577953666FD9E6ED56F7EFF077221505ED9914DFD89F1A60CB9684D
9530DDC73BF95445B7ECBD7A34F84AB586B7391127CA7F1B75795F8002B55189
4EE7027D3E56AA6B84412844A752B657CA5E687C7A5DB6557099D2FD8FC4B4A7
023A721520E4BC6425D6A65CB1CBCB0061B9FB2212C36D85D4F8705E1BB24C26
4466EA1D1E833D9B3DAD432B98DA39F401382D35EF25EED60A1D9B27AB7CD746
07090BF021F9A24FA489E0EFAB47CF3525570E78FC7F35016ADD405858D953E0
DBDCE114E4A0A0D5C57772D234649338B263C089CE1074CA842CEF6E1BB3D5D9
A85A491C954B60FFD7AC9F8EAB45FA7FA6036D7EAB0D895773952F4CFE652617
9A719C70C7DB82DFEA43ED71EB6AE7B7BBD96FC831D918E487E792948C4C33A5
0B5A934893FBD03B3B0D7A02326474BE51FA3A3C7C9A12310F97F1C033F2C796
C9A857EE7826B7CF1E612DBCC70A2AE2AF5198C41949043CD76FC46E18CB2C1A
F6B55383C03128984CBA31C0856584E7C04EDF743E0AB9410D916C7949EBDFBE
0DA8B9619E705BCD4292905DD3ACA4169021EE98A855432ADC0AB4ACD1204816
44C28821E5B1E2B4AEEE7CE81EFA14E50016CF16394B627F34E99B1710471D7A
A69FE08AE8E3CA7967F6E02B76C71D688AC50F2C678735216F80D75B36CEF1F2
343532D2F321F9CFEA2C3E3EC8D8DA47B267536DFAA05AF1063AC0785A8FC37C
C241F9AF000FC7F6828C2DEAB8BA763FFD04A50CCB036DAF84FBEE3D255B17EB
BC6A5516721E09C122E002C0EC088F8A716D8295A48FF4FF24125DBD73BFF6EE
85638C1A4135327C113BD848848000542B00E7787E12D065E91437698C82ABFC
812688C4803A4C87F46AFB1CD0B3B3F7129816304D6E297EF63F825A8C9564EC
8257076676FBC638F830426328CF13180FCF15287FE34DD16BB8AE498C7D5831
2B5451ECFCA7EB8C9FB14122606B568D2DAAAA8A072209EEDDC3986FFE25D9BE
A85E0FA7139DA9D0FD412974B1FFC634AE23940EB43D790D3E80AE0EA0AEE198
4C590DB7EE142C2D8726A004A31826653E500F71B61A28962C501FD7F480FECB
7489DBD42DC2A12028ECAFDB6CEAFCD1246009341FDA50EA0C33D256176782B9
0D7BE484BFA3D93364DF2A37E836CD1E17F9E052EF8FCBD13B129F1235E97B75
5E4E02F77721A9E29F41FC78136D61A9B5AAAC86FE1D6BA10A3CDA7A1E5726FC
ED59380E33416D105DBDFFEA47AA88871AAAC76AF9209DF0314DD9CC25DFBDD6
CE0B44841C58E8E054B9BC7419E45EC79C35F62A539E5B69070B528273A68527
8C5988DB37897B4B80EE209CC66F763542D242050EE1FD5980CEA370CA704DD1
8F8884A6D31FF9C6C4BD03E7D068BDA41DE6AF42F220B87F22913A4347A45223
5919452B5664E59F545E8653E95751A22DC1F207CAA1D795932D8420DFE775C4
064934FB530B35AD9155EF03D074AB57AF7E570E4EC81674B196E901B0EEDEC4
6E94C594D4966DF69F7AC2D450F67B0FFD567467979C6C8C1803BB4AFBF9D9FB
D38744296B82E399CE5CA9FACAA3AFFCC71DC7D899B5A9466F86F7E9CB58C972
E3A3DDEEFE9DC911508AE30297EAD23237F2917C156D6D573776092B16986154
1BD3DA59ADB49B70964B3A8AB43FA167B111DE9DE92DDAA8EC8FC416BB46AAF8
9578F5DDD6E9C8A3BF1C6D6F49B93F0C0126D69486578DCF9A1854A07D5D3C61
89D2527E3B1DF31CD64AD216884ECCC54079E287EA2AA92C9AE90AE2B9B2C27D
D7F3AFC0EA7EC72AF0E668A31C743E9B6F1508135E61B4808A76DC410E1B584C
B6EB91AB844B2480F47C711EBEDD5A4B991F7788094FAC57212A6531ACAFDADE
91A5DA186BD2B2111F581F0F8F4ED0C53A99D5BD15EB3BCD189A16483473ECFB
E52C8B5C28E12200A20959308CF2DBE453B0AE01C1DD097754E833D8617A2C89
EB8FC1E762472297D8B510DF906F113BF0B01BA156F866AEAFBB81C6D98DB86A
1F227184087095DFB96158C3CF51B21094489E0E9B21949A28BF9EB904FAC3FE
79E1A0A63B6CF47380478B53FA235A2C35D1F5C0152DADAD834A435E75BCA94D
27789CA7926F6385ED4FFDCC47019E5ADB05ACA298FBAD362573965B49700F5D
8B747583CE57C0C8EC7AE2D80EF7C7866BAA8A492ADBF4D3D40868AFE8EE3230
E4698EB092A5F9D478173C0FFE44DE0145D94E6642DD04CBDF41F65AC55CCFCD
3782A699B885EC5945D1B769E54B65A3427A048545A761892E4C696A2F382154
CA73F0039CED3843D32D98A4B5BCDFE0E4CAB5062BEC055AE3FF20271439A4A1
B30C75B663A18F7652C4F03561BA85F66C733A04E2E4C5FF9DF47F6B51834B58
CA4BFE9AB8EDCD0E6E170BFDCC028688CE62706E1731C3AD659AFDE8B7AD66FA
6C1858C29F5BCEF376B3E36C3FEBEF17BBDB2CE981D9CEE206D6E2EB96834DA9
6AB815F5B89506F0611717678BF3599C5D3FE52ED6371BE9F05481D1620F9FDB
2B00BF1AADCA7679B97DA96E420D0F3757C9E871F69B4EC965F20FD51B1030F6
CC9B504E1FFFCCA352431A0D5BFCFCFAD0E0684CFF5899A0884293BDEB690DC9
28A68EFFBD0C16BDDD02D67D3A8132670FC6F33F0EFF343B69F77A375A6E894F
B86B2C028864FE51362683301207BC5711AF76E8CD83BDB2CAFF3EEE454AB855
8EC865DEDF781D4A90D4B81F645AD8CBABFBB903B090ABC8D0222F3F3AB0978F
23DE804C125D97F7149F4C3F33DCAC5FED08DC518695E38646E417217FD59ECA
CC94B7272DC613F965E0296787F5581E8F42C1DDCEDAC02652AD32B78F7531B7
392C7763D93CD82F0E2D84159447E01A8B367877F8B7131209AA3C59061728EF
B3E1317CF247224ECF9FFD37BEA1EB668F9B6380CAE5E75DF3B8B749E7052BFF
9D02D3962D2BA7B2A56B2C172B4E14AD845BE9A914353F9B5246908D58FA7844
0BDE4C69A4A7173DE79A0DADBA7507764552F4D7C0250D658C633D68B6FAFE89
5787CE65AA3E61486AF3ED9EE1D3B4A47E26C446E0B8F2BECEC0A78286E6D211
546E24F0D8870B6957EA599F304384CB5E8A4D34A0A1B92BB98F32ADAE3D3D0D
60999FF81AD0F15522A5E4052ED21E50BBC80F93F95F2F4AFE08768C448D8038
24795F928AF04C833497F7C4B1B692D0495AB385AD2D0AC79E414BFC06055E06
FDB0DF2D5CD155CA55BFC2B589F65F787B2B565746C2E2A2F25461CDEA42100D
003043473B837D9581403DFB243F6CBE4C91B219A04619E7EE03B91C2721B62D
42CA8BB93B63EEB27568A1127C7FEF50B56093A0788C88E5737BF216A5B36C38
5AE8353DBACE48A4D675E8B4477840279E73B50ED6CE7F33F779D6E853662087
156A7E0AB6F41E528051CCDBED6E9D3D36FF496E9BF5D4B83A4A566D016AA1F5
E0D12A61E6750B2A6B336A50A58347C1641415EEE9EA10B3EB59A3DA35FAE9DC
24349F29614784C3339DBF4C4D4D952741D70CA5E3B3211E20F739789086EA4B
E455FC5FFFA51902770BA127BD4B9E4F5EC52314B25837FD118062685C03C2A2
D5F9F6C5D3CD3A1E7E4AB8D22107B371CE5D877678863DBAACFDE460906281D5
BA5ACCD188EDB2924B6698477272F3571958BB8A5A5588FED7F69020B679B980
81D067D7A65C52482D6E2C5740794958D0D12B5671E6CF408214A4AA87D2D24B
95D35C381AA7D2DDD0EF9186DEA18A90251F8BE10CC00A480EB1FB57CB36234C
98AB6637704C683E6C590BF2EF885BE65A9F57662C7D42C65C7D9F22D4339472
87EB0A301D916686D396EC0976ADE247B6F69AABE2F964CBA4B12F444F272E10
D2D01D7F757D5672565EBC80E39F2E9DB8EE622695BDC4004A3E710C3C5E2F77
ACE97B0234CD87AE16D8D7E1E3AE0D48B5863E62A6B91B71438494E0216040BB
29A9560D00E4F7EDFD6BD4F773C2E94835E7008321108836F48A5D72ED3AC881
64A61208DA86EC7FAE84BF7DC5305054EB497DCC9BECFD61515E763C21E372B4
1D4ACB1A3DF98C47327A49AAB86358287C3842551319EC75577D484B3AF7B1F1
29E5AC841CE3C46D2F1F61DDCAF0E017BF9811FDBCF02D868A8D1A52F21E417F
4D7695440653FA9D4AC7A752D9990A88F87B3C1CC5F8EE61FF07D41644ABC724
D0440CD7D86D86E260C9A1B0F04D6E50C5C9A588C1F1CDEAF6FE7DB11DF8FB7E
4972EF4477EEB0AA922CD12E579030D109BBE76715317BBAB77B2E431719DB37
0118E421AD66D3AA70F3B8C8C67320494E2AB777F568F7EA8A5B2EFB1C03DED2
00C24D0F7C9AC149D4D2DFA0D1C607BB24CD54FA20844B37D581CEE499BF4794
FA3293FD632ACBE53AE3389AD9A6C7B6C566E536F08022557346F219C7988DB6
2ACBAEC6D407B1DC268AE011EAB307B1235B67F1639024A372A8CDCE7B1FD370
F117EC193B58AF18E93FB17806CF7AFA17B6441812A075A0CDFBC2AF1F3B580B
2A4725D8D7650E261A44BEF4F555ECA197E89E0C1A823EDC380C6F43035DC9CC
40BA7B188F3B79600E3469225377EE632C698CED877F78EEA7F6AF20ECD1EE55
023970A2F912796A9711E6375D8E7B816F7E0E468F8C555EE485919BB89A58BF
9B2663F23D27749DEB1C0B2386C45E05C6FD2220E70E434C3AE6FCECD2467550
9BDCACC4B995A0277D7908756A3369BF86B2C998AF85DB5EBCE675FD54311CB1
4681571757EE25D1260B7A39E0F87E7AD5FCF013B3EA4C39D7A98D16B55AA101
037918C9F3EB2CE43BCE3F328415B220628AC8376F4CCA7B685CB9BBF81852B9
63EFAB6E7D51D61CBDF731459CF0FB211BB5FB1EB3C5146DB2C607FAA760FEE3
DA469470FF3FFEC14B0B36218E141D33D179902D7905737458478AFC65CC1C80
6F4BE0F7D6F3C61DAC5DD62951C8F1EA65189EB9BFEABF5DDD1C04114762826C
ACC6681A6D7C5F74718AEB8C3A4E6842737EB5639AB93686DAD940977F889D24
B63342ACC4F8B1F8FB7CD2E1581A573321F84133C40CC69FC6B6FB3E98832061
9E3A1C5FCA7BFFDFB68A41EED9D66D4B4510735A44F6756D5CA54A8845322291
7B00121EC1B3422A6F6CAA66686A89E3C4C1E4BB04C4F0DECE01632A1A1E5F67
25B996D1CCB5FCC3FB4567EC37D0740605CCC91AEBEA89F2FC9A73B433B74131
B54AE3AE0DE4B0F7E2239BFC6A2BCA46E55A949ADE888AE4DEBC30A2E16BC29A
D095E0BD9530D5E6413082B371BD1E60A621C691029E1579A62B5E34FD36847B
FD236E89CA8103F7C5335516BA76F8502E95A058D5AD4BD215A5CB468B828B35
F5D6FBA5110C7B45DF426CD5A804E02B1258C7562E2436BC528F71A680A4B023
BFC94B5FD15CB15FF5F635481A1482B630E4B8225210FE4536E06974D0DED63E
DB6637498CF6D23B14B9E6442D1CFAA0D02F2B898B7AF3618D064BF5A955F7C0
6C23279FC54B2FBF1D5F1AC4B788D059B2A65105917D03111EBBBE597C4DABEB
8432B59D452B8129B7AA5CE4657A28C6EF3D5BFD3CA1A6D2E74A1499D0E5085D
A46C33F3141A87FF340911E7F0474835F68A3397F7A832E841920483C7C02A30
51ABDD90859F3DE0E6ACECFB2405F8B449C92FE90B7008D22882C789163054E7
CC00FEEB8227F292389D5B2AB2F29ECB5F90117A11542A077B7C42C42BB9677B
299175E31A8CDA78D8E1C0F99DA57457A689E34C8CA29576BCB7EB989213D8E0
FC90B21922BC40DE6DCCC4380AFCBDBD61F886966601C53826AE17074880519D
E36B7F9D9769D50E005B6FCE3025B3EFDB022012F922BF2B7BF99B69D3576D66
21F0D6D0311BF204A6ADC404557E3FCEBF2730D812FD2101D1E9CFA6ED5DA98B
532296FDA1DBEC1F232208B4C3D1573A884EDEAF39390BBF6171E1B2DAA3DCFA
1023BF64F49208097CA052E9E08F57F1FD732851B97FC89E1E811E3699148215
5ED5A28874D9AA28F8873580F7F3EEAA9FA8DDE73B2661BF726A34B45B68B16D
FF6A75BD7266343A8655100C9577EB645D1C4FEE8138721A38026DF2BA071F56
4715FFFA9DE80F7E64481B4479C73ADF87A5524F04C8A90B658A61B7F4EA4493
D2CAB07DE763C49BAC9E991391BFE11940EFF64F67338A71114500D2E2FC7D7E
10BADCB17BEC10F52F8D4799275A4096DA2B1270EC7B3278A0CA57DA179159D3
70CBF9C7EE514854F2E1B70BE8DE769FD2258346E196AD5685770B38C1DCAF82
8AE8BCA149C7E2628BB6FA5DA1DDBEB2EE4C86450B048256C1F5C20A9D6E207D
A44FC7AC9E6134C68AC479EEEBB609E8C7C5AB5FB566F57018D82B15A9C80C55
0CDEC09BDF5CBB8E00DB2EAF78A3991DB149BFD0BB757BD77A9F0CDAA0645B2F
B1C9EA82410DE8A86179A98C7D0F7A3B2FCDDDA5161E254089F3DA1EBFE1D763
FBD5577BE597DD9BBA92406FC93EAFEF5AE01806D0378A5797EBEF90A6E370F6
3B101AA9BA6EA718651921CA3FFDC7E28C9464A0A0B6A677326B8EC620B47B51
A8554F23A623FC9934C39BC589990656D0ECA75DFC764023564E8FF99754C3B3
AED4D3DFD03392F7FF3652F079A5DE65EB838006E47B655AD34292879DFB035E
F8BA7560EFAD429E580305CC0A30FA083F2C0EAEADC517E4217484BB975578CD
B9561D207553B790C815B7A0FBC152B9BE768420D36B3293412B827C6B8E6B2A
EC3E55B02B56F1D02DF98F343A695D7C31EE4C4D00E171BCED9DAA08FC517511
04BB9650096E0B8711A64CFDB16577354F3CBF5F76CAE114487B174BEFB07809
4A1288642BB9FF2A0C4A30CC1A5ED05A88E19BE18B1D041F2B52CBB1B1388DCE
BDF67CCDB98B5E5ED6E209C9A466F86552A7C3881A4FAA2A9D5FAA59040E76B5
761560ECBB36D29BCE4520904EBC26CEEF8027AA9A12FD69F3339F5F430360AF
EEDBB99B28AF5FB4DC1757EAD36A06430D3E4BBA5C6DDAC94750B607C6FABF90
07CD86D2AA045ED8F5B22144D82C90F5D0F6E03471AD80915AD23EC75C7511B9
56691BA9E1F38573CF9AEAC2702369DFC8CD27783C6CE8F4217C2A536AA27D76
E1718C632C3971F552867AA386060985CEC6E0C5E346F3FEE824B277DEB9489E
1A2312DA7F2B295D688BB8EFAC28B453E93115E5F582102CA583FE4EA927649E
A5142401F0965BC832A88431446C7347F4575C3C2C93CED40BC155DE99465E84
EC54E446A63F394C327C49FBA06065AB22476B183D1FBC65FD1677647261CD2D
EB8D7C227DA5F01DFF5A9B7A6EBEBA19E30990A5304ED6338E50CB2D94C54B13
FF590C99516AA198579C868C127E66F758EFC4EBF5BFA14C2202D504EE97A8E7
722EAD2F582884F920C7A8A7F56E2BBE74E1F81F8DC0923F3CDDDDAE91CBFAD7
6D9B7B7E844F176D8D1C68584A39AEFD785D69C83EBEB2B5403872E15A574DE4
5CCD54302FC03FD5276C6CD7F3B16D23257DECF0974678EA5829EC29DBB55842
D44C4D6C7FC55BD529D9E7C7EBD598AA1001B66615CC18E10CAFB985B78B6479
035DA7CCE3FB35E8D749527468A9A8F373D160DD28034D6CB6733316EDE9DE7E
2CDA94DF2AC0F9AE7A0DBC6620917821E5B62509974B99C3A0363AA5CAE125EF
0F3B74E35560D169F7FD754ADCB4B3957E1B8A795D720A30B7DE482DFDB8ADE9
4B4CD2FAD54DB2F0EE08F7E1856530F146501033CACC029AA02B6836AC76C0AB
A46EDD524CB3345923CA213D6A319B18E7CF73A0BE841A1F04D5E7204D4D4658
354443F1E68D36537DE1DCBCA560579F6436C9BF6D01A127A822C7E4B034607A
7C3A8F0FC917DEBB0F7B7C3FE9D51D99ED07BE959DE614AC870A28CE0231142B
BF29342016D1C381E121DCC861C5FA13650E0D9511689687A7481F8EB31A0934
185A184FF8283F71E52FD2D752C1B0F86BDE60D7439D108BC961146FB6D3D484
C0C15E522D39F9EF7A188135B3D6CE0F2CC7E8FB8544172C7E4C0602D13D6EB7
D28AAA4737E0F191A911E045A26989E420C1F0A60C2B9AB65997EBD308E2F0C6
0D78654387B2B744672530620E26EF5218F11FF20668A8CCCC9DB2CFEF3DE118
022C10F9442759B6A01A080C4F5FEAFC826F2C529DA22A5A9F0AF66B44344F1D
F681219626C8FA72D2A0EC76D9F6DDAD37B351D51DEA73E6566CDF4CCA1A4C5E
7D6E2EDCE42912D03328369F37BFA6A2708C4E4C73DF465C27AE3A558D36A8DC
A52875B5E59A5E469F19F448337E748995A74E9D3DE60DE90966B9A2828A0E6B
2A055394192D922641ADBEDE3875523CDFFF0F3EBB950880EF29384A5AAB483A
5B9E87B17D39B03D2D1536A37FB0E5E81D3AC401C2546E53D9D3DF896FB2B71C
A9D705E61977C2F8EB810574F71D1EEC0AFD83A8D8859F7D725846606A8D52B8
4515E85BC8750AD386645652112316750CF10C2510688D9DCA5C19DACFC81E5E
9F5BE20673B573CA453340C9E6BF826014AB76265A008429E3B3681AA3031BEA
F016845F0AB0AD49789380E1912DD887F1337F6F9E6717A6A3E963DA323C2CAB
899E06BE898E77A290AD986DAC332DBC5C50C97EA2389E7B1F003A4D5A6099CF
D9D3067125834CD5689A997413FBC5C8294E49F4B99BEBB664F65CBB75B7341F
06D8E3F140F59155E430807E16948428F3ACB1D67294C1BC62AC8EFB39A3C54B
643FCE22655CE94E0768F4E91C7427973FD0CFD23B1E1537ED3A3FF8E013B16B
932525E99F89904F7D5F282602FD48EBE51B6E0B10EEBE23B5D3EAC1B0024E13
C0CCB25453BEF413BD355CD844D0F88C47B267EAFA1585B4ABAAA80DBB031F76
26389BD3E392CFB2EEDE173452C0642747AEC2F3C71669F4C261E06BA9CD09E8
A071EAE1B8944D7FBBC92DD26021738105BCED3E94CECEB2E6E552D1F0018C8B
767D8AA14EC60598548762C14482191756BB8F5BB255F78EC2B94DD3F90D5971
00C54656DC80A7FDA83787D170A9C9634F4D8720A5552B5A3F17430C320B0800
8A767D7AB50B2BB294132270228229EEA3F8D830084A746FF82303C2CC1B26C7
8B74DA6A52A4DE356AEE03801F79F1990BD3858B8FDF4445719EF487B22532E8
9097D3EA8343FE913EA90B9ADC7D025C2B8EA3689D75AF3E5DCF610D4AFB61CF
85D718D772F812C6DE3091F3A53069E8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE1
9ECA65AB821224409FDD3819C98C395DD7C3AD05DC5ED1B38EAA5811BA34BC05
2F103C01C27935E0257A091F32EFCCF3FFBF332D5EB49BE21977146C8872ECAD
4D82A933ACFA82D83626E0D8D0C105CB6FC5F610237BB3C6E242EFE1C6BF21D7
0A72AA4B05B19BC6EA6705003370A63CB21C4C2E920B0B254F0B2DBC4988686B
65B808CFCC21F27658CEBE40A55B3DA6DDBDD8E8C6011903736F02F04B7EF4E8
4F05543BAF5C0E25FBBA5BD84489379218C0E12005F69B44488D58DBD6987FAA
54DBD4356865673BE3B24A430BFFA26066C7CD27258773D747DED2B68D2275E1
B47D72AFDF3784DC26B85BDDEE6500EE00260B500C6D13C8EEF3FDDC2F0CA8FC
F6EE949706DB2BCB933A074B2D82282442E180E4B2307039EA9C33A65C29401B
7EBDF030486E839F4947FA0ABD59BE55F9EF7628F546E9B7F800FAB8C7515C38
8368F9DBA8FB94E609752C2266380C972B0EE271BC8E15DB42F5EBF35A2AE069
A70CF6A274ECDC73B19566AB3268142031B875CE928DADADA3AD10FF770C9A08
1692BBA93872408DFCC7E67C9465B19904622EAFC47796B94176576F807917C5
B83A1321B2FCB9A96154DDFE68307E69CA6EE280D154E0955DF119301788884D
5B37EDC8DEF2EACD9C3985BA9ACAC69EE68347A9986794B83227FD4117B27984
A141A4B19E695AB1E8DB6077A009A078C7ECB146F7D048955B1E11897BE7E7AF
2573482AFDDA9F1D252FCF3DCCDCB3A7254137BAFE8D13E8E4467605FB8B7A51
C0C5A75887CFAECFC97E6773A64830070BBDA303CBF8030312588A121CFF4664
5F0D700BE85D676051908E55A864FB37E8F7085B4B407C6755E2595D792A2E70
83D6BCCE1F8424FF4B51CC64ED97D5ECC4D74F0D17A94A65D60ED44291FB3C96
806A1D450F72A34D371FEC0B5BA153FE6ED1D8AEB4B2BF344A3FF0A4FCB3B2F2
4AD76C8F1E9412E42FB01F5D430B5ECC8FF0FFF44031806D682ED703C9BE48A9
9BE1B48619F12AA7F0BE1176B2ACF88394902035606FE60121085CB516461694
E8E82A7D1BA45ADF93556FA7685C62C905B799EA37FA454ECC45F776BC2CF342
27E324E6DD8103A4F7F33A0BC6B8412ABDC95F0615C5BC434B89AEABCA84E043
EF7C2E647EBEC78A5EEF6FDE48C4124C03EC8285EE884D61EB82AC6B0A5F7A74
B58BBBDED305C2A4CAD064E43E50E82ABB34B4DC67C886D47B49A1F3D640CC00
3BEB030420755597588A0D05AD493E6BAB30ED3DFBD524BDBF163D3719DE4EC6
73348C51299E860EBF0920C53CBD9E2609787023B59F53FC50BAC5CF57713459
E8F30B249362BF1999B6EB81DCFCDA69E68F2A60A8438D0432C24BC2D66EDD81
132E44128EE1BE623EDD5DAF5A24296E3BBCB4231674EECE12A1E10E7805DCF4
38CCD6379615ACDAAF2CF94A6DFE0713DB9B8CBDC0D146C60D9C4F06B6C2B0FA
EF474C709515D6A6557ED09C2D3693FEC73588593FD61E5A0DC97EA2E4AA2D6C
07BC2977001E5A11469E6953D87210584A891361BC4FFF499F268D0C2ED33B20
0AE21D0404DCF32BCB28A7373F882021F5EF29DBB55842D44C4D6C7FC55BD529
D9E7C7EBD59BC6BE29EC531D24870365A38AA8C5EEDD3B474825105845EE1FF2
95C9CD39D97DF78A991A8AA43640ABAF6B76B0911AD58FE29E46A3635D2AE339
0593FC7EF25EE5C587393812DA577F2F42423A83972F2F36ABC8703D5AE86958
C175485B80A6C5183D4525B3629229E9C332C74ECC80D0E914A8193C18E7F401
C44816311719E11D1FCB91AEBB009B09A4C293ECEB28980BBE80093D74FC73C7
7CD5E4F51FECC9351B42923E388B70E7C41B77DAE3DB64DDD8F4EDF3C8D421F5
34BA4ED408A9E655FE17716B16902F17A615B1FD4252DB7D7139592E2A6D585C
ED428344B8B7D33B55839F745424D22BA34F1BA11FC742A221E6D55C8CC56585
31DF6FE3FF0E539F1DD25B1C9752B60D7B9262A007D77BFB4DE948835029FD78
E23E35AC4668A66C2C3B5E16FDACB9A7F68828EFA0F74BA87F721D6C3B0AB144
2AFF5FA6C191F7A83C324AF0629A269967FF1DD6435FC6A7C2B91B672FA23D9F
875C001E76EC96341CE32CC028F2A47AB4A1E76ED13016063B99D7C5B2221E8C
284C56D4AAD2A6C42C88E72D325960805A5B2948B44203D3F178B531BA451731
C3CBEBBADC4C7369E2EC78B63B17C3477F2D7F9C5FC4DE58DBD2DFDCFC80DFF2
CC1A208F6B8FBFD4B934D3C3358D7205120DE24FCB6708F22014A1824A8455D5
CAC7BB61D87551DAB75CDE43AAE2E7364134CBF42718BFC37FC05047CDA3DF68
BFE6F7C88A335B5A768FE14AA8B54E5A37E8D485E103F25E1F42FFABDB987BF1
8C3B38C20FF0FD8DFBE38672FC59BF449E67A44F0AEA2A22AA7C602BE0C1B27C
505F629E247C359B5FF8E5768BCBD4A5C0931F77CEB616EFF5F6C99552306526
AF1980EDF91E8CA78AFA194D4BE46D007753445B322C7D3AF68FCF93A5435EBE
29E36A29B707A51A697A4D8A360D401719C5FDD6EBB96D36EAE84C047D636122
100FCFB4BA3ED1AA95C728D188339A7CFC900B41FB02F13722D4D754B382C82E
EC7AB2EE5DAF403311F039C6218F4D2882FA95447F87D7D5C9EA1C7182323919
34FA35C825C0FCD9F2CCD28DEA936F774C96204A513E6366951F097DB74D745D
F4F8C07E761EC472AEF355000CA370FA7F5E34137CCCEA62505577CFA52B22A9
41B3A6E2A2FC1BFF764DE0045F252413DFEFECDF6B1C287FA48581CF4FB723E2
238AB55AAD50C93306F4A89AC8E95965A3C79C82898315CEE46EAAD1B95FD18E
974B39A53B5DCDCFD9FB21A2F8D90C40F649CB712FE0BF7EC9416F02C2C31169
26FBA26021B618E1C0DEDD8853FCBC487EFBC6E44E94FCB695336395435ECE3D
945BD10948FB7AEFC445A9F9EC23BC6362FAA396A5608521A2D5EA74C1653D05
B97B0A6A483AC66C15BAAADB1AF5BF8944F8B5F83024E9A3C46A36C5376A7CF4
1DF57CA756696028ABF6A9EE701BFFAF06638DF7E3599F62B09136225FD6FB3C
4855E1BBD66951029493FC4D72AF761ABB314DE78741D9B4E342B8B648319271
7DB18D54B5467E2153EEAD032FA9DEA36EB851554C2BBBE13C7E696CC2ADB998
517638FA55D1321FA8EA37FFA0411A1F599253A7975E2279DE36333F15A3DB84
AED5A072F7572E02D7CB1AE3B9C23517DFCEC8933F3D10FA8B94B5355C9B4760
C6911524BAA384DEE5BC875DF7F7083DFD7E1DE1F62A686F2EBBE7E70526E21D
8A8F60B01B3C4343BC0E790D0BABB6EFA7BE7B65D50852D9648573FF81D93E8E
947EA97ABC29F214DACE016B5EC2988212A081EBB5977ABEE045E6421646F45E
A63BA74E077A2E1D60955D1F8FD6703C33F3132A773A1A4DDBE43DFC3C6C5837
DE20283C2C2589E7F9CD28FB00639ADD71EF052685A11DF9E9251C055443212A
B879F85A065CD2B91D1774D0C6B03BE1FB31742BC5C04C5372659625AAAE697F
4C5F5090C53F57FB9924E13168343E63A5EC7EA2FC7372802A725C4A756AEF19
E9804A3E491550FFC47FCADB56DDC0B29A481C137608EF64D6F9BC721128A648
83FE4B6653428959711A9F3C4261390102AC5C5DC1CC2CA6A2774F6402A659F5
C5BB6D947DD67450D210629E638A130AB91C5B43BB823D4B5F685E2E3D4E072E
88A35D7B8F4F0FD89AF9196AC2956DDD6E6948B4018DE2BC875C5EB7D4AFB334
EE8AA4E91FEA2737BCB71007891968FCD0637A03F3FDD373908A79F2E3B2E627
C3A456EB717848E916189A7259A06B6E3C444C035A1D7EB385A2222275102ECA
DD8266999966B09C46EE64DD48764C51594029C88B05BCE400E9F96CC34E7E89
2D697586427008A1CF8EE6943879C94B3D7DEC3252B3FD08D95F9EB0F838DA47
6EF542C8A98131514886893963B1935A27F85EC9F910A75A1ABE138097859472
4B6AFCE9BF9BB0E22742F5D69928989687911E028D44246DA197F173EE358BF2
F0C45FA54C1164551DD3BA8983EDB69F9B18AA39094960DF6BAA831BFB78AA00
985EE468665672CB0D0497F181FA3C9306830971332F3A3E7ABBC02FED3473EA
801F8D46775A616E24785E09A68EA56DD3CD82BC166DA5702AAB452727578CCE
71F977B2A7E71ABAC284E2A86C2EE3C06C63BE5BFA4E4F79D072BBF174A96F41
8513D6E30D00B1141AEFE7438B1F0899F70231A5B33A14A94E3885B6C56FFF26
6FE1A6415DDC0D361A5F46743878D55AFA165863989511679C133AE390C658EB
B27F2A858E099911378028D33FCDC35BEAE364966152D794341147813A7BA336
821711979AB94124D64373931D8F9AE2267F0A96B0F779027FB26FCE927A0203
79CB994D8CB0CEA721EE3D83AB74F61D210AF5C0D081E72156AEBAABAD49C6A3
6E347C4FD6D8F80A78BA094F15BAC1B5A1C8BE2381A39335352264BB40FA7F49
FC63796A2454916D902C290503EEC7FD18A574E0941AA71E8CFDDEE0F9EEC9DB
7C88C1FC042C69809CA4148BEBD4CCDCF471B95DC5761DA16E5F8F2AD2BDE395
6182A299012EF8076F97984780E073E6C9152BB6CD26186F21FBD6C38CF18F40
F675ED1FC218315B8ED55296C250A40F9EF2A537AADE5FFB4638A55024BCADAA
6A467525C5B52810F55BE67563D62B7DED3A1BA24468F19D3B62AB6FB62EF9AF
3C94A3B9DB6DD7E825E17E9A0B7F6AF2B1B06919EC32214737C71B949BDF8F67
C3946C4099D1340DB9CA45BC45E96AF5B1027CE0F9D31FDE6EFA9835899A4EFD
AF4BAB2A1F0EA6457F2EC416F16E2596C568C757C8395BE1D35C4D543E0A819C
118682D2A0D6F4BE779F463CC67D0FF085A0F068CA1D492A61F700EF561606F8
0F7E3AD05D6A61B9B594D8AD24A2223F4D2BE78A6B26B9322EA0E9C4B76F1829
C12A794394A7F44FF964C49B565F223A318263928A1AF11DB15A2B8529DADE9F
1D3EA731816F4B6BC5F275B5900FC86196B893A87F02FEC27A1A81BDC9D24C8A
3906733A92966C948DDFC2E8B382C304DB1ADD31E3D650E846D2AF37C96E810A
B8D41D661554EE8BBE3D93EEBAAB2D4816641776DC713488D9B813A855EABB01
5BBE5130AB3091BBA02889A711D1EBDA578BC9712153FC2C64B648043ADECC5D
29799F7A34B610AF5C1EC0BA05115114904EC65578B1D5C69AE7F81585AE554A
A5A607FE1C727D8820F92485AD834FA05C2ECB2433F710AEC3E540D93990C536
4447AD4B69BE9AE06CD5A7ED16B16EB2C2C3DBE984D69D3FB50C494F9F96F7E3
CEBD06EA3F5523D8E67699A47EAA111C2F78DC5CEF26F1DEC750E40A313872E9
4503B4E009BCA30AD2AF4DC8892F1AAA7E3F11E4871350786731A99A523A9C56
0C53F4EC105EBF89AE99528AA0594F79D481CE15A816D164E496AB8652E4D7CB
EDD8B5CD37449AE227A459453D55D76AD7861B671D032391233F86CC96DB1135
F127A058210F9C801716E87DD382D32B274B7FE37B2A18A5F9508673280A53F9
1A18B9E02C1586D7C77F696D917CD779130FEE0751FE547E2D4B9197D851A518
2D444488EFA84CD7C9B6781D6F590427A6B0D84511B84C4CEE81D8E49F3B3C03
A5772A54C010760C39AA1E2063550B10B819A5C1A61C5B26E391DBF8FB7943F1
665A3BC4FC724CB335698AFBCAEC88D45569C5E454454FE7AFA29CDDEF3ECBA7
1D64E2651E5218B8BD4BEE76732DEF65DE6AE8D7A933ACD19E72E0213228941C
54ABE078A962BE1F3388E9720CE1A7D9044470404B40BECAE52EFF6C8546BF7D
60CBDA1565CCE68DCE1D82E73C1765F4ECF9A66B24E5BDB8D41075BEB82D4F76
9D23FAD72513C87AC98AE37A67F523DDF5B21936AFF8DD3DDFC445648FDB2D25
444B8D4CDE0DD7F1A6302647BCB195F1C172F7F592E7304376CFA6FFB5B0B6E4
DF65023D9A51F56066F4414B1256E687945D1EEEA55AD1EA895911BB87943349
B8764C87A2373EA1999EBB628F58553CFCCB0365E83B5E93283F286B7D319404
BFBF9B2315981BBC35D1A0BED677B3421ACAC8B31DF0AA708C2C7E0086B905BA
EDBE13EA80547ED30A2D563F47FC3E3135580364666390CB8D2CCB16CFA62E5C
7A3DDB389CF92E621C804116C018DB07E9389AECCEE733A2DF4D9364CFA17D16
ADB9CFCE5EDC846A84DCF539335F3F8B3130C5C36BB2496D6DD6F0552F68C2A0
710B32B4956940251FE2C046FC04C7B92D2A258F023C1E0DED5AAC3EA7C37250
A01678C974D8463AB13F2504FA9D857C670C3E7C1D07B7563084A0C6E401A5D7
3968BECBDF394AB977B21FCE0F33AB3988E8CE58F8907CBAA6AFBABB02D5C6EE
B808560708C867077294EF88456D4EBFB7BD7FF3BB90D431B76F068F10168404
457E45D5F209193E873A326817C0DD18E731BDD5567E99C56FFFD7E35033E6A1
DBD0463EF1BAACDE083CEC65A89A18D1940E00F97342F22789D6D22F4D57B9F1
399D9D84242E8394A29215D8172A8CF69950AAFF24709D5BA6AEEF754AAC9F31
40408A5C88DA8147804BF2894B196F05CF15044AB5BFA2DAC106BC377C5A1DA8
A4B404C43A87080E37D16EA47B5405DAC825DBD5A5F41901DB15B3D1F0A1AAC0
7CD962E249FC2F1392F75951DB81DA3955E6765070194C09EAE69D97A9AD963E
A6341459BB3BD8E8BD8C42115FDBB70304DDCCE14CCE6E00ACE162733FA5581C
CA6FBC94E013F1166D808522C05061164EB373A4BE4178F18207FC9B151AF7B9
FCE4416000330893899C2548B1FEA6C43B192A082A2FC163E2EBF161CF1C70F1
351B015645F88426334210DFD67ABAB5D7B89C975049B1AC62D9BD5733DC4DAE
163B23B703AF75A56DE86E78FD97ECBBCADB6F645DBD3A80A76EBAAA50A54F91
F4A6E78ADF2DDF30BC3C4AFDA2409990E9904EA9F96C9D3D8C3D4A825FEBC0F7
CC37D0DADB2DCEB47749EA63F95EB23ACAF415F64C49BC675291E1322CBA7903
0B878D60FAB7E1554EDBBED4ABAE4CE0A8059FADCBA3928FA2A1E2D04D9E17B1
8A3CD5F9EC484671FF2FA8ED69FDDD373C657C8A2273D613FC2A53886C3DA916
D996F9C0AC5DD7D19DBE2F9EFA5FB16FFB04E074C7BF37BAD72ECE61CCB25742
8DFA8108BB1C9CFF9EB393E32D9D7E05550C88B6B16B9CF1707B04DDBFE5FF8B
F5BB1AA88042EDC0AD4ECD6E4D89ED6BEE33C88480EBBDFF5E9D9007889907B2
3F00D4F605CBD69EF7C442BB3A416A6C4AB3F1343A908D597FD9B007147A7870
5364DF42E4C1BDD3AD4FEB73DD7E0D3993749BE398A0799495DC99E1673BCC5B
4B70443D8442860987D8319430D35F22D4017F4A9AA6C10CCAABD836D20A1491
F78D5A18D19E86F325BBB3785BF6796F3F3BD9E3D94DB929606AF43384BC66C3
EB0FD9B18B1822D456C278430A978021F720B267E64304B3BD73F6BE22FDF73B
CA49EFD9A03C70C4AA37F524F695E2EEC888A375FE74078BC869878805D651C7
9EA016FBD254FE803534BA0326A0E4B0F83BF692CE163E9B41F12C230C61361A
562D960FB5C21F7024BAD52A16956513D86B83F4F99B4C929A5C96BFB6143439
698316149F87F4411F6DE4FE0BE4E3852510C0C0D7F49958907FF2F7F9146167
535A1DD17C935FB9A0E3B2D4D644BF03C6D46DFFF3F483505B419D0AB117572C
8A923AF7AA83AE4F0F54FD24293C82E3D51570EF5B55D433637E4653702C11EE
65FB01A4749FF40DABB84D7087D8356B3B433A728FE45AAB7E1D04E742100485
BE65A071D8B4F0EEEEE7BF9A6D3AADE7CEA2C159CBD89499D41A54352095F6A9
EE119D91C11E8855DF727C2CBE99CAEE03D682FF6AE7270842F682C07D3DF574
C678DCF9088BF73EB1D35AF8145825D10C978158B223D0C27C45E265014F298B
F298CE66E65983EA9ED72FEEDAF0617448DD2A3A20C2FCED339016C25BC0E989
4487121B55F121DB16AD5B8A244EB2BEB04B85F440377E51560CDF07505A9C74
D730A21E2118831B1B80F035558ECA363849BB1815E26D1A21DB34C6F50170F3
6910A2586B18F608E394993F5D3612856A973387111B9C0AF82BC187F7C56295
04C90E35BE1899FF574105C3442D2C6487649FC7336B67577592C2788D64E16F
13F0D72C82860D19399D57F82B0DC22D42425E21C70A505C4CB2D6F495AEA05A
26B949562C27D920F986722F836B73176737B8F9C753D0785D7F877FE1529AAA
A016B570350F19EA9400D85C1C4075DD6DF6B14418F6763DB29E43B3D630C3CF
6ABFD1BA460EAC9298996B4E57E4561AADF4CC7CED243A0E1194CF6B1B2C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D5051181
315AEF884EABB76C5B134E7E0185E7D59A2DA456CEDC82C054F197229990E895
ABB45C025940C558D4C98C6764B00D6917766CABAAEE890025CF7C0B1A6BD5BF
1F8E62D380C7849CDF06492BEC78C972A98026CDDF2A30625A96D549BC5441D7
447FA16D4EE9D8C8E841269B1D361F0D9EA02154A8F563979FA89334075CB13E
CAFA59D893763EBCE2B810B880C9135064B104573E9606ABA81A5F36CC8C1A96
A16F057568420A735A17630589E37624FBE48F378107E6EA880A578654ACA1F7
80307168F5F61A1BE8D00DA9D4DC314723B7A2960FE961F23AAB485260F1FAB5
D7EB7B5BC72B8D783E03E76AF474F73A6ADA241621C368BA9CCFE1E68464873A
5914E66617D23AF3A4A972B07B5E6DA345F29CD2561EEF398658783FAA758D30
BB16F55AABDC8377A9F37112DCFE34DC3BC7889625773C7E53224FFFCEE27D32
9A62F6D03DEB59AEFE38551259A8CB31CF7C554C013617581ED034C304360FCB
2040E7C672920455151F81E76A0A95A558E056DFF187989EA1554A4608FE9446
5849B7FA0B5CE164777E439F98CB68C43D7561C8C3974A27AEBB8E50DD091B91
7FFB06EF9CA11F2B83B1A01E3FBAA321D869F1CCD34F56387A78B42685D9AE18
4801CC10F5A1E58E8097DE61046499135FAF474A25E2CA705906A6E15CB57F34
1B05C9D8A5E002854FD16417A7461A508B17DACB587D2C489DDF4EA5F644DBD7
ED1CD223F5F35BA3609BEF46966F9D76990019363CF8E32F286D48D6166E317E
F1297C3BA5E075FCB5F05A12EA2E30F1BE91DCBE42C0D814EAFBE88F1F99445B
49849681DDEC62792828FFF60407BC2A0D2B07C9EED014D89AB4CB82245B574C
006312B0F8FC10B66615CC18BFA5486EDE7284B2871960D316A48AC87E1F9887
01ADD7AA3ED43BF28647D31AAAC8455E617FEB0602B482C0B2BACAFBCC1DDEA0
E7B467FC1D8606ED27EBA786A6267DD8A194A076D5414BFD725E486BBE696AA6
732DBA9D7180CFEA2E4A4C69E45EA1BFEDFBEE2A8C2BF11950654B8BCD2CEE8F
016B5F91CD7BD3C3FDDF87640C0EF718D0F9456E8A6C60FDEF6AE1F8495374FC
EE1BA5EF594812C2DC4989142C4E619B7CE1F7A9D8E6C397E843568DE2D37739
7E665FC7D1B45CE90DE5655ADA3CD9BDF14A7ABF516951811FFC622C3ABA055C
11F137376EDA6A7171D5521D300545519BEB944638EC53509E0DE324052E3673
322C6AC272C71F8A69C8E4A889584A09BEA5D8A45CD86B64AA72D48BA14CE675
43363B0200D0091EFDC3E9D6ACA6CBDAFCA8B8E70E75847342D711701DD3549C
C418BC178AC9CBAC8E15B6738B2EA7CCCCF2143462179D0DCD0EEC7641C62214
CC2352F52B4984802BC019ED389078DA4B60204016F2D3BC610F66E7F9EED088
C9397EB104FC5BF1BA4916CC77BA0C325B32CE7A35B301F04B08BF3761DD805D
115EFD6170C249ED2AA8EBE6942A7B54BD64F36F5D6CF3422BBA718E54887EBF
902BB70D80FDAC6FA2B58A6BBED4A6384C81812BEA83BAAC31A779787EA26AED
8343BF45195CE5BE9DD41F1B9B8FF0227688ECA2F0B1A17151BC87A7DD6E2580
44F007CAE572F02C2A7AB0534219A7214E8CE67397BA7CF2633BD59CA5690B48
0FA5A7B8A3A176027EDDF4F5D2D260732672524C1C652D4691942CE4FFE5AE94
73A261BF1B78D93716899F9AAA99FB1016840B40D43E842A437C04475D78C370
BDD7C34A49D5251D3DED21DA3E534C371D33F9C8D22A8E99B9EE8C4D7F0464F9
CC869442EF44CFC2703BDC3587732268BC28BD1B4DB14E123BD0653FC588DF28
60F1D1025CB68EA6BC3C0B06265F801412F50BC2C441B0D304C097C1AF30CC16
30DA251DACD90B265FDDF9CA23A81C416281FD953301483FE8E4AA8DC2DDA47B
17ED8CD4D4721F33A06F8635871EBC201E250047EADE1C1CFC4C57F6DEB25767
2491752C1A2BAAFF8EA91292D2F75B5FAB0EBB3B452996779DDBDCD22830473D
DED1A44C29C95B95517BA05A5BA53345433DA20640C40F378685CD35DECF25CA
43817B56BFC6D3FD17E396F51A28B92D1BBC1D2CC90825D7A0097D593C3F6FEB
A82A95F39B29CE8399AC5FBBAEDC6DF100949FE001F09A28EC6FF29BC48DC186
500567646F44826146085FB4FA9DCCFF82C6FE40B0882E212CF098CA1219658E
978B0938EB3EA6C1CAEE8FBD6FBB912D50CA8AF5731B5C94ECEF585DFBFF90A3
5A6A1898AB825C0C01322574326BE8121CD2ABF2EA25619EAB4495561A15E8C9
2E010C54D6975003C083A09256E9542282C6801F563179F24A9B2594F143069B
5F10E40B495DDB2EA9676BA1ABB2B417B2A1C8C83E2318C448EBEF2C7358AB2C
12EB950B30BE5638CA78756A6247437AEE6055A3042316CE275BD55E636F193B
1BC4F33D7817707E42EED2DE7AD115A5D9F6A2D258971774AA20084716FA3597
EFA1BFE22A37D0F453A05E3C6288C62E5DCFC3AFB54E016BFE3B5BE8831A07C8
87FA563F1A6C3C974856ABDA38B1BAE2EF94E1BC12205893373E8B6BAF26F0B2
DC9D3421A2133749B201476CC0A604CA633CAB0198BAA1AB2FF428D9073527FF
AFADF1260F1002506375FD935DB2437B7682BAD7CE946FEC0F9DB3930F56ADC5
BFBD3DCDD3C8EB1348182C3B70F7557F8540FB681723E7AE947D1D37C3542670
2CB60FC94F4B0975CB853BCC47C593146D1C1BFCC92564BAE929E75CC55F0DBF
9D4DDB3320AD1ADB0F3402E44A5C104689FE2E77F5368295D3A414C29D1FFD32
30CB4A5E36B3E88314B95DCC642D28CC09A6B62A47467EA39B9D39EB6F01B7DA
BDE25A7CD863A5F8809E9E41992B557236EB69D1FEC910648DAD432F4726D302
5E39D9D50EF61CCD3B00B6CEEA5EC14706D3BC6A01D6609A3886DF754E14D24A
89CB7A56F4E15A0176C2A8FB53FC4FE5B245AF9264ED54DD0B73DE04CBDF2C80
6FAF37CDFE725623D745864FD0BC371F5FE38454A25F3B763ADA30218EEC56FE
938764F7FB913E5C93FEF89CF20AAB0AD267BE5CF5C44729C3AB29F6073A3031
A3A9D5EFF3D3FBCCA74F70537B86C3176B829D541DAFC6B2580E5B03D19C781D
16AEC54EAFF587392AD68D3D60E99F28F9758749204E0E763BB6302AE73BA4C0
3C1A2CABD41DC6B2F7C1B09B87575758EA301E9D10345337F13957EED158F8D4
B50F57E694FB50B976F083176493F710BB42D6208CBBF1578BB62F4F9BB8E516
4AA8AFF8748C46BA5B42C702FB5A6D19F76FCBE6A7BCDA3DC12D07D9937906FC
96D48B0D4B348824BC034BC29E4101E70B25B929FA843ED444E82348093E2644
74A0CA5B5C41EA5EA69C542306863F19F1340480B339EB88A468ED08EC0EA55E
DDFA9D49594BBB6E8C1D120359E166BB7F09BFCD1DC11F61226E97AAD79E84F8
64B90B61C1C4BB6310FC3249951646F4C359AB8687B13FE2A19C3FD4B52B06A0
75FBCA4791A917D91459754A5A11E621CC36D13B16014100621BBD41E1DAB679
52E9EE577A8E98A03D93967BE7EF6A6C572CF37E0A98BB8F669A38273F3C7398
551A05DABB2907E3A6EEFD6FE71FC2B4E55FB084DE115093174DDB1BC2153665
5E237C13F010C91C108C71A80C28D494284B531D253054E7072D21565A41D1FE
C0B19E122813E822CCF59730C096D0FDB86FF4CC4A2F5638D98B3247B0E4A513
39C4ED773C0C74EB695D829956716A8C6850439DCBA15337DCA617EA0F5ED394
74DEC4C817EF62B9B2B1861A6EC35A2D8454ED187D15D408DD33B472586D3E78
A810F405BAFF15958E382047FA49887F22B51930E348591FEF77950E12A2EE94
F7DAC740225E2B344A5E8937DD8352CC5BFA36131000B5F7243D19294BF0969D
822C0908B8D5863C68A43D9544A65DDE13D85B40B4B4A1CE4F1696492084DCBD
41117A1CB7A9A0121AC7ECC5C5ACD34ED12292AC1D9F6F2184342AF1C7D68BEA
77490BED0A60CF740B78C03CE3D76B2E779CC6C1B465D62471097D0A19482296
D11C22067A374A768ABE8C2AA4B975372929050386413C0ECAA01D612A637F4A
AAC656825191AE734E5BC76DE996859C46DCFFD14CE5AD27A721991BA16847D4
9614DF8DE4360C05945929484C469320A800C364F9920BA75A5A3872056D6817
FEEE3A7CD3E80F754DCDFF2958623DF55C54E39B19E75C2B41AE6702F615D3A1
C10F79934EB967AE21352BABF4C46B0EACF72057C4CF4DEE98CAF25D07DD4048
8D8A67800C03C26DFB15EED28A26741839230C0A323C52993057E23C973685BA
115B33C482540D35863F6B4FE9682FB78317AC33630BEC9B2AC6BFE0D22EFA4B
894176B67C869BBDBE06B0774E1C82FAA12FE39D26587D707A323E163F71761B
6C9F240C92E9E93263C3BFD8E6F846ED625A72C69A221813661C91771EF79D6C
F593F18EB66794D5A18DAE4AE6F61885F1F00B7B15942F2C98E6B2E577B1F829
66E12B2466F13BC18745B3958D2BA78131BD487745479B27677C502A3A8483FD
A16CA839BB16D9E185F2C3F6314525E45BEDEA83CE776E14D012FD973F43D6EB
3A8E02FBD646CC44A77AAB12B34504C7FA5364073102A1CD1E9E6446DC8CB71F
4C288677334FFD043C122F10353AFA1F70B602547D484C72DF6416822854D645
5E411B260C3DAEA12B55F51F5AFACF3ADFBE111186A08ADBEFB21131F770794D
1037F6A59BD9CDB48E16F25B9F32754B03FE2713A49A0710580B4635D0A45131
FB87A04F2A7159AE73A12B9348855557A4CC906B16A89A23CF00A00A5B041A21
F0569163D70E1EB599A75CAC1853053659EFB22354B5A2E14E8992C366A2AADC
8689219C90BC55ABEE2C5F11012794411DB5C0B02ADF3D7BD4C13D94E35EF6F3
4F8C3304BCE453C5B96DF95C655457486881C17CC0DA1632D3AAB168AAAE2209
1EBCF5DDBA3F62FB2311DA839575976FBC594CB5972DB04494E8C1A84FBDEFAC
9CE95AC904570489A54D747DEB39CD3695D5F744F63F5C0A8AAF20082C877CD2
F70883029C7FA49195640CD9C2A8F2D1298E09083453AB2A57B16A64FA001462
8C3CBD177035A15EC9D1E8C66EAB43FC63AD34D66BD89B8209D57290D502739B
3A2E70C13BB9B9B2DAA27A1B5FF3C5E11EDB3197F0D215B78407476E52D326E2
DE0961209FFC4FB2961C121CA5A628CF4E4B9C8B3E5D230EDCBCA62CC7232566
B858C8778EEC9C514EB0D94819EFF817A56813F91C0AB54B284F2980FFF26EA3
AA9D62A2B87EF5A9E5F406915FAC06F93653E03360BF5581D486FCE2A3F542DE
6D268B4C904365FC61CD6BB9AD636C68B186C3ABB3F11E2B1F5545CBAC37FE5A
9CA5B712DFEE364C11719AEAB9A578AA0F77A6C776DDDC5AB0575A3B77AEBFFF
4A6FE88CD06D3077F946CA8E7BEC5A0FA165C4A0346B4BDC054C003A251F2CA5
A309BCBF40D365451399F738F7D3FD8BE101175E6FC1D0DBC45CB3299AB81D48
1C7C0E58DA5F965331A66503D0F9933E0D9C3CCCA6039715AB201428E2947801
B10ABBB60044CDD84190D63E7D849061AE891E8E52CAFCF2ABA08EED78819B08
B17327563E2289E12EAB82B2178F1AECF4CDFFCD949EED3231D6C664F82D8A21
0B38A77811CEEF9EB71C338D158FE4B1433B1663152ECB92E540FD2377C03650
F0245F6F22853BE8117729A5B9FF8F9505F5BA9ADCE008455152153012A15E28
DAD5A480D49C675C33FA9345ED9E354BDBAF486F58108B4AE91617644D33F40A
6A95FB7BE17EEDBFB3556A30B63F89C3BCB13835D8CEDAE19D05AB62A15C776C
C9934B799034BE1247235905C5DB89B9D07C1B30601D54E730076B594ED6F27E
4979DBBE8FEEE6C46B52E731C24C0A9311B84A5509DE189AA0B841CE5E017F15
E8E4D0413396C68F8A2FC51D26DFC68B936184727F89BF14970A5637666C0D06
A96B67B4395C2ADFAF9C6CDE38C95576A8502D03359AF2DB20E60D0F4BAF28EA
34EC92DBDBE3463F3E2400732768E36B09087833C81A57F736C828888BF70741
A2D103FBD3EBC149733E4EA0B96CD82F62CCF18616C5CF692764D76A1453051E
2CECC55A95D363D37E18C793934657102A6DE9166A54609658FA2401A7DF2E6C
708C67EE997ECD078691A9F9061F9A1344FD3B7E9458CB8B9583C030162032CC
8547764E5886F5AC2917C3B8084E7F5D05D0777B8311ABF5610D2BBC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (technology_review.dvi)
@start /Fa 107[33 33 24[33 37 34 56 38 40 22 28 26 1[40
36 39 59 19 37 16 19 39 37 22 32 41 30 37 33 3[22 1[22
3[67 2[41 35 45 4[63 2[22 1[55 1[37 2[47 41 52 1[30 4[17
33 33 33 33 33 33 33 33 33 33 40 17 22 17 40[41 40 2[{
 TeXBase1Encoding ReEncodeFont }58 66.6667 /URWPalladioL-Roma
rf /Fb 133[40 4[44 22 1[26 2[44 44 66 18 40 1[18 1[44
1[44 44 40 1[44 10[53 1[48 53 57 1[53 1[57 66 2[40 3[48
53 1[57 1[53 13[44 44 44 2[22 42[40 3[{ TeXBase1Encoding ReEncodeFont }
32 79.1666 /NimbusSanL-ReguItal rf /Fc 136[62 44 48 26
44 31 2[48 48 1[22 2[22 48 2[44 1[44 1[44 16[53 62 10[57
57 13[44 44 44 44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }24
79.1666 /NimbusSanL-Bold rf /Fd 133[40 44 41 66 45 48
26 34 31 44 48 43 46 70 23 44 19 23 46 44 26 38 48 35
44 40 3[26 1[26 3[79 57 62 49 42 53 1[48 62 66 75 48
1[26 27 66 60 44 48 61 56 48 62 5[20 20 40 40 40 40 40
40 40 40 40 40 1[20 26 20 2[26 26 22 3[40 31[48 48 2[{
 TeXBase1Encoding ReEncodeFont }70 79.1666 /URWPalladioL-Roma
rf /Fe 134[44 1[66 44 1[26 35 31 1[48 44 48 70 26 48
1[26 1[44 31 40 1[35 48 40 9[79 4[57 1[48 1[66 7[44 1[66
57 3[35 11[40 40 40 49[{ TeXBase1Encoding ReEncodeFont }30
79.1666 /URWPalladioL-Bold rf /Ff 168[87 4[66 1[61 1[66
7[56 1[66 66 15[51 51 51 49[{ TeXBase1Encoding ReEncodeFont }10
91.6666 /NimbusSanL-Bold rf /Fg 166[49 1[69 49 1[45 49
53 1[49 57 53 61 45 53 1[20 1[57 45 49 1[53 53 53 65[{
 TeXBase1Encoding ReEncodeFont }19 73.3333 /NimbusSanL-Bold
rf /Fh 201[32 32 32 32 32 32 49[{ TeXBase1Encoding ReEncodeFont }6
58.3333 /NimbusSanL-Regu rf /Fi 134[33 1[48 1[37 19 33
22 1[37 37 37 56 15 33 15 15 37 37 19 37 37 33 37 37
12[41 8[44 2[48 4[48 44 19[19 46[{ TeXBase1Encoding ReEncodeFont }28
66.6667 /NimbusSanL-Regu rf /Fj 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fk 180[85 2[97 2[71 90 83 20[29
46[{ TeXBase1Encoding ReEncodeFont }6 116.667 /URWPalladioL-Roma
rf /Fl 166[62 1[93 1[73 1[49 62 2[73 78 1[57 68 1[31
78 71 1[57 3[73 65[{ TeXBase1Encoding ReEncodeFont }14
93.3332 /URWPalladioL-Roma rf /Fm 170[156 123 105 3[157
1[189 3[67 1[153 1[122 155 142 122 8[100 5[100 51[{
 TeXBase1Encoding ReEncodeFont }13 200 /URWPalladioL-Roma
rf /Fn 169[116 124 98 84 107 1[97 126 133 151 98 116
5[98 1[113 1[124 65[{ TeXBase1Encoding ReEncodeFont }14
160 /URWPalladioL-Roma rf /Fo 188[144 133 66[{
 TeXBase1Encoding ReEncodeFont }2 200 /URWPalladioL-Bold
rf /Fp 171[107 98 3[133 133 2[124 5[98 1[116 1[124 65[{
 TeXBase1Encoding ReEncodeFont }8 160 /URWPalladioL-Bold
rf /Fq 175[60 1[83 22[50 2[50 1[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }8 100 /URWPalladioL-Roma
rf /Fr 166[53 2[58 3[53 1[48 63 1[76 6[44 49 62 1[49
62 65[{ TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Fs 172[87 111 13[129 118 67[{ TeXBase1Encoding ReEncodeFont }4
166.667 /URWPalladioL-Roma rf /Ft 170[104 82 70 89 105
81 105 111 126 3[45 3[81 1[95 1[104 65[{ TeXBase1Encoding ReEncodeFont }
13 133.333 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -31 705 a @beginspecial 0 @llx
0 @lly 345 @urx 435 @ury 1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 310 1025 a Fs(C)8 b(S)51 b(C)8 b Ft(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Fs(R)8 b Ft(E)g(Q)g(U)g(I)g(R)g(E)g(M)g(E)g(N)g(T)g(S)54
b Fs(D)8 b Ft(O)g(C)g(U)g(M)g(E)g(N)g(T)1488 1225 y Fq(N)t
Fr(O)t(V)t(E)t(M)t(B)t(E)t(R)35 b Fq(1)t(4)t(,)d(2)t(0)t(1)t(7)1141
1725 y Fo(C)10 b Fp(O)g(N)g(N)g(E)g(C)g(T)g Fo(B)g Fp(A)g(S)g(K)g(E)g
(T)1617 3633 y Fq(P)t Fr(R)t(E)t(P)m(A)t(R)5 b(E)g(D)36
b(F)t(O)t(R)1402 3866 y Fm(O)10 b(S)g(U)60 b(M)10 b(I)g(M)g(E)1292
4049 y Fk(D)c Fl(R)g Fk(.)36 b(C)6 b Fl(H)g(I)g(N)g(W)g(E)g(I)g(K)g(E)
33 b Fk(E)6 b Fl(S)g(E)g(O)g(N)g(U)1649 4282 y Fq(P)t
Fr(R)t(E)t(P)m(A)t(R)f(E)g(D)35 b(B)t(Y)1492 4516 y Fm(G)10
b Fn(R)g(O)g(U)g(P)59 b Fm(3)10 b(9)143 4749 y(C)g Fn(O)g(N)g(N)g(E)g
(C)g(T)g Fm(B)g Fn(A)g(S)g(K)g(E)g(T)59 b Fm(D)10 b Fn(E)g(V)g(E)g(L)g
(O)g(P)g(M)g(E)g(N)g(T)57 b Fm(T)10 b Fn(E)g(A)g(M)1440
4932 y Fk(K)c Fl(A)g(I)g(L)m(Y)g(N)33 b Fk(H)6 b Fl(E)g(L)g(L)o(W)g(E)g
(G)g(E)1815 5166 y Fj(Abstract)127 5296 y Fi(This)26
b(document)f(descr)q(ibes)i(the)e(three)h(main)f(par)s(ts)g(of)h(the)f
(ConnectBask)o(et)h(project)g(that)f(Kailyn)h(Hellw)o(ege)g(will)f(be)h
(responsib)o(le)g(f)n(or)f(and)8 5382 y(compares)20 b(and)e(contr)o
(asts)i(diff)n(erent)d(technologies)i(that)f(can)h(be)f(used)h(to)f
(implement)f(those)i(par)s(ts)f(of)g(the)h(project.)p
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 4018 -296 a Fh(1)-148 -144 y Ff(C)t
Fg(O)t(N)t(T)t(E)t(N)t(T)t(S)-150 80 y Fe(1)178 b(Content)25
b(Delivery)f(Networks)2931 b Fd(2)68 224 y(1.1)197 b(Overview)77
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(2)68 368 y(1.2)197 b(Criteria)35 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 512
y(1.3)197 b(Potential)21 b(Choices)61 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(2)365 657 y(1.3.1)196 b(Cloud\003ar)o(e)63
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)365
801 y(1.3.2)196 b(Akamai)35 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)135 b(2)365 945 y(1.3.3)196 b(Amazon)21 b(CloudFr)o(ont)76
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(2)68 1089 y(1.4)197 b(Discussion)44
b(.)e(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(3)68 1234 y(1.5)197 b(Conclusion)28 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)-150 1457
y Fe(2)178 b(W)-6 b(eb)24 b(Development)h(Frameworks)2791
b Fd(3)68 1601 y(2.1)197 b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)68 1745 y(2.2)197
b(Criteria)35 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(3)68 1890 y(2.3)197 b(Potential)21
b(Choices)61 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(3)365 2034 y(2.3.1)196 b(ASP)-10 b(.NET)51 b(.)41 b(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)135 b(3)365 2178 y(2.3.2)196 b(AngularJS)75
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)365
2322 y(2.3.3)196 b(ReactJS)54 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)135 b(4)68 2467 y(2.4)197 b(Discussion)44
b(.)e(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)68 2611 y(2.5)197 b(Conclusion)28 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(4)-150 2834
y Fe(3)178 b(Design)24 b(Patterns)3365 b Fd(4)68 2979
y(3.1)197 b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)135 b(4)68 3123 y(3.2)197 b(Criteria)35
b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)135 b(4)68 3267 y(3.3)197 b(Potential)21 b(Choices)61
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 3411 y(3.3.1)196 b(MVC)65 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(4)365 3556 y(3.3.2)196 b(MVP)73
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(5)365 3700 y(3.3.3)196 b(MVVM)50 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)135 b(5)68 3844 y(3.4)197 b(Discussion)44
b(.)e(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(5)68 3988 y(3.5)197 b(Conclusion)28 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)-150 4212
y Fe(References)3763 b Fd(6)p eop end
%%Page: 2 3
TeXDict begin 2 2 bop 4018 -296 a Fh(2)-148 -144 y Ff(1)96
b(C)t Fg(O)t(N)t(T)t(E)t(N)t(T)33 b Ff(D)t Fg(E)t(L)t(I)t(V)t(E)t(RY)h
Ff(N)t Fg(E)t(T)t(W)s(O)t(R)t(K)t(S)-150 26 y Fc(1.1)79
b(Over)q(vie)o(w)-150 197 y Fd(A)29 b(content)h(delivery)f(network,)h
(or)g(CDN,)f(is)g(a)g(gr)o(oup)g(of)h(servers)f(that)g(ar)o(e)g
(distributed)g(geographically)g(that)f(work)i(together)g(to)-150
341 y(quickly)h(deliver)h(Internet)e(content,)h(such)f(as)g(images,)g
(videos,)h(and)g(HTML)f(pages)g([1].)h(Curr)o(ently)-9
b(,)31 b(most)f(web)h(traf)o(\002c)g(is)f(served)-150
485 y(thr)o(ough)20 b(CDNs,)g(and)h(CDN's)f(can)h(also)f(help)g(pr)o
(otect)g(against)f(some)h(malicious)g(attacks)f([1].Ther)o(e)h(ar)o(e)g
(four)h(main)g(r)o(easons)e(to)i(use)e(a)-150 629 y(CDN:)h(to)f(impr)o
(ove)g(website)g(load)g(times,)g(to)g(r)o(educe)h(bandwidth)g(costs,)e
(to)i(incr)o(ease)f(content)g(availability)-9 b(,)18
b(and)i(to)f(impr)o(ove)g(website)-150 774 y(security)j([1].)-150
1048 y Fc(1.2)79 b(Criteria)-150 1218 y Fd(For)25 b(this)g(pr)o(oject,)
e(security)i(is)f(an)h(important)f(factor)h(to)g(consider)-6
b(.)26 b(Since)e(the)h(ConnectBasket)f(website)g(will)h(likely)g
(contain)g(patient)-150 1362 y(and)d(owner)g(information,)g(it)g(is)f
(important)g(that)g(the)h(website)f(is)g(secur)o(e.)g(Another)h
(important)f(factor)h(to)g(consider)g(for)h(the)e(Connect-)-150
1507 y(Basket)g(pr)o(oject)f(is)i(price.)f(W)-7 b(e)21
b(want)g(the)h(cost)f(to)g(stay)g(as)g(low)g(as)g(possible,)f(and)i(so)
f(choosing)h(a)f(fr)o(ee)h(or)g(low)g(cost)f(CDN)h(is)f(important)-150
1651 y(to)h(the)g(pr)o(oject.)-150 1925 y Fc(1.3)79 b(P)m(otential)23
b(Choices)-150 2095 y Fb(1.3.1)79 b(Cloud\003are)-150
2258 y Fd(The)25 b(CDN)g(that)g(Cloud\003ar)o(e)g(pr)o(ovides)f(is)h
(designed)g(to)h(optimize)e(security)h(and)g(performance,)g(has)g
(multiple)f(price)h(levels,)f(and)h(is)-150 2402 y(easy)k(to)h(set)g
(up)f([2].)i(Cloud\003ar)o(e's)f(CDN)g(pr)o(ovides)f(a)h(\003at)g
(price)g(per)g(month)g(that)g(does)g(not)g(depend)h(on)f(bandwidth)g
([2].)h(Ther)o(e)-150 2547 y(ar)o(e)d(four)i(pricing)f(levels)f([2].)h
(The)f(fr)o(ee)h(version)g(is)g(for)g(personal)g(websites)e([2].)i(The)
g(Pr)o(o)f(version)h(is)g(twenty)f(dollars)h(per)g(month)-150
2691 y(for)36 b(pr)o(ofessional)f(websites)f([2].)i(The)f(Business)f
(version)i(is)f(two)g(hundr)o(ed)h(dollars)g(per)f(month)h(for)g
(websites)f(and)g(businesses)-150 2835 y(r)o(equiring)26
b(advanced)g(security)f(and)h(performance[2].)g(Finally)-9
b(,)26 b(the)g(Enterprise)f(version)h(is)f(for)i(companies)e(r)o
(equiring)h(enterprise-)-150 2979 y(grade)19 b(security)g(and)g
(performance,)g(and)h(Cloud\003ar)o(e)f(muse)f(be)h(contacted)g(to)g
(determine)h(a)f(monthly)g(price)g([2].)g(In)g(addition,)h(setting)-150
3124 y(up)h(Cloud\003ar)o(e)i(is)e(easy)-9 b(,)22 b(taking)f(less)h
(than)f(\002ve)h(minutes)f(to)h(set)g(up)f(a)h(domain.)-150
3361 y Fb(1.3.2)79 b(Akamai)-150 3523 y Fd(Akamai)24
b(serves)f(thirty)i(per)o(cent)f(of)i(Internet)e(traf)o(\002c,)g(and)h
(it)g(optimizes)e(networks)i(for)h(content)f(delivery)g([3].)g
(Akamai's)e(CDN)i(has)-150 3668 y(thr)o(ee)i(components)g([3].)g(The)g
(Aura)g(Edge)h(Exchange)f(allows)g(operators)g(to)h(deliver)f(video)h
(content)f(to)h(customers)e([3].)i(The)f(Aura)-150 3812
y(Contr)o(ol)21 b(System)e(is)g(a)h(set)g(of)h(tools)f(that)f(allows)h
(operators)g(to)g(manage)f(components)h(such)g(as)f(performance)h(and)h
(CDN)f(security)g([3].)-150 3956 y(Lastly)-9 b(,)20 b(Akamai)g(Feder)o
(eation)h(allows)f(operators)g(to)h(work)h(with)f(the)f(Akamai)g
(Intelligent)g(Platform,)h(which)h(is)e(a)h(cloud-computing)-150
4100 y(platform)h([3].)-150 4338 y Fb(1.3.3)79 b(Amaz)o(on)21
b(CloudF)l(ront)-150 4500 y Fd(The)34 b(Amazon)g(CloudFr)o(ont)i(CDN)f
(is)f(built)h(on)g(the)g(Amazon)e(W)-7 b(eb)35 b(Service)f(\(A)-6
b(WS\))35 b(infrastr)o(uctur)o(e,)g(and)g(ther)o(e)f(ar)o(e)g
(forty-four)-150 4645 y(A)-7 b(vailability)27 b(zones)h(in)g(sixteen)g
(r)o(egions,)g(and)h(ther)o(e)f(ar)o(e)g(plans)g(for)h(further)h
(expansion)d([4].)i(This)f(lar)o(ge)g(network)h(pr)o(ovides)f(high)-150
4789 y(performance)g(for)h(customers)f(all)g(over)g(the)g(world)h([4].)
f(CloudFr)o(ont)h(is)f(a)g(highly)g(secur)o(e)f(CDN,)i(and)f(for)h(no)f
(additional)h(cost,)e(all)-150 4933 y(customers)21 b(bene\002t)h(fr)o
(om)h(the)f(pr)o(otections)g(of)h(A)-6 b(WS)21 b(Shield)i(Standar)o(d)e
([4].)i(Amazon)e(CloudFr)o(ont)i(is)f(easily)f(integrated)i(and)f
(works)-150 5077 y(best)e(with)i(other)f(A)-6 b(WS)21
b(services,)g(such)g(as)f(Amazon)h(Simple)f(Storage)h(Service)g(and)g
(Amazon)f(API)h(Gateway)g([4].)g(For)h(pricing,)f(ther)o(e)-150
5222 y(ar)o(e)26 b(no)h(\002xed)g(fees)g(or)g(long)h(term)f(contracts;)
f(payment)g(is)g(only)h(for)h(the)f(data)f(transfer)h(and)g(r)o
(equests)e(used)i(to)g(deliver)g(content)g(to)-150 5366
y(customers)21 b([4].)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 4018 -296 a Fh(3)-150 -144 y Fc(1.4)79
b(Discussion)-150 23 y Fd(Cloud\003ar)o(e)18 b(and)g(Amazon)e(seem)h
(to)h(have)f(opposite)g(pricing)h(systems.)e(Cloud\003ar)o(e)i(has)f(a)
g(\002xed)h(pricing)g(system,)e(wher)o(e)i(the)g(amount)-150
167 y(of)i(traf)o(\002c)f(per)f(month)i(does)f(not)g(af)o(fect)g(how)h
(much)f(is)f(paid.)h(In)g(contrast,)f(for)i(Amazon)e(CloudFr)o(ont)i
(has)e(a)h(variable)f(pricing)h(system,)-150 312 y(wher)o(e)i(payment)f
(is)h(only)h(for)g(the)f(amount)g(of)h(data)e(transfer)i(and)f(r)o
(equests.)f(Akamai)g(does)h(not)h(pr)o(ovide)f(pricing)g(information,)h
(and)-150 456 y(so)i(a)f(price)h(comparison)f(is)g(not)h(possible.)f
(All)g(thr)o(ee)g(have)g(a)h(high)g(level)f(of)h(security)-9
b(,)24 b(and)f(so)h(they)g(would)g(all)f(be)h(good)g(choices)g(for)-150
600 y(that)d(factor)-6 b(.)-150 821 y Fc(1.5)79 b(Conc)n(lusion)-150
988 y Fd(The)22 b(best)g(CDN)h(for)g(this)f(pr)o(oject)g(is)g
(Cloud\003ar)o(e)h(because)e(it)h(has)g(a)g(\002xed)h(cost,)f(which)h
(means)f(ther)o(e)g(will)h(not)g(be)f(any)g(spikes)g(in)g(cost)-150
1132 y(in)30 b(any)f(given)g(month.)g(Amazon)f(CloudFr)o(ont)i(would)g
(be)f(a)g(good)i(CDN,)e(especially)f(since)h(it)h(integrates)e(well)h
(with)h(other)g(A)-6 b(WS)-150 1277 y(services,)23 b(but)g(it)h(seems)f
(to)h(be)g(the)g(best)f(choice)i(only)f(if)g(other)h(A)-6
b(WS)23 b(services)g(ar)o(e)h(being)g(used,)f(and)h(we)g(ar)o(e)g(not)g
(using)f(other)i(A)-6 b(WS)-150 1421 y(services.)-148
1667 y Ff(2)96 b(W)t Fg(E)t(B)31 b Ff(D)t Fg(E)t(V)t(E)t(L)t(O)t(P)t(M)
t(E)t(N)t(T)k Ff(F)t Fg(R)t(A)t(M)t(E)t(W)s(O)t(R)t(K)t(S)-150
1834 y Fc(2.1)79 b(Over)q(vie)o(w)-150 2000 y Fd(A)33
b(web)g(development)f(framework)i(is)f(consider)o(ed)g(to)h(be)e(tools)
h(and)h(r)o(esour)o(ces)e(used)g(by)h(softwar)o(e)g(developers)f(to)i
(cr)o(eate)e(and)-150 2145 y(manage)i(websites)g([)p
Fe(?)q Fd(].)h(W)-7 b(eb)35 b(development)g(frameworks)g(extend)h(the)f
(capabilities)e(of)j(a)f(language)f(and)h(pr)o(ovide)g(libraries)g(so)
-150 2289 y(developers)25 b(do)i(not)f(have)f(to)h(start)e(fr)o(om)j
(scratch)e(and)h(hand-code)h(everything)e([5].)h(A)g(framework)g(may)f
(include)h(libraries,)g(APIs,)-150 2433 y(security)-9
b(,)22 b(and)g(compilers,)g(among)f(other)i(things)f([5].)-150
2654 y Fc(2.2)79 b(Criteria)-150 2821 y Fd(One)27 b(important)f
(criteria)h(for)h(this)e(pr)o(oject)g(for)i(web)e(development)h
(frameworks)g(is)f(that)g(it)h(needs)g(to)f(be)h(easily)f(scalable)g
(to)g(many)-150 2966 y(dif)o(fer)o(ent)h(devices)g(and)f(sizes)g(of)h
(devices.)f(This)g(is)h(important)f(because)f(the)i(ConnectBasket)f
(website)g(will)h(need)g(to)g(be)f(accessible)-150 3110
y(fr)o(om)g(staf)o(f)t('s)f(desktop)g(or)i(laptop)d(computers)h(as)g
(well)h(as)f(a)g(variety)g(of)i(smartphone)d(devices.)i(Another)f(key)h
(factor)g(is)g(it)f(needs)h(to)-150 3254 y(be)g(simple)e(as)h(opposed)h
(to)g(clutter)o(ed)f(with)h(a)f(lar)o(ge)h(number)f(of)i(featur)o(es)d
(that)h(will)h(likely)g(go)h(unused.)e(This)g(pr)o(oject)g(is)g(r)o
(elatively)-150 3398 y(simple,)c(and)h(so)g(tons)g(of)h(featur)o(es)e
(ar)o(e)g(not)h(necessary)-9 b(.)22 b(Additionally)-9
b(,)22 b(a)g(framework)h(that)e(is)h(\003exible)g(would)g(be)g(best.)
-150 3619 y Fc(2.3)79 b(P)m(otential)23 b(Choices)-150
3786 y Fb(2.3.1)79 b(ASP)-14 b(.NET)-150 3946 y Fd(ASP)k(.NET)25
b(was)h(cr)o(eated)h(by)g(Micr)o(osoft,)g(and)g(it)g(is)f(used)h(to)g
(cr)o(eate)f(interactive)h(and)g(data-driven)g(web)f(applications[6)o
(].)h(ASP)-10 b(.NET)-150 4090 y(works)27 b(with)g(HTML)g(to)h(cr)o
(eate)e(dynamic)h(web)g(pages)f([7].)h(One)h(advantage)e(of)i(ASP)-10
b(.NET)25 b(is)i(that)f(it)h(pr)o(ovides)g(built-in)g(W)l(indows)-150
4234 y(authentication,)18 b(so)i(it)f(is)g(secur)o(e)g([7].)g(In)h
(addition,)g(an)f(ASP)-10 b(.NET)18 b(application)g(can)h(be)g(written)
h(in)f(a)h(variety)e(of)j(languages,)c(including)-150
4379 y(C#)22 b(and)g(V)l(isual)f(Basic)h([6].)-150 4579
y Fb(2.3.2)79 b(AngularJS)-150 4739 y Fd(AngularJS)28
b(is)h(a)f(JavaScript)g(based)g(web)h(application)f(framework)h(that)f
(is)h(open)g(sour)o(ce)f(and)h(curr)o(ently)g(maintained)f(by)h(Google)
-150 4883 y([8].)c(AngularJS)f(uses)g(HTML)h(as)f(a)g(template)g(and)h
(extends)f(HTML)h(syntax)e(to)i(describe)g(a)g(website)f(or)h
(application's)e(components)-150 5027 y(easily)29 b([8].)h(AngularJS)f
(pr)o(ovides)g(data)g(binding)i(capability)d(to)i(HTML,)f(pr)o(ovides)g
(r)o(eusable)g(components,)g(and)h(is)f(unit)h(testable,)-150
5172 y(among)g(many)g(other)h(featur)o(es)e([8].)i(In)f(addition,)g
(AngularJS)g(is)g(available)f(on)h(all)g(major)g(br)o(owsers)g(and)g
(smartphones)f([8].)i(One)-150 5316 y(disadvantage)c(of)i(AngularJS)e
(is)h(that)g(it)g(is)g(not)g(secur)o(e,)g(and)g(so)g(server)g(side)g
(authentication)f(is)h(needed)h(to)g(keep)e(an)h(application)-150
5460 y(secur)o(e)21 b([8].)p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 4018 -296 a Fh(4)-150 -144 y Fb(2.3.3)79
b(ReactJS)-150 15 y Fd(ReactJS)21 b(is)h(a)f(JavaScript)g(library)h
(that)f(makes)g(it)h(easy)f(to)h(build)g(user)f(interfaces)h(by)f(cr)o
(eating)h(r)o(eusable)e(UI)h(components[9].)h(ReactJS)-150
160 y(involves)27 b(thinking)g(about)g(everything)g(as)f(a)h(component)
g([9].)h(Advantages)d(of)j(ReactJS)f(include)h(that)e(it)h(can)g(be)h
(used)e(with)i(other)-150 304 y(frameworks,)e(and)f(can)h(be)f(used)g
(on)h(the)f(client)h(side)f(or)i(the)e(server)g(side)h([9].)f(One)h
(major)f(disadvantage)g(of)h(ReactJS)f(is)g(that)g(other)-150
448 y(tools)d(will)g(need)h(to)f(be)g(combined)g(with)h(React)e(to)h
(get)g(a)g(complete)g(set)f(of)i(tools)f(that)f(is)h(r)o(equir)o(ed)g
(for)h(development)f([9].)-150 666 y Fc(2.4)79 b(Discussion)-150
832 y Fd(AngularJS)30 b(and)i(ReactJS)e(ar)o(e)h(both)g(JavaScript)f
(based,)g(while)h(ASP)-10 b(.NET)29 b(is)i(very)g(\003exible)g(because)
f(it)h(can)g(be)g(written)g(in)g(many)-150 977 y(languages,)36
b(including)i(C#)g(and)f(V)l(isual)g(Basic.)g(Angular)g(JS)h(is)f
(useful)g(because)g(it)g(is)g(available)f(on)i(all)g(major)f(br)o
(owsers)g(and)-150 1121 y(smartphones,)29 b(but)h(a)h(downside)g(is)f
(that)h(it)f(is)h(not)g(secur)o(e.)e(In)i(contrast,)f(ASP)-10
b(.NET)29 b(is)h(secur)o(e)g(and)h(pr)o(ovides)f(built-in)h(W)l(indows)
-150 1265 y(authentication.)21 b(ReactJS)h(would)h(be)f(good)h(for)h
(cr)o(eating)e(r)o(eusable)e(components,)i(but)g(it)g(would)h(possibly)
e(r)o(equir)o(e)i(additional)f(tools)-150 1409 y(for)h(successful)e
(development.)g(AngularJS)h(also)f(can)h(easily)g(cr)o(eate)f(r)o
(eusable)g(components.)-150 1627 y Fc(2.5)79 b(Conc)n(lusion)-150
1793 y Fd(ASP)-10 b(.NET)24 b(is)h(the)h(best)f(framework)h(for)g(the)g
(ConnectBasket)f(website.)g(It)g(is)g(\003exible)h(and)f(can)h(be)f
(written)h(in)g(multiple)f(languages,)-150 1938 y(and)d(it)g(has)g
(useful)f(built-in)h(W)l(indows)g(authentication.)-148
2180 y Ff(3)96 b(D)t Fg(E)t(S)t(I)t(G)t(N)33 b Ff(P)l
Fg(A)m(T)t(T)t(E)t(R)t(N)t(S)-150 2346 y Fc(3.1)79 b(Over)q(vie)o(w)
-150 2513 y Fd(Softwar)o(e)32 b(design)g(patterns)f(ar)o(e)h(a)g(very)h
(important)f(part)g(of)h(any)f(softwar)o(e)g(application.)f(One)h(very)
h(important)f(featur)o(e)f(of)j(this)-150 2657 y(pr)o(oject)23
b(is)h(to)g(pr)o(ovide)g(a)f(user)h(interface)g(that)g(will)g(be)g
(accepted)f(by)h(users)f(who)i(ar)o(e)e(r)o(eluctant)g(to)h(change.)g
(This)f(means)h(how)g(users)-150 2801 y(ar)o(e)e(able)g(to)g(interact)g
(with)h(the)f(data)g(is)g(very)h(important)e(and)i(modeling)g(a)f
(system)f(that)h(closely)h(r)o(e\003ects)f(their)g(curr)o(ent)g(system)
g(in)g(a)-150 2946 y(mor)o(e)g(ef)o(\002cient)g(way)g(is)g(critical.)
-150 3163 y Fc(3.2)79 b(Criteria)-150 3330 y Fd(Major)25
b(factors)g(to)g(consider)h(when)g(choosing)f(a)g(softwar)o(e)g(design)
g(pattern)f(for)i(this)f(pr)o(oject)f(is)h(how)h(well)f(will)h(the)f
(system)f(be)h(able)-150 3474 y(to)h(model)g(data)e(in)i(a)f(way)g
(that)g(our)h(system)e(needs)i(it)f(to.)h(W)-7 b(e)25
b(need)h(to)f(have)g(users)g(inputting)g(data)f(into)i(the)f(system)g
(which)h(need)-150 3618 y(to)e(be)g(able)g(to)g(display)f(that)h
(information)g(to)h(other)f(users.)f(Ther)o(e)g(ar)o(e)h(needs)g(for)h
(data)f(to)g(be)g(\002lter)o(ed)g(for)h(speci\002c)e(users)g(as)h(well)
g(as)-150 3763 y(displayed)e(as)f(an)h(overall)g(summary)f(for)i(some)f
(users.)-150 3980 y Fc(3.3)79 b(P)m(otential)23 b(Choices)-150
4147 y Fb(3.3.1)79 b(MVC)-150 4306 y Fd(MVC)30 b(is)f(a)g(softwar)o(e)g
(design)h(pattern)f(for)h(implementing)f(a)h(user)f(interface)g([10].)h
(It)f(separates)e(an)j(application)e(into)i(thr)o(ee)f(parts)-150
4450 y(known)f(as)f(the)g(model,)h(view)-7 b(,)27 b(and)h(contr)o
(oller)g([10].)f(The)h(model)g(is)f(the)g(str)o(uctur)o(e)g(of)i(the)e
(data)g(in)h(the)f(application)g(and)g(how)h(the)-150
4595 y(data)20 b(is)g(r)o(epr)o(esented)f(in)h(the)h(application)e([10)
o(].)i(V)l(iew)f(is)g(the)g(component)h(that)e(makes)h(the)g(data)g
(displayable)f(to)h(the)g(user)g(in)h(a)f(useful)-150
4739 y(way)g([10].)h(The)f(contr)o(oller)i(supplies)d(an)h(interface)h
(between)g(the)f(model)i(and)f(view)f(components,)g(taking)h(the)f
(data)h(fr)o(om)g(the)g(model)-150 4883 y(and)28 b(converting)g(it)f
(into)h(something)f(that)g(can)g(be)h(used)f(by)g(the)h(view)f
(component)h(to)f(display)g(to)h(the)f(user)h([10)o(].)g(MVC)g
(supports)-150 5027 y(the)23 b(development)g(of)h(multiple)e(dif)o(fer)
o(ent)i(views)f(for)h(one)f(model)h(so)f(the)h(same)e(information)i
(can)f(be)g(displayed)g(in)g(multiple)g(ways)-150 5172
y(if)j(that)f(is)h(important)f(for)i(the)e(application)g([10)o(].)h(It)
g(is)f(also)g(a)h(very)g(fast)f(development)g(pr)o(ocess)g(because)f
(one)i(person)g(or)g(team)f(can)-150 5316 y(develop)f(the)g(view)h
(component)f(while)g(another)h(works)f(on)h(the)f(contr)o(oller)h(and)g
(another)f(works)h(on)f(the)g(model)h([10].)f(This)g(design)-150
5460 y(pattern)d(r)o(equir)o(es)h(multiple)f(developer)h(for)h(it)f(to)
g(work)h(pr)o(operly)f([10)o(].)p eop end
%%Page: 5 6
TeXDict begin 5 5 bop 4018 -296 a Fh(5)-150 -144 y Fb(3.3.2)79
b(MVP)-150 19 y Fd(MVP)31 b(is)g(a)g(softwar)o(e)g(design)h(pattern)e
(that)h(is)g(based)g(on)h(similar)f(concepts)f(to)i(the)f(MVC)h(design)
f(pattern)g([11)o(].)h(It)f(separates)e(an)-150 163 y(application)20
b(into)i(four)g(dif)o(fer)o(ent)g(components)f(that)g(ar)o(e)g(r)o
(esponsible)f(for)i(determining)g(how)g(a)f(user)g(can)g(interact)g
(with)h(the)f(system)-150 307 y([11].)g(Those)h(components)f(ar)o(e)g
(the)g(view)-7 b(,)21 b(view)h(interface,)g(pr)o(esenter)-6
b(,)20 b(and)i(model)g([11].)g(The)f(view)g(is)h(r)o(esponsible)e(for)j
(determining)-150 452 y(how)k(the)g(user)f(will)h(see)g(the)f
(information)i(displayed)e(while)h(the)g(view)f(interface)h(connects)g
(the)g(view)g(to)f(the)h(pr)o(esenter)f([11)o(].)h(The)-150
596 y(pr)o(esenter)d(connects)i(the)f(view)h(to)f(the)g(model,)h(which)
g(is)f(r)o(esponsible)f(for)j(the)e(data)g(that)g(is)g(displayed)g(by)g
(the)h(view)f([11)o(].)h(A)f(view)-150 740 y(will)30
b(usually)f(only)h(be)f(connected)i(to)f(one)g(pr)o(esenter)f([11)o(].)
h(T)-7 b(esting)29 b(can)h(be)f(done)i(easily)e(with)h(this)f(design)h
(pattern)f(because)f(all)-150 884 y(interactions)g(ar)o(e)h(done)g(thr)
o(ough)g(an)g(interface)g([11)o(].)g(Development)g(is)f(speed)g(up)h
(by)f(the)h(fact)g(that)f(multiple)g(pr)o(ogrammers)g(can)-150
1029 y(split)21 b(up)h(the)g(components)f(and)i(work)f(on)h(them)f
(separately)e([11].)-150 1266 y Fb(3.3.3)79 b(MVVM)-150
1429 y Fd(MVVM)27 b(is)g(a)g(softwar)o(e)f(design)h(patter)f(that)h(is)
g(an)f(extension)h(of)h(the)f(MVC)g(design)g(pattern)f([12].)h(MVVM)g
(has)g(four)g(components)-150 1573 y(that)j(ar)o(e)g(Model,)h(V)l(iew)
-7 b(,)31 b(Contr)o(oller)-6 b(,)31 b(and)g(V)l(iew)f(Model)i([12)o(].)
f(The)g(MVVM)f(pattern)g(has)g(view)h(models)g(convert)g(data)f(fr)o
(om)h(the)-150 1717 y(model)22 b(layer)g(into)h(something)e(that)h(can)
f(be)h(usable)f(by)h(the)f(view)h(layer)g(which)g(keeps)f(the)h(code)h
(for)g(contr)o(ollers)f(fr)o(om)g(gr)o(owing)h(too)-150
1861 y(lar)o(ge)j([12].)h(In)g(MVVM,)f(the)h(contr)o(oller)g(no)h
(longer)f(depends)g(on)g(the)g(model)g(so)g(it)f(is)h(much)g(easier)f
(to)h(test.)f(V)l(iews)g(ar)o(e)g(only)h(used)-150 2006
y(to)c(pr)o(esent)e(the)i(data)f(they)g(ar)o(e)g(given)h([12)o(].)g
(The)f(view)h(contr)o(oller)g(interacts)f(with)h(both)f(the)h(view)f
(model)h(and)g(view)f(layers)g(and)h(the)-150 2150 y(view)f(model)g
(also)g(interacts)f(with)i(the)f(model)g([12].)-150 2424
y Fc(3.4)79 b(Discussion)-150 2594 y Fd(MVVM)31 b(and)f(MVP)h(ar)o(e)f
(both)h(similar)f(to)g(MVC,)h(and)g(pr)o(ovide)f(some)h(additional)f
(featur)o(es)g(compar)o(ed)g(to)h(MVC.)f(In)h(contrast)f(to)-150
2739 y(the)g(four)g(components)f(of)i(MVVM)e(and)h(MVP)-10
b(,)29 b(MVC)h(only)g(has)f(thr)o(ee)h(components)f(which)h(can)g(make)
f(it)g(a)h(simpler)f(and)h(easier)-150 2883 y(to)d(use)f(pattern.)g
(MVVM)h(and)g(MVP)f(have)h(an)f(additional)h(components)g(which)g
(further)g(modularizes)f(the)h(functionality)g(of)g(each)-150
3027 y(component)22 b(and)g(makes)f(it)h(easier)g(to)g(test.)-150
3301 y Fc(3.5)79 b(Conc)n(lusion)-150 3471 y Fd(The)25
b(best)f(design)h(pattern)f(to)h(use)g(for)g(this)g(pr)o(oject)f(is)h
(MVC.)g(The)g(user)f(interface)h(for)h(this)f(pr)o(oject)f(will)h(not)h
(be)e(very)h(complicated,)-150 3616 y(so,)g(while)g(having)g
(additional)g(components)g(might)g(impr)o(ove)f(testability)-9
b(,)24 b(it)h(will)g(not)g(be)g(worth)h(it)f(for)h(the)f(incr)o(eased)f
(complexity)-9 b(.)-150 3760 y(Having)21 b(thr)o(ee)f(components)h
(also)g(pr)o(ovides)g(the)g(option)g(for)h(dividing)g(the)f(components)
g(between)g(the)g(thr)o(ee)g(person)g(development)-150
3904 y(team,)g(with)h(one)h(team)e(member)h(working)h(on)f(each)g
(component.)p eop end
%%Page: 6 7
TeXDict begin 6 6 bop 4018 -296 a Fh(6)-148 -144 y Ff(R)t
Fg(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t(S)-150 28 y Fa([1])74
b(\223What)18 b(is)i(a)f(cdn?.\224)e(https://www)-6 b(.cloud\003ar)o
(e.com/learning/cdn/what-)t(is-)t(a-)t(cdn/.)-150 141
y([2])74 b(\223Fast,)19 b(global)h(content)e(delivery)h(network.\224)f
(https://www)-6 b(.cloud\003ar)o(e.com/cdn/.)-150 253
y([3])74 b(\223Cdn)18 b(services.\224)i(https://www)-6
b(.akamai.com/us/en/r)o(esour)o(ces/cdn-)t(services.jsp.)-150
366 y([4])74 b(\223Amazon)19 b(cloudfr)o(ont.\224)h
(https://aws.amazon.com/cloudfr)o(ont/.)-150 478 y([5])74
b(C.)18 b(W)-6 b(odehouse,)19 b(\223What)f(is)i(a)f(framework?.\224)g
(https://www)-6 b(.upwork.com/hiring/development/understanding-)t
(softwar)o(e-)t(frameworks/.)-150 591 y([6])74 b(\223Asp.net)18
b(-)h(intr)o(oduction.\224)g(https://www)-6 b
(.tutorialspoint.com/asp.net/asp.net)p 2232 600 34 5
v 34 w(intr)o(oduction.htm.)-150 703 y([7])74 b(A.)18
b(Hasan,)i(\223T)-6 b(op)19 b(12)g(main)h(advantages)f(of)g(asp.net)g
(framework.\224)h(http://www)-6 b(.arpatech.com/blog/top-)t
(advantages-)t(of-)t(asp-)t(net-)t(framework/,)22 b(3)1
816 y(2017.)-150 928 y([8])74 b(\223Angularjs)20 b(-)e(overview)-6
b(.\224)19 b(https://www)-6 b(.tutorialspoint.com/angularjs/angularjs)p
2316 937 V 37 w(overview)g(.htm.)-150 1041 y([9])74 b(\223React.\224)18
b(https://www)-6 b(.tutorialspoint.com/r)o(eactjs/r)o(eactjs)p
1686 1050 V 33 w(overview)g(.htm.)-150 1153 y([10])41
b(Jithin,)138 b(\223What)h(is)g(mvc?)f(advantages)h(and)g
(disadvantages)g(of)g(mv)-7 b(.\224)138 b(https://www)-6
b(.interserver)h(.net/tips/kb/)1 1266 y(mvc-)t(advantages-)t
(disadvantages-)t(mvc/,)18 b(10)i(2016.)-150 1378 y([11])41
b(T)-5 b(.)19 b(Snyder)-5 b(,)20 b(\223Mvc)f(or)i(mvp)e(pattern)40
b(whats)19 b(the)h(dif)o(fer)o(ence?.\224)f(https://www)-6
b(.infragistics.com/community/blogs/todd)p 3342 1387
V 34 w(snyder/ar)o(chive/2007/)1 1491 y(10/17/mvc-)t(or)o(-)t(mvp-)t
(pattern-)t(whats-)t(the-)t(dif)o(fer)o(ence.aspx,)21
b(10)e(2007.)-150 1603 y([12])41 b(B.)13 b(Jacobs,)h(\223What)g(ar)o(e)
h(the)e(bene\002ts)h(of)h(model-view-viewmodel.\224)f
(https://cocoacasts.com/what-)t(ar)o(e-)t(the-)t(bene\002ts-)t(of-)t
(model-)t(view-)t(viewmodel/,)1 1716 y(11)19 b(2016.)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
